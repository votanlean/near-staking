{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0","program":"/Users/alex/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","secp256k1","/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=aa2d6e328e194698","-C","extra-filename=-aa2d6e328e194698","--out-dir","/Users/alex/near/near-staking/contract/target/rls/debug/deps","-L","dependency=/Users/alex/near/near-staking/contract/target/rls/debug/deps","--extern","arrayvec=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libarrayvec-e47cd96fcdceaa10.rmeta","--extern","rand=/Users/alex/near/near-staking/contract/target/rls/debug/deps/librand-bc3e12734bb02e11.rmeta","--cap-lints","allow","-L","native=/Users/alex/near/near-staking/contract/target/rls/debug/build/parity-secp256k1-19f1dd1eae175fc9/out","-l","static=secp256k1","--error-format=json","--sysroot","/Users/alex/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/alex/near/near-staking/contract/target/rls/debug/deps/libsecp256k1-aa2d6e328e194698.rmeta"},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[16894653658848604230,0]},"crate_root":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src","external_crates":[{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18005471550560613154,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5950131627965951498,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2741719692070475021,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2794630430347630357,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11571400143354356751,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7193487377502419209,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3984647143510438201,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12184698882915890589,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[11618273138748747847,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10066305145840536466,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6325594472561512306,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17413800936977720645,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[13105407555381832082,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2532692864303013170,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3831727617617568246,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[14168850698196268560,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[14481778817480203751,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[3413086096283251618,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5901939098322418461,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":20,"id":{"name":"arrayvec","disambiguator":[5128902796573761437,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":21,"id":{"name":"rand","disambiguator":[12180081226988042684,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":22,"id":{"name":"rand_core","disambiguator":[16980629833559164809,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":23,"id":{"name":"getrandom","disambiguator":[1343969361285524632,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":24,"id":{"name":"cfg_if","disambiguator":[12504399371578558457,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":25,"id":{"name":"libc","disambiguator":[11047187019883797682,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":26,"id":{"name":"rand_chacha","disambiguator":[2458407027034428231,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","num":27,"id":{"name":"ppv_lite86","disambiguator":[14773538237570303820,0]}}],"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":502,"byte_end":35322,"line_start":16,"line_end":945,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":502,"byte_end":35322,"line_start":16,"line_end":945,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":40},{"krate":0,"index":75},{"krate":0,"index":162},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":564},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":590},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298}],"decl_id":null,"docs":" # Secp256k1\n Rust bindings for Pieter Wuille's secp256k1 library, which is used for\n fast and accurate manipulation of ECDSA signatures on the secp256k1\n curve. Such signatures are used extensively by the Bitcoin network\n and its derivatives.","sig":null,"attributes":[{"value":"/ # Secp256k1","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":502,"byte_end":517,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ Rust bindings for Pieter Wuille's secp256k1 library, which is used for","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":518,"byte_end":592,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ fast and accurate manipulation of ECDSA signatures on the secp256k1","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":593,"byte_end":664,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ curve. Such signatures are used extensively by the Bitcoin network","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":665,"byte_end":735,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ and its derivatives.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":736,"byte_end":760,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":761,"byte_end":764,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"crate_type = \"lib\"","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":766,"byte_end":788,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"crate_type = \"rlib\"","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":789,"byte_end":812,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":813,"byte_end":837,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"crate_name = \"secp256k1\"","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":838,"byte_end":866,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":890,"byte_end":922,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":923,"byte_end":953,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"deny(non_snake_case)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":954,"byte_end":978,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"deny(unused_mut)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":979,"byte_end":999,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1000,"byte_end":1022,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38}],"decl_id":null,"docs":" # Constants\n Constants related to the API and the underlying curve\n","sig":null,"attributes":[{"value":"/ # Constants","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":39908,"byte_end":39923,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/ Constants related to the API and the underlying curve","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":39924,"byte_end":39981,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40030,"byte_end":40042,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"MESSAGE_SIZE","qualname":"::constants::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a message\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a message","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":39983,"byte_end":40019,"line_start":19,"line_end":19,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40107,"byte_end":40122,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"SECRET_KEY_SIZE","qualname":"::constants::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a secret key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40057,"byte_end":40096,"line_start":22,"line_end":22,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40285,"byte_end":40300,"line_start":27,"line_end":27,"column_start":11,"column_end":26},"name":"PUBLIC_KEY_SIZE","qualname":"::constants::PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a public key array. This only needs to be 65\n but must be 72 for compatibility with the `ArrayVec` library.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a public key array. This only needs to be 65","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40137,"byte_end":40208,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ but must be 72 for compatibility with the `ArrayVec` library.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40209,"byte_end":40274,"line_start":26,"line_end":26,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":29},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40379,"byte_end":40407,"line_start":30,"line_end":30,"column_start":11,"column_end":39},"name":"UNCOMPRESSED_PUBLIC_KEY_SIZE","qualname":"::constants::UNCOMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of an uncompressed public key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of an uncompressed public key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40315,"byte_end":40368,"line_start":29,"line_end":29,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":30},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40483,"byte_end":40509,"line_start":33,"line_end":33,"column_start":11,"column_end":37},"name":"COMPRESSED_PUBLIC_KEY_SIZE","qualname":"::constants::COMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a compressed public key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a compressed public key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40422,"byte_end":40472,"line_start":32,"line_end":32,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":31},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40570,"byte_end":40588,"line_start":36,"line_end":36,"column_start":11,"column_end":29},"name":"MAX_SIGNATURE_SIZE","qualname":"::constants::MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a signature\n","sig":null,"attributes":[{"value":"/ The maximum size of a signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40524,"byte_end":40559,"line_start":35,"line_end":35,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":32},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40649,"byte_end":40671,"line_start":39,"line_end":39,"column_start":11,"column_end":33},"name":"SCHNORR_SIGNATURE_SIZE","qualname":"::constants::SCHNORR_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a Schnorr signature\n","sig":null,"attributes":[{"value":"/ The size of a Schnorr signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40603,"byte_end":40638,"line_start":38,"line_end":38,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":33},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40740,"byte_end":40762,"line_start":42,"line_end":42,"column_start":11,"column_end":33},"name":"COMPACT_SIGNATURE_SIZE","qualname":"::constants::COMPACT_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a compact signature\n","sig":null,"attributes":[{"value":"/ The maximum size of a compact signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40686,"byte_end":40729,"line_start":41,"line_end":41,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":34},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40824,"byte_end":40835,"line_start":45,"line_end":45,"column_start":11,"column_end":22},"name":"CURVE_ORDER","qualname":"::constants::CURVE_ORDER","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The order of the secp256k1 curve\n","sig":null,"attributes":[{"value":"/ The order of the secp256k1 curve","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":40777,"byte_end":40813,"line_start":44,"line_end":44,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":36},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":41109,"byte_end":41120,"line_start":53,"line_end":53,"column_start":11,"column_end":22},"name":"GENERATOR_X","qualname":"::constants::GENERATOR_X","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The X coordinate of the generator\n","sig":null,"attributes":[{"value":"/ The X coordinate of the generator","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":41061,"byte_end":41098,"line_start":52,"line_end":52,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":38},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":41394,"byte_end":41405,"line_start":61,"line_end":61,"column_start":11,"column_end":22},"name":"GENERATOR_Y","qualname":"::constants::GENERATOR_Y","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The Y coordinate of the generator\n","sig":null,"attributes":[{"value":"/ The Y coordinate of the generator","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/constants.rs","byte_start":41346,"byte_end":41383,"line_start":60,"line_end":60,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":40},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdh","qualname":"::ecdh","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":57},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72}],"decl_id":null,"docs":" # ECDH\n Support for shared secret computations","sig":null,"attributes":[{"value":"/ # ECDH","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42108,"byte_end":42118,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/ Support for shared secret computations","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42119,"byte_end":42161,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42162,"byte_end":42165,"line_start":17,"line_end":17,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42384,"byte_end":42396,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::ecdh::SharedSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" A tag used for recovering the public key from a compact signature\n","sig":null,"attributes":[{"value":"/ A tag used for recovering the public key from a compact signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42247,"byte_end":42316,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42362,"byte_end":42372,"line_start":27,"line_end":27,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42528,"byte_end":42531,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"pub fn new(&Secp256k1, &PublicKey, &SecretKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key\n","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42442,"byte_end":42502,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42507,"byte_end":42516,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43228,"byte_end":43235,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"new_raw","qualname":"<SharedSecret>::new_raw","value":"pub fn new_raw(&Secp256k1, &PublicKey, &SecretKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unhashed shared secret from a pubkey and secret key\n","sig":null,"attributes":[{"value":"/ Creates a new unhashed shared secret from a pubkey and secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43133,"byte_end":43202,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43207,"byte_end":43216,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43653,"byte_end":43659,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<SharedSecret>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43566,"byte_end":43627,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43632,"byte_end":43641,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ffi","qualname":"::ffi","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":99},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":113},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":127},{"krate":0,"index":130}],"decl_id":null,"docs":" # FFI bindings\n Direct bindings to the underlying C library functions. These should\n not be needed for most users.\n","sig":null,"attributes":[{"value":"/ # FFI bindings","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":46761,"byte_end":46779,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/ Direct bindings to the underlying C library functions. These should","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":46780,"byte_end":46851,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ not be needed for most users.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":46852,"byte_end":46885,"line_start":18,"line_end":18,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":92},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47013,"byte_end":47033,"line_start":23,"line_end":23,"column_start":11,"column_end":31},"name":"SECP256K1_START_NONE","qualname":"::ffi::SECP256K1_START_NONE","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for context to enable no precomputation\n","sig":null,"attributes":[{"value":"/ Flag for context to enable no precomputation","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":46954,"byte_end":47002,"line_start":22,"line_end":22,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":93},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47127,"byte_end":47149,"line_start":25,"line_end":25,"column_start":11,"column_end":33},"name":"SECP256K1_START_VERIFY","qualname":"::ffi::SECP256K1_START_VERIFY","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for context to enable verification precomputation\n","sig":null,"attributes":[{"value":"/ Flag for context to enable verification precomputation","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47058,"byte_end":47116,"line_start":24,"line_end":24,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":94},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47245,"byte_end":47265,"line_start":27,"line_end":27,"column_start":11,"column_end":31},"name":"SECP256K1_START_SIGN","qualname":"::ffi::SECP256K1_START_SIGN","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for context to enable signing precomputation\n","sig":null,"attributes":[{"value":"/ Flag for context to enable signing precomputation","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47181,"byte_end":47234,"line_start":26,"line_end":26,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":95},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47371,"byte_end":47397,"line_start":29,"line_end":29,"column_start":11,"column_end":37},"name":"SECP256K1_SER_UNCOMPRESSED","qualname":"::ffi::SECP256K1_SER_UNCOMPRESSED","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for keys to indicate uncompressed serialization format\n","sig":null,"attributes":[{"value":"/ Flag for keys to indicate uncompressed serialization format","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47297,"byte_end":47360,"line_start":28,"line_end":28,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":96},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47494,"byte_end":47518,"line_start":31,"line_end":31,"column_start":11,"column_end":35},"name":"SECP256K1_SER_COMPRESSED","qualname":"::ffi::SECP256K1_SER_COMPRESSED","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for keys to indicate compressed serialization format\n","sig":null,"attributes":[{"value":"/ Flag for keys to indicate compressed serialization format","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47422,"byte_end":47483,"line_start":30,"line_end":30,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47989,"byte_end":47996,"line_start":40,"line_end":40,"column_start":10,"column_end":17},"name":"NonceFn","qualname":"::ffi::NonceFn","value":"unsafe extern \"C\" fn(nonce32: *mut c_uchar, msg32: *const c_uchar,\n    key32: *const c_uchar, algo16: *const c_uchar, attempt: c_uint,\n    data: *const c_void)","parent":null,"children":[],"decl_id":null,"docs":" A nonce generation function. Ordinary users of the library\n never need to see this type; only if you need to control\n nonce generation do you need to use it. I have deliberately\n made this hard to do: you have to write your own wrapper\n around the FFI functions to use it. And it's an unsafe type.\n Nonces are generated deterministically by RFC6979 by\n default; there should be no need to ever change this.\n","sig":null,"attributes":[{"value":"/ A nonce generation function. Ordinary users of the library","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47551,"byte_end":47613,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ never need to see this type; only if you need to control","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47614,"byte_end":47674,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/ nonce generation do you need to use it. I have deliberately","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47675,"byte_end":47738,"line_start":35,"line_end":35,"column_start":1,"column_end":64}},{"value":"/ made this hard to do: you have to write your own wrapper","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47739,"byte_end":47799,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/ around the FFI functions to use it. And it's an unsafe type.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47800,"byte_end":47864,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ Nonces are generated deterministically by RFC6979 by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47865,"byte_end":47921,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/ default; there should be no need to ever change this.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":47922,"byte_end":47979,"line_start":39,"line_end":39,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":98},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48778,"byte_end":48788,"line_start":56,"line_end":56,"column_start":10,"column_end":20},"name":"EcdhHashFn","qualname":"::ffi::EcdhHashFn","value":"unsafe extern \"C\" fn(output: *mut c_uchar, x: *const c_uchar,\n    y: *const c_uchar, data: *mut c_void) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" A pointer to a function that applies a hash function to a point","sig":null,"attributes":[{"value":"/ A pointer to a function that applies a hash function to a point","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48353,"byte_end":48420,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48421,"byte_end":48424,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Returns: 1 if a point was successfully hashed. 0 will cause ecdh to fail","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48425,"byte_end":48501,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48502,"byte_end":48505,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Out:    output:     pointer to an array to be filled by the function","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48506,"byte_end":48578,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ In:     x:          pointer to a 32-byte x coordinate","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48579,"byte_end":48636,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/         y:          pointer to a 32-byte y coordinate","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48637,"byte_end":48694,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/         data:       Arbitrary data pointer that is passed through","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48695,"byte_end":48764,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":48765,"byte_end":48768,"line_start":55,"line_end":55,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49398,"byte_end":49405,"line_start":69,"line_end":69,"column_start":23,"column_end":30},"name":"Context","qualname":"::ffi::Context","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Secp256k1 context, containing various precomputed values and such\n needed to do elliptic curve computations. If you create one of these\n with `secp256k1_context_create` you MUST destroy it with\n `secp256k1_context_destroy`, or else you will have a memory leak.\n","sig":null,"attributes":[{"value":"/ A Secp256k1 context, containing various precomputed values and such","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49076,"byte_end":49147,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"/ needed to do elliptic curve computations. If you create one of these","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49148,"byte_end":49220,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ with `secp256k1_context_create` you MUST destroy it with","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49221,"byte_end":49281,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/ `secp256k1_context_destroy`, or else you will have a memory leak.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49282,"byte_end":49351,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49376,"byte_end":49386,"line_start":69,"line_end":69,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49499,"byte_end":49508,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::ffi::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Library-internal representation of a Secp256k1 public key\n","sig":null,"attributes":[{"value":"/ Library-internal representation of a Secp256k1 public key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49415,"byte_end":49476,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"repr(C)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49477,"byte_end":49487,"line_start":72,"line_end":72,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49697,"byte_end":49700,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<PublicKey>::new","value":"pub fn new() -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Create a new (zeroed) public key usable for the FFI interface\n","sig":null,"attributes":[{"value":"/ Create a new (zeroed) public key usable for the FFI interface","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49620,"byte_end":49685,"line_start":78,"line_end":78,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":109},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49948,"byte_end":49957,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ffi::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Library-internal representation of a Secp256k1 signature\n","sig":null,"attributes":[{"value":"/ Library-internal representation of a Secp256k1 signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49865,"byte_end":49925,"line_start":88,"line_end":88,"column_start":1,"column_end":61}},{"value":"repr(C)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49926,"byte_end":49936,"line_start":89,"line_end":89,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50145,"byte_end":50165,"line_start":96,"line_end":96,"column_start":12,"column_end":32},"name":"RecoverableSignature","qualname":"::ffi::RecoverableSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Library-internal representation of a Secp256k1 signature + recovery ID\n","sig":null,"attributes":[{"value":"/ Library-internal representation of a Secp256k1 signature + recovery ID","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50048,"byte_end":50122,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"repr(C)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50123,"byte_end":50133,"line_start":95,"line_end":95,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50375,"byte_end":50378,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"pub fn new() -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a new (zeroed) signature usable for the FFI interface\n","sig":null,"attributes":[{"value":"/ Create a new (zeroed) signature usable for the FFI interface","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50299,"byte_end":50363,"line_start":101,"line_end":101,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50528,"byte_end":50531,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<RecoverableSignature>::new","value":"pub fn new() -> RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Create a new (zeroed) signature usable for the FFI interface\n","sig":null,"attributes":[{"value":"/ Create a new (zeroed) signature usable for the FFI interface","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50452,"byte_end":50516,"line_start":106,"line_end":106,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50678,"byte_end":50690,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::ffi::SharedSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" Library-internal representation of an ECDH shared secret\n","sig":null,"attributes":[{"value":"/ Library-internal representation of an ECDH shared secret","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50595,"byte_end":50655,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"repr(C)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50656,"byte_end":50666,"line_start":111,"line_end":111,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50887,"byte_end":50890,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"pub fn new() -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Create a new (zeroed) signature usable for the FFI interface\n","sig":null,"attributes":[{"value":"/ Create a new (zeroed) signature usable for the FFI interface","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50811,"byte_end":50875,"line_start":117,"line_end":117,"column_start":5,"column_end":69}}]},{"kind":"ForeignStatic","id":{"krate":0,"index":131},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50966,"byte_end":50998,"line_start":122,"line_end":122,"column_start":16,"column_end":48},"name":"secp256k1_nonce_function_rfc6979","qualname":"::ffi::secp256k1_nonce_function_rfc6979","value":"NonceFn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignStatic","id":{"krate":0,"index":132},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":51025,"byte_end":51057,"line_start":124,"line_end":124,"column_start":16,"column_end":48},"name":"secp256k1_nonce_function_default","qualname":"::ffi::secp256k1_nonce_function_default","value":"NonceFn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignStatic","id":{"krate":0,"index":133},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":51084,"byte_end":51119,"line_start":126,"line_end":126,"column_start":16,"column_end":51},"name":"secp256k1_ecdh_hash_function_sha256","qualname":"::ffi::secp256k1_ecdh_hash_function_sha256","value":"EcdhHashFn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignStatic","id":{"krate":0,"index":134},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":51149,"byte_end":51185,"line_start":128,"line_end":128,"column_start":16,"column_end":52},"name":"secp256k1_ecdh_hash_function_default","qualname":"::ffi::secp256k1_ecdh_hash_function_default","value":"EcdhHashFn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":135},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":51227,"byte_end":51251,"line_start":131,"line_end":131,"column_start":12,"column_end":36},"name":"secp256k1_context_create","qualname":"::ffi::secp256k1_context_create","value":"pub unsafe extern \"C\" fn secp256k1_context_create(flags: c_uint)\n-> *mut Context","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":136},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":51296,"byte_end":51319,"line_start":133,"line_end":133,"column_start":12,"column_end":35},"name":"secp256k1_context_clone","qualname":"::ffi::secp256k1_context_clone","value":"pub unsafe extern \"C\" fn secp256k1_context_clone(cx: *mut Context)\n-> *mut Context","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":137},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":51367,"byte_end":51392,"line_start":135,"line_end":135,"column_start":12,"column_end":37},"name":"secp256k1_context_destroy","qualname":"::ffi::secp256k1_context_destroy","value":"pub unsafe extern \"C\" fn secp256k1_context_destroy(cx: *mut Context)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":138},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":51424,"byte_end":51451,"line_start":137,"line_end":137,"column_start":12,"column_end":39},"name":"secp256k1_context_randomize","qualname":"::ffi::secp256k1_context_randomize","value":"pub unsafe extern \"C\" fn secp256k1_context_randomize(cx: *mut Context,\nseed32: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":139},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":51943,"byte_end":51968,"line_start":149,"line_end":149,"column_start":12,"column_end":37},"name":"secp256k1_ec_pubkey_parse","qualname":"::ffi::secp256k1_ec_pubkey_parse","value":"pub unsafe extern \"C\" fn secp256k1_ec_pubkey_parse(cx: *const Context,\npk: *mut PublicKey, input: *const c_uchar, in_len: usize) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":140},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":52143,"byte_end":52172,"line_start":153,"line_end":153,"column_start":12,"column_end":41},"name":"secp256k1_ec_pubkey_serialize","qualname":"::ffi::secp256k1_ec_pubkey_serialize","value":"pub unsafe extern \"C\" fn secp256k1_ec_pubkey_serialize(cx: *const Context,\noutput: *const c_uchar, out_len: *mut usize, pk: *const PublicKey,\ncompressed: c_uint) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":141},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":52443,"byte_end":52478,"line_start":159,"line_end":159,"column_start":12,"column_end":47},"name":"secp256k1_ecdsa_signature_parse_der","qualname":"::ffi::secp256k1_ecdsa_signature_parse_der","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_signature_parse_der(cx:\n    *const Context, sig: *mut Signature, input: *const c_uchar, in_len: usize)\n-> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":142},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":52674,"byte_end":52703,"line_start":163,"line_end":163,"column_start":12,"column_end":41},"name":"ecdsa_signature_parse_der_lax","qualname":"::ffi::ecdsa_signature_parse_der_lax","value":"pub unsafe extern \"C\" fn ecdsa_signature_parse_der_lax(cx: *const Context,\nsig: *mut Signature, input: *const c_uchar, in_len: usize) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":143},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":52887,"byte_end":52926,"line_start":167,"line_end":167,"column_start":12,"column_end":51},"name":"secp256k1_ecdsa_signature_serialize_der","qualname":"::ffi::secp256k1_ecdsa_signature_serialize_der","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_signature_serialize_der(cx:\n    *const Context, output: *const c_uchar, out_len: *mut usize,\nsig: *const Signature) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":144},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":53139,"byte_end":53190,"line_start":171,"line_end":171,"column_start":12,"column_end":63},"name":"secp256k1_ecdsa_recoverable_signature_parse_compact","qualname":"::ffi::secp256k1_ecdsa_recoverable_signature_parse_compact","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_recoverable_signature_parse_compact(cx:\n    *const Context, sig: *mut RecoverableSignature, input64: *const c_uchar,\nrecid: c_int) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":145},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":53430,"byte_end":53485,"line_start":175,"line_end":175,"column_start":12,"column_end":67},"name":"secp256k1_ecdsa_recoverable_signature_serialize_compact","qualname":"::ffi::secp256k1_ecdsa_recoverable_signature_serialize_compact","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_recoverable_signature_serialize_compact(cx:\n    *const Context, output64: *const c_uchar, recid: *mut c_int,\nsig: *const RecoverableSignature) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":146},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":53741,"byte_end":53786,"line_start":179,"line_end":179,"column_start":12,"column_end":57},"name":"secp256k1_ecdsa_recoverable_signature_convert","qualname":"::ffi::secp256k1_ecdsa_recoverable_signature_convert","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_recoverable_signature_convert(cx:\n    *const Context, sig: *mut Signature, input: *const RecoverableSignature)\n-> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":147},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":54001,"byte_end":54036,"line_start":183,"line_end":183,"column_start":12,"column_end":47},"name":"secp256k1_ecdsa_signature_normalize","qualname":"::ffi::secp256k1_ecdsa_signature_normalize","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_signature_normalize(cx:\n    *const Context, out_sig: *mut Signature, in_sig: *const Signature)\n-> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":148},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":54237,"byte_end":54259,"line_start":188,"line_end":188,"column_start":12,"column_end":34},"name":"secp256k1_ecdsa_verify","qualname":"::ffi::secp256k1_ecdsa_verify","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_verify(cx: *const Context,\nsig: *const Signature, msg32: *const c_uchar, pk: *const PublicKey) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":149},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":54506,"byte_end":54526,"line_start":194,"line_end":194,"column_start":12,"column_end":32},"name":"secp256k1_ecdsa_sign","qualname":"::ffi::secp256k1_ecdsa_sign","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_sign(cx: *const Context,\nsig: *mut Signature, msg32: *const c_uchar, sk: *const c_uchar,\nnoncefn: NonceFn, noncedata: *const c_void) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":150},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":54869,"byte_end":54901,"line_start":202,"line_end":202,"column_start":12,"column_end":44},"name":"secp256k1_ecdsa_sign_recoverable","qualname":"::ffi::secp256k1_ecdsa_sign_recoverable","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_sign_recoverable(cx: *const Context,\nsig: *mut RecoverableSignature, msg32: *const c_uchar, sk: *const c_uchar,\nnoncefn: NonceFn, noncedata: *const c_void) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":151},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":55327,"byte_end":55350,"line_start":210,"line_end":210,"column_start":12,"column_end":35},"name":"secp256k1_ecdsa_recover","qualname":"::ffi::secp256k1_ecdsa_recover","value":"pub unsafe extern \"C\" fn secp256k1_ecdsa_recover(cx: *const Context,\npk: *mut PublicKey, sig: *const RecoverableSignature, msg32: *const c_uchar)\n-> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":152},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":55620,"byte_end":55646,"line_start":217,"line_end":217,"column_start":12,"column_end":38},"name":"secp256k1_ec_seckey_verify","qualname":"::ffi::secp256k1_ec_seckey_verify","value":"pub unsafe extern \"C\" fn secp256k1_ec_seckey_verify(cx: *const Context,\nsk: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":153},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":55747,"byte_end":55773,"line_start":220,"line_end":220,"column_start":12,"column_end":38},"name":"secp256k1_ec_pubkey_create","qualname":"::ffi::secp256k1_ec_pubkey_create","value":"pub unsafe extern \"C\" fn secp256k1_ec_pubkey_create(cx: *const Context,\npk: *mut PublicKey, sk: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":154},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":55965,"byte_end":55995,"line_start":226,"line_end":226,"column_start":12,"column_end":42},"name":"secp256k1_ec_privkey_tweak_add","qualname":"::ffi::secp256k1_ec_privkey_tweak_add","value":"pub unsafe extern \"C\" fn secp256k1_ec_privkey_tweak_add(cx: *const Context,\nsk: *mut c_uchar, tweak: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":155},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":56205,"byte_end":56234,"line_start":231,"line_end":231,"column_start":12,"column_end":41},"name":"secp256k1_ec_pubkey_tweak_add","qualname":"::ffi::secp256k1_ec_pubkey_tweak_add","value":"pub unsafe extern \"C\" fn secp256k1_ec_pubkey_tweak_add(cx: *const Context,\npk: *mut PublicKey, tweak: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":156},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":56443,"byte_end":56473,"line_start":236,"line_end":236,"column_start":12,"column_end":42},"name":"secp256k1_ec_privkey_tweak_mul","qualname":"::ffi::secp256k1_ec_privkey_tweak_mul","value":"pub unsafe extern \"C\" fn secp256k1_ec_privkey_tweak_mul(cx: *const Context,\nsk: *mut c_uchar, tweak: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":157},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":56683,"byte_end":56712,"line_start":241,"line_end":241,"column_start":12,"column_end":41},"name":"secp256k1_ec_pubkey_tweak_mul","qualname":"::ffi::secp256k1_ec_pubkey_tweak_mul","value":"pub unsafe extern \"C\" fn secp256k1_ec_pubkey_tweak_mul(cx: *const Context,\npk: *mut PublicKey, tweak: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":158},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":56921,"byte_end":56948,"line_start":246,"line_end":246,"column_start":12,"column_end":39},"name":"secp256k1_ec_pubkey_combine","qualname":"::ffi::secp256k1_ec_pubkey_combine","value":"pub unsafe extern \"C\" fn secp256k1_ec_pubkey_combine(cx: *const Context,\nout: *mut PublicKey, ins: *const *const PublicKey, n: c_int) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":159},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":57208,"byte_end":57222,"line_start":252,"line_end":252,"column_start":12,"column_end":26},"name":"secp256k1_ecdh","qualname":"::ffi::secp256k1_ecdh","value":"pub unsafe extern \"C\" fn secp256k1_ecdh(cx: *const Context,\nout: *mut SharedSecret, point: *const PublicKey, scalar: *const c_uchar,\nhash_fn: EcdhHashFn, data: *mut c_void) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":160},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":57534,"byte_end":57552,"line_start":260,"line_end":260,"column_start":12,"column_end":30},"name":"secp256k1_ecdh_raw","qualname":"::ffi::secp256k1_ecdh_raw","value":"pub unsafe extern \"C\" fn secp256k1_ecdh_raw(cx: *const Context,\nout: *mut SharedSecret, point: *const PublicKey, scalar: *const c_uchar)\n-> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":161},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":57788,"byte_end":57816,"line_start":266,"line_end":266,"column_start":12,"column_end":40},"name":"secp256k1_ec_privkey_inverse","qualname":"::ffi::secp256k1_ec_privkey_inverse","value":"pub unsafe extern \"C\" fn secp256k1_ec_privkey_inverse(cx: *const Context,\nout: *mut c_uchar, scalar: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":162},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"key","qualname":"::key","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":207},{"krate":0,"index":211},{"krate":0,"index":219},{"krate":0,"index":231}],"decl_id":null,"docs":" # Public and secret keys\n","sig":null,"attributes":[{"value":"/ # Public and secret keys","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":58474,"byte_end":58502,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":58769,"byte_end":58778,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::key::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret 256-bit key used as `x` in an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Secret 256-bit key used as `x` in an ECDSA signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":58690,"byte_end":58746,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"repr(C)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":58747,"byte_end":58757,"line_start":27,"line_end":27,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":203},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":59170,"byte_end":59173,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"ONE","qualname":"::key::ONE","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 1 encoded as a secret key\n Deprecated; `static` is not what I want; use `ONE_KEY` instead\n","sig":null,"attributes":[{"value":"/ The number 1 encoded as a secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":59051,"byte_end":59091,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ Deprecated; `static` is not what I want; use `ONE_KEY` instead","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":59092,"byte_end":59158,"line_start":39,"line_end":39,"column_start":1,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":204},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":59465,"byte_end":59473,"line_start":46,"line_end":46,"column_start":11,"column_end":19},"name":"ZERO_KEY","qualname":"::key::ZERO_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 0 encoded as a secret key\n","sig":null,"attributes":[{"value":"/ The number 0 encoded as a secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":59414,"byte_end":59454,"line_start":45,"line_end":45,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":205},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":59777,"byte_end":59784,"line_start":52,"line_end":52,"column_start":11,"column_end":18},"name":"ONE_KEY","qualname":"::key::ONE_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 1 encoded as a secret key\n","sig":null,"attributes":[{"value":"/ The number 1 encoded as a secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":59726,"byte_end":59766,"line_start":51,"line_end":51,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":206},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":60086,"byte_end":60099,"line_start":58,"line_end":58,"column_start":11,"column_end":24},"name":"MINUS_ONE_KEY","qualname":"::key::MINUS_ONE_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number -1 encoded as a secret key\n","sig":null,"attributes":[{"value":"/ The number -1 encoded as a secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":60034,"byte_end":60075,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":473},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":60589,"byte_end":60598,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::key::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Secp256k1 public key, used for verification of signatures\n","sig":null,"attributes":[{"value":"/ A Secp256k1 public key, used for verification of signatures","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":60463,"byte_end":60526,"line_start":63,"line_end":63,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":60827,"byte_end":60830,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<SecretKey>::new","value":"pub fn new<R: RngCore>(&Secp256k1, &mut R) -> SecretKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new random secret key\n","sig":null,"attributes":[{"value":"/ Creates a new random secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":60766,"byte_end":60801,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":60806,"byte_end":60815,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":61222,"byte_end":61232,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SecretKey>::from_slice","value":"pub fn from_slice(&Secp256k1, &[u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SECRET_KEY_SIZE`-byte slice to a secret key\n","sig":null,"attributes":[{"value":"/ Converts a `SECRET_KEY_SIZE`-byte slice to a secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":61137,"byte_end":61196,"line_start":86,"line_end":86,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":61201,"byte_end":61210,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":61898,"byte_end":61908,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"add_assign","qualname":"<SecretKey>::add_assign","value":"pub fn add_assign(&mut Self, &Secp256k1, &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds one secret key to another, modulo the curve order\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":61814,"byte_end":61823,"line_start":105,"line_end":105,"column_start":5,"column_end":14}},{"value":"/ Adds one secret key to another, modulo the curve order","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":61828,"byte_end":61886,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":62328,"byte_end":62338,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<SecretKey>::mul_assign","value":"pub fn mul_assign(&mut Self, &Secp256k1, &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one secret key by another, modulo the curve order\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":62238,"byte_end":62247,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ Multiplies one secret key by another, modulo the curve order","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":62252,"byte_end":62316,"line_start":119,"line_end":119,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":62733,"byte_end":62743,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"inv_assign","qualname":"<SecretKey>::inv_assign","value":"pub fn inv_assign(&mut Self, &Secp256k1) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Inverts (1 / self) this secret key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":62668,"byte_end":62677,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ Inverts (1 / self) this secret key.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":62682,"byte_end":62721,"line_start":132,"line_end":132,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63155,"byte_end":63158,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"new","qualname":"<PublicKey>::new","value":"pub fn new() -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new zeroed out public key\n","sig":null,"attributes":[{"value":"/ Creates a new zeroed out public key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63090,"byte_end":63129,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63134,"byte_end":63143,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63294,"byte_end":63302,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<PublicKey>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether a pubkey is valid\n","sig":null,"attributes":[{"value":"/ Determines whether a pubkey is valid","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63228,"byte_end":63268,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63273,"byte_end":63282,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63557,"byte_end":63563,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PublicKey>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63470,"byte_end":63531,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63536,"byte_end":63545,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63710,"byte_end":63725,"line_start":168,"line_end":168,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"pub fn from_secret_key(&Secp256k1, &SecretKey) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new public key from a secret key.\n","sig":null,"attributes":[{"value":"/ Creates a new public key from a secret key.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63637,"byte_end":63684,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63689,"byte_end":63698,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":64448,"byte_end":64458,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<PublicKey>::from_slice","value":"pub fn from_slice(&Secp256k1, &[u8]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a public key directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a public key directly from a slice","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":64376,"byte_end":64422,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":64427,"byte_end":64436,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":65090,"byte_end":65103,"line_start":204,"line_end":204,"column_start":12,"column_end":25},"name":"serialize_vec","qualname":"<PublicKey>::serialize_vec","value":"pub fn serialize_vec(&Self, &Secp256k1, bool) -> ArrayVec<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values. In compressed form\n the y-coordinate is represented by only a single bit, as x determines\n it up to one bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":64886,"byte_end":64895,"line_start":200,"line_end":200,"column_start":5,"column_end":14}},{"value":"/ Serialize the key as a byte-encoded pair of values. In compressed form","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":64900,"byte_end":64974,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ the y-coordinate is represented by only a single bit, as x determines","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":64979,"byte_end":65052,"line_start":202,"line_end":202,"column_start":5,"column_end":78}},{"value":"/ it up to one bit.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":65057,"byte_end":65078,"line_start":203,"line_end":203,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":65881,"byte_end":65895,"line_start":221,"line_end":221,"column_start":12,"column_end":26},"name":"add_exp_assign","qualname":"<PublicKey>::add_exp_assign","value":"pub fn add_exp_assign(&mut Self, &Secp256k1, &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds the pk corresponding to `other` to the pk `self` in place\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":65789,"byte_end":65798,"line_start":219,"line_end":219,"column_start":5,"column_end":14}},{"value":"/ Adds the pk corresponding to `other` to the pk `self` in place","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":65803,"byte_end":65869,"line_start":220,"line_end":220,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":66486,"byte_end":66496,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"add_assign","qualname":"<PublicKey>::add_assign","value":"pub fn add_assign(&mut Self, &Secp256k1, &PublicKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds another point on the curve in place\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":66416,"byte_end":66425,"line_start":236,"line_end":236,"column_start":5,"column_end":14}},{"value":"/ Adds another point on the curve in place","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":66430,"byte_end":66474,"line_start":237,"line_end":237,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":67096,"byte_end":67106,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<PublicKey>::mul_assign","value":"pub fn mul_assign(&mut Self, &Secp256k1, &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies this point by `secret` scalar\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":67026,"byte_end":67035,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ Multiplies this point by `secret` scalar","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":67040,"byte_end":67084,"line_start":257,"line_end":257,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":491},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1692,"byte_end":1702,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"RecoveryId","qualname":"::RecoveryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A tag used for recovering the public key from a compact signature\n","sig":null,"attributes":[{"value":"/ A tag used for recovering the public key from a compact signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1566,"byte_end":1635,"line_start":61,"line_end":61,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1789,"byte_end":1798,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature\n","sig":null,"attributes":[{"value":"/ An ECDSA signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1710,"byte_end":1732,"line_start":65,"line_end":65,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1935,"byte_end":1955,"line_start":71,"line_end":71,"column_start":12,"column_end":32},"name":"RecoverableSignature","qualname":"::RecoverableSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature with a recovery ID for pubkey recovery\n","sig":null,"attributes":[{"value":"/ An ECDSA signature with a recovery ID for pubkey recovery","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1817,"byte_end":1878,"line_start":69,"line_end":69,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2096,"byte_end":2104,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<RecoveryId>::from_i32","value":"pub fn from_i32(i32) -> Result<RecoveryId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allows library users to create valid recovery IDs from i32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2007,"byte_end":2016,"line_start":74,"line_end":74,"column_start":5,"column_end":14}},{"value":"/ Allows library users to create valid recovery IDs from i32.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2021,"byte_end":2084,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2363,"byte_end":2369,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<RecoveryId>::to_i32","value":"pub fn to_i32(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Allows library users to convert recovery IDs to i32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2281,"byte_end":2290,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/ Allows library users to convert recovery IDs to i32.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2295,"byte_end":2351,"line_start":84,"line_end":84,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2509,"byte_end":2517,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature>::from_der","value":"pub fn from_der(&Secp256k1, &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a DER-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2431,"byte_end":2440,"line_start":91,"line_end":91,"column_start":5,"column_end":14}},{"value":"/ Converts a DER-encoded byte slice to a signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2445,"byte_end":2497,"line_start":92,"line_end":92,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":3252,"byte_end":3264,"line_start":110,"line_end":110,"column_start":12,"column_end":24},"name":"from_der_lax","qualname":"<Signature>::from_der_lax","value":"pub fn from_der_lax(&Secp256k1, &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[{"value":"/ Converts a \"lax DER\"-encoded byte slice to a signature. This is basically","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2953,"byte_end":3030,"line_start":106,"line_end":106,"column_start":5,"column_end":82}},{"value":"/ only useful for validating signatures in the Bitcoin blockchain from before","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":3035,"byte_end":3114,"line_start":107,"line_end":107,"column_start":5,"column_end":84}},{"value":"/ 2016. It should never be used in new applications. This library does not","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":3119,"byte_end":3195,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ support serializing to this \"format\"","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":3200,"byte_end":3240,"line_start":109,"line_end":109,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4875,"byte_end":4886,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"pub fn normalize_s(&mut Self, &Secp256k1)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accomodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[{"value":"/ Normalizes a signature to a \"low S\" form. In ECDSA, signatures are","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":3691,"byte_end":3761,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ of the form (r, s) where r and s are numbers lying in some finite","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":3766,"byte_end":3835,"line_start":123,"line_end":123,"column_start":5,"column_end":74}},{"value":"/ field. The verification equation will pass for (r, s) iff it passes","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":3840,"byte_end":3911,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ for (r, -s), so it is possible to ``modify'' signatures in transit","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":3916,"byte_end":3986,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ by flipping the sign of s. This does not constitute a forgery since","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":3991,"byte_end":4062,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ the signed message still cannot be changed, but for some applications,","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4067,"byte_end":4141,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ changing even the signature itself can be a problem. Such applications","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4146,"byte_end":4220,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ require a \"strong signature\". It is believed that ECDSA is a strong","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4225,"byte_end":4296,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ signature except for this ambiguity in the sign of s, so to accomodate","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4301,"byte_end":4375,"line_start":130,"line_end":130,"column_start":5,"column_end":79}},{"value":"/ these applications libsecp256k1 will only accept signatures for which","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4380,"byte_end":4453,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ s is in the lower half of the field range. This eliminates the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4458,"byte_end":4524,"line_start":132,"line_end":132,"column_start":5,"column_end":71}},{"value":"/ ambiguity.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4529,"byte_end":4543,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4548,"byte_end":4551,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ However, for some systems, signatures with high s-values are considered","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4556,"byte_end":4631,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ valid. (For example, parsing the historic Bitcoin blockchain requires","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4636,"byte_end":4709,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ this.) For these applications we provide this normalization function,","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4714,"byte_end":4787,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ which ensures that the s value lies in the lower half of its range.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":4792,"byte_end":4863,"line_start":138,"line_end":138,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":5316,"byte_end":5322,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Signature>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":5229,"byte_end":5290,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":5295,"byte_end":5304,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":5491,"byte_end":5501,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Signature>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":5396,"byte_end":5465,"line_start":154,"line_end":154,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":5470,"byte_end":5479,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":5647,"byte_end":5660,"line_start":162,"line_end":162,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"pub fn serialize_der(&Self, &Secp256k1) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in DER format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":5579,"byte_end":5588,"line_start":160,"line_end":160,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in DER format","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":5593,"byte_end":5635,"line_start":161,"line_end":161,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":6504,"byte_end":6516,"line_start":189,"line_end":189,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<RecoverableSignature>::from_compact","value":"pub fn from_compact(&Secp256k1, &[u8], RecoveryId)\n-> Result<RecoverableSignature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a compact-encoded byte slice to a signature. This\n representation is nonstandard and defined by the libsecp256k1\n library.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":6329,"byte_end":6338,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ Converts a compact-encoded byte slice to a signature. This","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":6343,"byte_end":6405,"line_start":186,"line_end":186,"column_start":5,"column_end":67}},{"value":"/ representation is nonstandard and defined by the libsecp256k1","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":6410,"byte_end":6475,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ library.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":6480,"byte_end":6492,"line_start":188,"line_end":188,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7204,"byte_end":7210,"line_start":206,"line_end":206,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<RecoverableSignature>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7117,"byte_end":7178,"line_start":204,"line_end":204,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7183,"byte_end":7192,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7379,"byte_end":7396,"line_start":212,"line_end":212,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<RecoverableSignature>::serialize_compact","value":"pub fn serialize_compact(&Self, &Secp256k1) -> (RecoveryId, [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Serializes the recoverable signature in compact format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7295,"byte_end":7304,"line_start":210,"line_end":210,"column_start":5,"column_end":14}},{"value":"/ Serializes the recoverable signature in compact format","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7309,"byte_end":7367,"line_start":211,"line_end":211,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7899,"byte_end":7910,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"to_standard","qualname":"<RecoverableSignature>::to_standard","value":"pub fn to_standard(&Self, &Secp256k1) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Converts a recoverable signature to a non-recoverable one (this is needed\n for verification\n","sig":null,"attributes":[{"value":"/ Converts a recoverable signature to a non-recoverable one (this is needed","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7771,"byte_end":7848,"line_start":223,"line_end":223,"column_start":5,"column_end":82}},{"value":"/ for verification","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7853,"byte_end":7873,"line_start":224,"line_end":224,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":7878,"byte_end":7887,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9194,"byte_end":9201,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" A (hashed) message input to an ECDSA signature\n","sig":null,"attributes":[{"value":"/ A (hashed) message input to an ECDSA signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9132,"byte_end":9182,"line_start":280,"line_end":280,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9428,"byte_end":9438,"line_start":288,"line_end":288,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Message>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MESSAGE_SIZE`-byte slice to a message object\n","sig":null,"attributes":[{"value":"/ Converts a `MESSAGE_SIZE`-byte slice to a message object","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9342,"byte_end":9402,"line_start":286,"line_end":286,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9407,"byte_end":9416,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":565},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10197,"byte_end":10213,"line_start":312,"line_end":312,"column_start":5,"column_end":21},"name":"IncapableContext","qualname":"::Error::IncapableContext","value":"Error::IncapableContext","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" A `Secp256k1` was used for an operation, but it was not created to\n support this (so necessary precomputations have not been done)\n","sig":null,"attributes":[{"value":"/ A `Secp256k1` was used for an operation, but it was not created to","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10051,"byte_end":10121,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ support this (so necessary precomputations have not been done)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10126,"byte_end":10192,"line_start":311,"line_end":311,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":567},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10257,"byte_end":10275,"line_start":314,"line_end":314,"column_start":5,"column_end":23},"name":"IncorrectSignature","qualname":"::Error::IncorrectSignature","value":"Error::IncorrectSignature","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Signature failed verification\n","sig":null,"attributes":[{"value":"/ Signature failed verification","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10219,"byte_end":10252,"line_start":313,"line_end":313,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":569},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10396,"byte_end":10410,"line_start":317,"line_end":317,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`\n constant)\n","sig":null,"attributes":[{"value":"/ Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10281,"byte_end":10373,"line_start":315,"line_end":315,"column_start":5,"column_end":97}},{"value":"/ constant)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10378,"byte_end":10391,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10439,"byte_end":10455,"line_start":319,"line_end":319,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Bad public key\n","sig":null,"attributes":[{"value":"/ Bad public key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10416,"byte_end":10434,"line_start":318,"line_end":318,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10483,"byte_end":10499,"line_start":321,"line_end":321,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Bad signature\n","sig":null,"attributes":[{"value":"/ Bad signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10461,"byte_end":10478,"line_start":320,"line_end":320,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10528,"byte_end":10544,"line_start":323,"line_end":323,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Bad secret key\n","sig":null,"attributes":[{"value":"/ Bad secret key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10505,"byte_end":10523,"line_start":322,"line_end":322,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10574,"byte_end":10591,"line_start":325,"line_end":325,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Bad recovery id\n","sig":null,"attributes":[{"value":"/ Bad recovery id","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10550,"byte_end":10569,"line_start":324,"line_end":324,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":564},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10039,"byte_end":10044,"line_start":309,"line_end":309,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    IncapableContext,\n    IncorrectSignature,\n    InvalidMessage,\n    InvalidPublicKey,\n    InvalidSignature,\n    InvalidSecretKey,\n    InvalidRecoveryId,\n}","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577}],"decl_id":null,"docs":" An ECDSA error\n","sig":null,"attributes":[{"value":"/ An ECDSA error","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9966,"byte_end":9984,"line_start":307,"line_end":307,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11625,"byte_end":11634,"line_start":352,"line_end":352,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"Secp256k1 {  }","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" The secp256k1 engine, used to execute all signature operations\n","sig":null,"attributes":[{"value":"/ The secp256k1 engine, used to execute all signature operations","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11547,"byte_end":11613,"line_start":351,"line_end":351,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":591},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12118,"byte_end":12122,"line_start":366,"line_end":366,"column_start":5,"column_end":9},"name":"None","qualname":"::ContextFlag::None","value":"ContextFlag::None","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" Can neither sign nor verify signatures (cheapest to create, useful\n for cases not involving signatures, such as creating keys from slices)\n","sig":null,"attributes":[{"value":"/ Can neither sign nor verify signatures (cheapest to create, useful","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11964,"byte_end":12034,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ for cases not involving signatures, such as creating keys from slices)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12039,"byte_end":12113,"line_start":365,"line_end":365,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12171,"byte_end":12179,"line_start":368,"line_end":368,"column_start":5,"column_end":13},"name":"SignOnly","qualname":"::ContextFlag::SignOnly","value":"ContextFlag::SignOnly","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" Can sign but not verify signatures\n","sig":null,"attributes":[{"value":"/ Can sign but not verify signatures","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12128,"byte_end":12166,"line_start":367,"line_end":367,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12230,"byte_end":12240,"line_start":370,"line_end":370,"column_start":5,"column_end":15},"name":"VerifyOnly","qualname":"::ContextFlag::VerifyOnly","value":"ContextFlag::VerifyOnly","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" Can verify but not create signatures\n","sig":null,"attributes":[{"value":"/ Can verify but not create signatures","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12185,"byte_end":12225,"line_start":369,"line_end":369,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12287,"byte_end":12291,"line_start":372,"line_end":372,"column_start":5,"column_end":9},"name":"Full","qualname":"::ContextFlag::Full","value":"ContextFlag::Full","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" Can verify and create signatures\n","sig":null,"attributes":[{"value":"/ Can verify and create signatures","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12246,"byte_end":12282,"line_start":371,"line_end":371,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":590},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11946,"byte_end":11957,"line_start":363,"line_end":363,"column_start":10,"column_end":21},"name":"ContextFlag","qualname":"::ContextFlag","value":"pub enum ContextFlag { None, SignOnly, VerifyOnly, Full, }","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597}],"decl_id":null,"docs":" Flags used to determine the capabilities of a `Secp256k1` object;\n the more capabilities, the more expensive it is to create.\n","sig":null,"attributes":[{"value":"/ Flags used to determine the capabilities of a `Secp256k1` object;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11759,"byte_end":11828,"line_start":360,"line_end":360,"column_start":1,"column_end":70}},{"value":"/ the more capabilities, the more expensive it is to create.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11829,"byte_end":11891,"line_start":361,"line_end":361,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13223,"byte_end":13226,"line_start":411,"line_end":411,"column_start":12,"column_end":15},"name":"new","qualname":"<Secp256k1>::new","value":"pub fn new() -> Secp256k1","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13162,"byte_end":13197,"line_start":409,"line_end":409,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13202,"byte_end":13211,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13382,"byte_end":13391,"line_start":416,"line_end":416,"column_start":12,"column_end":21},"name":"with_caps","qualname":"<Secp256k1>::with_caps","value":"pub fn with_caps(ContextFlag) -> Secp256k1","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with the specified capabilities\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with the specified capabilities","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13303,"byte_end":13370,"line_start":415,"line_end":415,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13939,"byte_end":13951,"line_start":427,"line_end":427,"column_start":12,"column_end":24},"name":"without_caps","qualname":"<Secp256k1>::without_caps","value":"pub fn without_caps() -> Secp256k1","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with no capabilities (just de/serialization)\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with no capabilities (just de/serialization)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13847,"byte_end":13927,"line_start":426,"line_end":426,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":14186,"byte_end":14195,"line_start":433,"line_end":433,"column_start":12,"column_end":21},"name":"randomize","qualname":"<Secp256k1>::randomize","value":"pub fn randomize<R: Rng>(&mut Self, &mut R)","parent":null,"children":[],"decl_id":null,"docs":" (Re)randomizes the Secp256k1 context for cheap sidechannel resistence;\n see comment in libsecp256k1 commit d2275795f by Gregory Maxwell\n","sig":null,"attributes":[{"value":"/ (Re)randomizes the Secp256k1 context for cheap sidechannel resistence;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":14028,"byte_end":14102,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ see comment in libsecp256k1 commit d2275795f by Gregory Maxwell","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":14107,"byte_end":14174,"line_start":432,"line_end":432,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":15299,"byte_end":15315,"line_start":454,"line_end":454,"column_start":12,"column_end":28},"name":"generate_keypair","qualname":"<Secp256k1>::generate_keypair","value":"pub fn generate_keypair<R: Rng>(&Self, &mut R)\n-> Result<(key::SecretKey, key::PublicKey), Error>","parent":null,"children":[],"decl_id":null,"docs":" Generates a random keypair. Convenience function for `key::SecretKey::new`\n and `key::PublicKey::from_secret_key`; call those functions directly for\n batch key generation. Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Generates a random keypair. Convenience function for `key::SecretKey::new`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":15048,"byte_end":15126,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/ and `key::PublicKey::from_secret_key`; call those functions directly for","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":15131,"byte_end":15207,"line_start":451,"line_end":451,"column_start":5,"column_end":81}},{"value":"/ batch key generation. Requires a signing-capable context.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":15212,"byte_end":15273,"line_start":452,"line_end":452,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":15278,"byte_end":15287,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":15711,"byte_end":15715,"line_start":463,"line_end":463,"column_start":12,"column_end":16},"name":"sign","qualname":"<Secp256k1>::sign","value":"pub fn sign(&Self, &Message, &key::SecretKey) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":15575,"byte_end":15655,"line_start":461,"line_end":461,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":15660,"byte_end":15699,"line_start":462,"line_end":462,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":16612,"byte_end":16628,"line_start":482,"line_end":482,"column_start":12,"column_end":28},"name":"sign_recoverable","qualname":"<Secp256k1>::sign_recoverable","value":"pub fn sign_recoverable(&Self, &Message, &key::SecretKey)\n-> Result<RecoverableSignature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":16476,"byte_end":16556,"line_start":480,"line_end":480,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":16561,"byte_end":16600,"line_start":481,"line_end":481,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":17590,"byte_end":17597,"line_start":501,"line_end":501,"column_start":12,"column_end":19},"name":"recover","qualname":"<Secp256k1>::recover","value":"pub fn recover(&Self, &Message, &RecoverableSignature)\n-> Result<key::PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Determines the public key for which `sig` is a valid signature for\n `msg`. Requires a verify-capable context.\n","sig":null,"attributes":[{"value":"/ Determines the public key for which `sig` is a valid signature for","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":17458,"byte_end":17528,"line_start":499,"line_end":499,"column_start":5,"column_end":75}},{"value":"/ `msg`. Requires a verify-capable context.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":17533,"byte_end":17578,"line_start":500,"line_end":500,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":18553,"byte_end":18559,"line_start":524,"line_end":524,"column_start":12,"column_end":18},"name":"verify","qualname":"<Secp256k1>::verify","value":"pub fn verify(&Self, &Message, &Signature, &key::PublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `sig` is a valid ECDSA signature for `msg` using the public\n key `pubkey`. Returns `Ok(true)` on success. Note that this function cannot\n be used for Bitcoin consensus checking since there may exist signatures\n which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\n verify-capable context.\n","sig":null,"attributes":[{"value":"/ Checks that `sig` is a valid ECDSA signature for `msg` using the public","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":18173,"byte_end":18248,"line_start":518,"line_end":518,"column_start":5,"column_end":80}},{"value":"/ key `pubkey`. Returns `Ok(true)` on success. Note that this function cannot","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":18253,"byte_end":18332,"line_start":519,"line_end":519,"column_start":5,"column_end":84}},{"value":"/ be used for Bitcoin consensus checking since there may exist signatures","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":18337,"byte_end":18412,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":18417,"byte_end":18495,"line_start":521,"line_end":521,"column_start":5,"column_end":83}},{"value":"/ verify-capable context.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":18500,"byte_end":18527,"line_start":522,"line_end":522,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":18532,"byte_end":18541,"line_start":523,"line_end":523,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42423,"byte_end":42435,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43824,"byte_end":43836,"line_start":66,"line_end":66,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43968,"byte_end":43980,"line_start":74,"line_end":74,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":44134,"byte_end":44146,"line_start":83,"line_end":83,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":44320,"byte_end":44332,"line_start":92,"line_end":92,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":44511,"byte_end":44523,"line_start":101,"line_end":101,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49604,"byte_end":49613,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49762,"byte_end":49771,"line_start":82,"line_end":82,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50283,"byte_end":50292,"line_start":100,"line_end":100,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50425,"byte_end":50445,"line_start":105,"line_end":105,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50792,"byte_end":50804,"line_start":116,"line_end":116,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":58958,"byte_end":58967,"line_start":32,"line_end":32,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":60750,"byte_end":60759,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63074,"byte_end":63083,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":67681,"byte_end":67690,"line_start":274,"line_end":274,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1990,"byte_end":2000,"line_start":73,"line_end":73,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2415,"byte_end":2424,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":6190,"byte_end":6199,"line_start":176,"line_end":176,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":6302,"byte_end":6322,"line_start":184,"line_end":184,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":8291,"byte_end":8311,"line_start":237,"line_end":237,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":8468,"byte_end":8477,"line_start":244,"line_end":244,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":8631,"byte_end":8640,"line_start":253,"line_end":253,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":8814,"byte_end":8823,"line_start":262,"line_end":262,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9002,"byte_end":9011,"line_start":271,"line_end":271,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9328,"byte_end":9335,"line_start":285,"line_end":285,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9865,"byte_end":9872,"line_start":301,"line_end":301,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10687,"byte_end":10692,"line_start":329,"line_end":329,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10849,"byte_end":10854,"line_start":335,"line_end":335,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11711,"byte_end":11720,"line_start":357,"line_end":357,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11745,"byte_end":11754,"line_start":358,"line_end":358,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12384,"byte_end":12395,"line_start":376,"line_end":376,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12525,"byte_end":12534,"line_start":382,"line_end":382,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12726,"byte_end":12735,"line_start":391,"line_end":391,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12824,"byte_end":12833,"line_start":394,"line_end":394,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12859,"byte_end":12868,"line_start":396,"line_end":396,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13034,"byte_end":13043,"line_start":402,"line_end":402,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13146,"byte_end":13155,"line_start":408,"line_end":408,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1514,"byte_end":1523,"line_start":56,"line_end":56,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1533,"byte_end":1537,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":40}},{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1547,"byte_end":1550,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1560,"byte_end":1563,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":162}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":42423,"byte_end":42435,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43824,"byte_end":43836,"line_start":66,"line_end":66,"column_start":34,"column_end":46},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":43968,"byte_end":43980,"line_start":74,"line_end":74,"column_start":28,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":44134,"byte_end":44146,"line_start":83,"line_end":83,"column_start":40,"column_end":52},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":44320,"byte_end":44332,"line_start":92,"line_end":92,"column_start":44,"column_end":56},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ecdh.rs","byte_start":44511,"byte_end":44523,"line_start":101,"line_end":101,"column_start":37,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49604,"byte_end":49613,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":49762,"byte_end":49771,"line_start":82,"line_end":82,"column_start":21,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":9887}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50283,"byte_end":50292,"line_start":100,"line_end":100,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50425,"byte_end":50445,"line_start":105,"line_end":105,"column_start":6,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/ffi.rs","byte_start":50792,"byte_end":50804,"line_start":116,"line_end":116,"column_start":6,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":58958,"byte_end":58967,"line_start":32,"line_end":32,"column_start":49,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":60750,"byte_end":60759,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":63074,"byte_end":63083,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/key.rs","byte_start":67681,"byte_end":67690,"line_start":274,"line_end":274,"column_start":31,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":473},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":1990,"byte_end":2000,"line_start":73,"line_end":73,"column_start":6,"column_end":16},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":2415,"byte_end":2424,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":6190,"byte_end":6199,"line_start":176,"line_end":176,"column_start":31,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":6302,"byte_end":6322,"line_start":184,"line_end":184,"column_start":6,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":8291,"byte_end":8311,"line_start":237,"line_end":237,"column_start":42,"column_end":62},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":8468,"byte_end":8477,"line_start":244,"line_end":244,"column_start":28,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":8631,"byte_end":8640,"line_start":253,"line_end":253,"column_start":40,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":8814,"byte_end":8823,"line_start":262,"line_end":262,"column_start":44,"column_end":53},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9002,"byte_end":9011,"line_start":271,"line_end":271,"column_start":37,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9328,"byte_end":9335,"line_start":285,"line_end":285,"column_start":6,"column_end":13},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":9865,"byte_end":9872,"line_start":301,"line_end":301,"column_start":46,"column_end":53},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10687,"byte_end":10692,"line_start":329,"line_end":329,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":10849,"byte_end":10854,"line_start":335,"line_end":335,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11711,"byte_end":11720,"line_start":357,"line_end":357,"column_start":22,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":11745,"byte_end":11754,"line_start":358,"line_end":358,"column_start":22,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12384,"byte_end":12395,"line_start":376,"line_end":376,"column_start":23,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12525,"byte_end":12534,"line_start":382,"line_end":382,"column_start":16,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12726,"byte_end":12735,"line_start":391,"line_end":391,"column_start":20,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12824,"byte_end":12833,"line_start":394,"line_end":394,"column_start":13,"column_end":22},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":12859,"byte_end":12868,"line_start":396,"line_end":396,"column_start":21,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13034,"byte_end":13043,"line_start":402,"line_end":402,"column_start":15,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-secp256k1-0.7.0/src/lib.rs","byte_start":13146,"byte_end":13155,"line_start":408,"line_end":408,"column_start":6,"column_end":15},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}}]}