{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0","program":"/Users/alex/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","near_vm_logic","--edition=2021","/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=d11ebd0a555c371a","-C","extra-filename=-d11ebd0a555c371a","--out-dir","/Users/alex/near/near-staking/contract/target/rls/debug/deps","-L","dependency=/Users/alex/near/near-staking/contract/target/rls/debug/deps","--extern","base64=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libbase64-998b29efe5d13773.rmeta","--extern","borsh=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libborsh-18dac6d23cc7aaa3.rmeta","--extern","bs58=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libbs58-aa108e3711e25659.rmeta","--extern","byteorder=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libbyteorder-827e1da5be11fd60.rmeta","--extern","near_account_id=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libnear_account_id-8492c4d06b19224c.rmeta","--extern","near_crypto=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libnear_crypto-4f7822aeb93871cf.rmeta","--extern","near_primitives=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libnear_primitives-a648ab95a4f876b1.rmeta","--extern","near_primitives_core=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libnear_primitives_core-8f126cb05783e4bc.rmeta","--extern","near_vm_errors=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libnear_vm_errors-d867147510bb5285.rmeta","--extern","ripemd=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libripemd-7ecbf74a7aaa051c.rmeta","--extern","serde=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libserde-b5c1fdade2c4a982.rmeta","--extern","sha2=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libsha2-2c43ae220ae7e0ad.rmeta","--extern","sha3=/Users/alex/near/near-staking/contract/target/rls/debug/deps/libsha3-a6e0da4ad61af4ad.rmeta","--cap-lints","allow","-L","native=/Users/alex/near/near-staking/contract/target/rls/debug/build/parity-secp256k1-19f1dd1eae175fc9/out","--error-format=json","--sysroot","/Users/alex/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/alex/near/near-staking/contract/target/rls/debug/deps/libnear_vm_logic-d11ebd0a555c371a.rmeta"},"prelude":{"crate_id":{"name":"near_vm_logic","disambiguator":[12502352834529736871,0]},"crate_root":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src","external_crates":[{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18005471550560613154,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5950131627965951498,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2741719692070475021,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2794630430347630357,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11571400143354356751,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7193487377502419209,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3984647143510438201,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12184698882915890589,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[11618273138748747847,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10066305145840536466,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6325594472561512306,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17413800936977720645,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[13105407555381832082,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2532692864303013170,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3831727617617568246,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[14168850698196268560,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[14481778817480203751,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[3413086096283251618,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5901939098322418461,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":20,"id":{"name":"near_primitives_core","disambiguator":[5886128894923374137,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","num":21,"id":{"name":"borsh","disambiguator":[13436648497327014822,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":22,"id":{"name":"borsh_derive","disambiguator":[14028020569766141466,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":23,"id":{"name":"num_rational","disambiguator":[9560582678106493985,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":24,"id":{"name":"num_bigint","disambiguator":[2507242392755443509,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":25,"id":{"name":"num_integer","disambiguator":[8662771135240033167,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":26,"id":{"name":"num_traits","disambiguator":[15491431087661079360,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":27,"id":{"name":"serde","disambiguator":[3565065706092826498,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":28,"id":{"name":"serde_derive","disambiguator":[10284791356192480151,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":29,"id":{"name":"near_account_id","disambiguator":[4688821997668313688,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":30,"id":{"name":"strum","disambiguator":[10397635680940989028,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":31,"id":{"name":"strum_macros","disambiguator":[14799025143180082319,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","num":32,"id":{"name":"sha2","disambiguator":[10901791677962466628,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":33,"id":{"name":"digest","disambiguator":[16249956024414004599,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":34,"id":{"name":"crypto_common","disambiguator":[6146039204976943748,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":35,"id":{"name":"generic_array","disambiguator":[2485798634864027454,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":36,"id":{"name":"typenum","disambiguator":[14272333397416411366,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":37,"id":{"name":"block_buffer","disambiguator":[7880594237551358897,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":38,"id":{"name":"cfg_if","disambiguator":[12504399371578558457,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":39,"id":{"name":"cpufeatures","disambiguator":[4294953869656322583,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":40,"id":{"name":"derive_more","disambiguator":[11526975290013933944,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","num":41,"id":{"name":"bs58","disambiguator":[8064203569432790388,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","num":42,"id":{"name":"base64","disambiguator":[1926888075634301205,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":43,"id":{"name":"near_primitives","disambiguator":[4322677554152602017,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":44,"id":{"name":"chrono","disambiguator":[18055879099020093868,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":45,"id":{"name":"time","disambiguator":[15504483767680981393,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":46,"id":{"name":"libc","disambiguator":[11047187019883797682,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","num":47,"id":{"name":"near_crypto","disambiguator":[14682201658954727555,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":48,"id":{"name":"arrayref","disambiguator":[8789802580795689860,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":49,"id":{"name":"blake2","disambiguator":[10776655202776479754,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":50,"id":{"name":"digest","disambiguator":[14059025957748071497,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":51,"id":{"name":"crypto_mac","disambiguator":[7810989123186768355,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":52,"id":{"name":"subtle","disambiguator":[6675058702709379625,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":53,"id":{"name":"opaque_debug","disambiguator":[16948782062332738104,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":54,"id":{"name":"curve25519_dalek","disambiguator":[2169195227400476483,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","num":55,"id":{"name":"byteorder","disambiguator":[15848204917485597361,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":56,"id":{"name":"rand_core","disambiguator":[16980629833559164809,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":57,"id":{"name":"getrandom","disambiguator":[1343969361285524632,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":58,"id":{"name":"zeroize","disambiguator":[15412172418392579530,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":59,"id":{"name":"zeroize_derive","disambiguator":[9507924376278872511,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":60,"id":{"name":"c2_chacha","disambiguator":[17462468905315447440,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":61,"id":{"name":"ppv_lite86","disambiguator":[14773538237570303820,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":62,"id":{"name":"cipher","disambiguator":[12570206801714215186,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":63,"id":{"name":"ed25519_dalek","disambiguator":[10144645411885549556,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":64,"id":{"name":"ed25519","disambiguator":[9168878806455218392,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":65,"id":{"name":"signature","disambiguator":[44564495973446889,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":66,"id":{"name":"rand","disambiguator":[12180081226988042684,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":67,"id":{"name":"rand_chacha","disambiguator":[2458407027034428231,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":68,"id":{"name":"sha2","disambiguator":[8715565290938449632,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":69,"id":{"name":"block_buffer","disambiguator":[4005684323737465991,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":70,"id":{"name":"once_cell","disambiguator":[15520259933717532497,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":71,"id":{"name":"primitive_types","disambiguator":[4185598664920231889,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":72,"id":{"name":"fixed_hash","disambiguator":[3997561533387764902,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":73,"id":{"name":"static_assertions","disambiguator":[13616640984478814432,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":74,"id":{"name":"rustc_hex","disambiguator":[9565602815383440938,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":75,"id":{"name":"rand","disambiguator":[15934589885539871449,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":76,"id":{"name":"rand_core","disambiguator":[856301156402501831,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":77,"id":{"name":"getrandom","disambiguator":[1255402496452457708,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":78,"id":{"name":"uint","disambiguator":[6484738793919127113,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":79,"id":{"name":"hex","disambiguator":[15894080729648069791,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":80,"id":{"name":"crunchy","disambiguator":[14784339770235494535,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":81,"id":{"name":"impl_codec","disambiguator":[3166945538090898790,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":82,"id":{"name":"parity_scale_codec","disambiguator":[2173379061875577292,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":83,"id":{"name":"parity_scale_codec_derive","disambiguator":[6770156256448137792,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":84,"id":{"name":"arrayvec","disambiguator":[7991000114411321275,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":85,"id":{"name":"byte_slice_cast","disambiguator":[5658090710987815349,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":86,"id":{"name":"impl_trait_for_tuples","disambiguator":[2562609881733038067,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":87,"id":{"name":"secp256k1","disambiguator":[16894653658848604230,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":88,"id":{"name":"arrayvec","disambiguator":[5128902796573761437,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":89,"id":{"name":"thiserror","disambiguator":[14372876615839314148,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":90,"id":{"name":"thiserror_impl","disambiguator":[16955404382885753986,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":91,"id":{"name":"serde_json","disambiguator":[3316143462368702186,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":92,"id":{"name":"itoa","disambiguator":[812920100554604809,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":93,"id":{"name":"ryu","disambiguator":[16088821289450006216,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":94,"id":{"name":"smart_default","disambiguator":[18322671391630829605,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":95,"id":{"name":"near_rpc_error_macro","disambiguator":[5819414936278396603,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":96,"id":{"name":"near_vm_errors","disambiguator":[13982215917385009274,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":97,"id":{"name":"reed_solomon_erasure","disambiguator":[10516426082571277230,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":98,"id":{"name":"smallvec","disambiguator":[5251472382956387382,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":99,"id":{"name":"easy_ext","disambiguator":[14706234831154677311,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","num":100,"id":{"name":"bytesize","disambiguator":[7071316658098479608,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","num":101,"id":{"name":"sha3","disambiguator":[6198394234539410586,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","num":102,"id":{"name":"keccak","disambiguator":[10504826074221934377,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","num":103,"id":{"name":"ripemd","disambiguator":[8207592307458378226,0]}},{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","num":104,"id":{"name":"base64","disambiguator":[437528430787819123,0]}}],"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":0,"byte_end":766,"line_start":1,"line_end":29,"column_start":1,"column_end":44}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":732},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":161942,"byte_end":161951,"line_start":140,"line_end":140,"column_start":37,"column_end":46},"alias_span":null,"name":"serialize","value":"","parent":{"krate":0,"index":737}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162489,"byte_end":162490,"line_start":3,"line_end":3,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":754}},{"kind":"Use","ref_id":{"krate":0,"index":825},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":364,"byte_end":373,"line_start":19,"line_end":19,"column_start":18,"column_end":27},"alias_span":null,"name":"VMContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":398,"byte_end":406,"line_start":20,"line_end":20,"column_start":24,"column_end":32},"alias_span":null,"name":"External","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":408,"byte_end":418,"line_start":20,"line_end":20,"column_start":34,"column_end":44},"alias_span":null,"name":"MemoryLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":420,"byte_end":428,"line_start":20,"line_end":20,"column_start":46,"column_end":54},"alias_span":null,"name":"ValuePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":447,"byte_end":454,"line_start":21,"line_end":21,"column_start":17,"column_end":24},"alias_span":null,"name":"VMLogic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1143},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":456,"byte_end":465,"line_start":21,"line_end":21,"column_start":26,"column_end":35},"alias_span":null,"name":"VMOutcome","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":506,"byte_end":507,"line_start":22,"line_end":22,"column_start":39,"column_end":40},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":256},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":539,"byte_end":546,"line_start":23,"line_end":23,"column_start":31,"column_end":38},"alias_span":null,"name":"profile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":565},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":585,"byte_end":600,"line_start":24,"line_end":24,"column_start":38,"column_end":53},"alias_span":null,"name":"ProtocolVersion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":96,"index":720},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":627,"byte_end":636,"line_start":25,"line_end":25,"column_start":26,"column_end":35},"alias_span":null,"name":"HostError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":96,"index":1535},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":638,"byte_end":650,"line_start":25,"line_end":25,"column_start":37,"column_end":49},"alias_span":null,"name":"VMLogicError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1958},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":678,"byte_end":693,"line_start":26,"line_end":26,"column_start":26,"column_end":41},"alias_span":null,"name":"ReceiptMetadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2007},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":710,"byte_end":720,"line_start":27,"line_end":27,"column_start":16,"column_end":26},"alias_span":null,"name":"ReturnData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":744,"byte_end":765,"line_start":29,"line_end":29,"column_start":22,"column_end":43},"alias_span":null,"name":"with_ext_cost_counter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":0,"byte_end":766,"line_start":1,"line_end":29,"column_start":1,"column_end":44},"name":"","qualname":"::","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":41},{"krate":0,"index":79},{"krate":0,"index":170},{"krate":0,"index":425},{"krate":0,"index":501},{"krate":0,"index":613},{"krate":0,"index":754},{"krate":0,"index":769},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822}],"decl_id":null,"docs":"# near-vm-logic","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":825},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1133,"byte_end":1142,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"VMContext","qualname":"::context::VMContext","value":"VMContext { current_account_id, signer_account_id, signer_account_pk, predecessor_account_id, input, block_index, block_timestamp, epoch_height, account_balance, account_locked_balance, storage_usage, attached_deposit, prepaid_gas, random_seed, view_config, output_data_receivers }","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":1103},{"krate":0,"index":828},{"krate":0,"index":1104},{"krate":0,"index":829},{"krate":0,"index":1105},{"krate":0,"index":830},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":831},{"krate":0,"index":1108},{"krate":0,"index":832},{"krate":0,"index":1109},{"krate":0,"index":833},{"krate":0,"index":834}],"decl_id":null,"docs":" Context for the contract execution.\n","sig":null,"attributes":[{"value":"/ Context for the contract execution.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1082,"byte_end":1121,"line_start":10,"line_end":10,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":826},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1223,"byte_end":1241,"line_start":13,"line_end":13,"column_start":9,"column_end":27},"name":"current_account_id","qualname":"::context::VMContext::current_account_id","value":"near_primitives_core::types::AccountId","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The account id of the current contract that we are executing.\n","sig":null,"attributes":[{"value":"/ The account id of the current contract that we are executing.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1149,"byte_end":1214,"line_start":12,"line_end":12,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":827},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1361,"byte_end":1378,"line_start":16,"line_end":16,"column_start":9,"column_end":26},"name":"signer_account_id","qualname":"::context::VMContext::signer_account_id","value":"near_primitives_core::types::AccountId","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The account id of that signed the original transaction that led to this\n execution.\n","sig":null,"attributes":[{"value":"/ The account id of that signed the original transaction that led to this","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1258,"byte_end":1333,"line_start":14,"line_end":14,"column_start":5,"column_end":80}},{"value":"/ execution.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1338,"byte_end":1352,"line_start":15,"line_end":15,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1563,"byte_end":1580,"line_start":20,"line_end":20,"column_start":9,"column_end":26},"name":"signer_account_pk","qualname":"::context::VMContext::signer_account_pk","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The public key that was used to sign the original transaction that led to\n this execution.\n","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_base58\")","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1395,"byte_end":1448,"line_start":17,"line_end":17,"column_start":5,"column_end":58}},{"value":"/ The public key that was used to sign the original transaction that led to","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1453,"byte_end":1530,"line_start":18,"line_end":18,"column_start":5,"column_end":82}},{"value":"/ this execution.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1535,"byte_end":1554,"line_start":19,"line_end":19,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":828},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1858,"byte_end":1880,"line_start":25,"line_end":25,"column_start":9,"column_end":31},"name":"predecessor_account_id","qualname":"::context::VMContext::predecessor_account_id","value":"near_primitives_core::types::AccountId","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" If this execution is the result of cross-contract call or a callback then\n predecessor is the account that called it.\n If this execution is the result of direct execution of transaction then it\n is equal to `signer_account_id`.\n","sig":null,"attributes":[{"value":"/ If this execution is the result of cross-contract call or a callback then","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1597,"byte_end":1674,"line_start":21,"line_end":21,"column_start":5,"column_end":82}},{"value":"/ predecessor is the account that called it.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1679,"byte_end":1725,"line_start":22,"line_end":22,"column_start":5,"column_end":51}},{"value":"/ If this execution is the result of direct execution of transaction then it","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1730,"byte_end":1808,"line_start":23,"line_end":23,"column_start":5,"column_end":83}},{"value":"/ is equal to `signer_account_id`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1813,"byte_end":1849,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2081,"byte_end":2086,"line_start":29,"line_end":29,"column_start":9,"column_end":14},"name":"input","qualname":"::context::VMContext::input","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The input to the contract call.\n Encoded as base64 string to be able to pass input in borsh binary format.\n","sig":null,"attributes":[{"value":"/ The input to the contract call.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1897,"byte_end":1932,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/ Encoded as base64 string to be able to pass input in borsh binary format.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":1937,"byte_end":2014,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"serde(with = \"crate::serde_with::bytes_as_base64\")","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2019,"byte_end":2072,"line_start":28,"line_end":28,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":829},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2182,"byte_end":2193,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"name":"block_index","qualname":"::context::VMContext::block_index","value":"u64","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The current block height.\n","sig":null,"attributes":[{"value":"/ The current block height.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2101,"byte_end":2130,"line_start":30,"line_end":30,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2358,"byte_end":2373,"line_start":35,"line_end":35,"column_start":9,"column_end":24},"name":"block_timestamp","qualname":"::context::VMContext::block_timestamp","value":"u64","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).\n","sig":null,"attributes":[{"value":"/ The current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2212,"byte_end":2311,"line_start":33,"line_end":33,"column_start":5,"column_end":104}},{"value":"serde(with = \"u64_dec_format\")","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2316,"byte_end":2349,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":830},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2422,"byte_end":2434,"line_start":37,"line_end":37,"column_start":9,"column_end":21},"name":"epoch_height","qualname":"::context::VMContext::epoch_height","value":"u64","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The current epoch height.\n","sig":null,"attributes":[{"value":"/ The current epoch height.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2384,"byte_end":2413,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2656,"byte_end":2671,"line_start":42,"line_end":42,"column_start":9,"column_end":24},"name":"account_balance","qualname":"::context::VMContext::account_balance","value":"u128","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The balance attached to the given account. Excludes the `attached_deposit` that was\n attached to the transaction.\n","sig":null,"attributes":[{"value":"/ The balance attached to the given account. Excludes the `attached_deposit` that was","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2454,"byte_end":2541,"line_start":39,"line_end":39,"column_start":5,"column_end":92}},{"value":"/ attached to the transaction.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2546,"byte_end":2578,"line_start":40,"line_end":40,"column_start":5,"column_end":37}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2583,"byte_end":2647,"line_start":41,"line_end":41,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2818,"byte_end":2840,"line_start":45,"line_end":45,"column_start":9,"column_end":31},"name":"account_locked_balance","qualname":"::context::VMContext::account_locked_balance","value":"u128","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The balance of locked tokens on the given account.\n","sig":null,"attributes":[{"value":"/ The balance of locked tokens on the given account.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2686,"byte_end":2740,"line_start":43,"line_end":43,"column_start":5,"column_end":59}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2745,"byte_end":2809,"line_start":44,"line_end":44,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":831},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2925,"byte_end":2938,"line_start":47,"line_end":47,"column_start":9,"column_end":22},"name":"storage_usage","qualname":"::context::VMContext::storage_usage","value":"u64","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The account's storage usage before the contract execution\n","sig":null,"attributes":[{"value":"/ The account's storage usage before the contract execution","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2855,"byte_end":2916,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3162,"byte_end":3178,"line_start":51,"line_end":51,"column_start":9,"column_end":25},"name":"attached_deposit","qualname":"::context::VMContext::attached_deposit","value":"u128","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The balance that was attached to the call that will be immediately deposited before the\n contract execution starts.\n","sig":null,"attributes":[{"value":"/ The balance that was attached to the call that will be immediately deposited before the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":2958,"byte_end":3049,"line_start":48,"line_end":48,"column_start":5,"column_end":96}},{"value":"/ contract execution starts.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3054,"byte_end":3084,"line_start":49,"line_end":49,"column_start":5,"column_end":35}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3089,"byte_end":3153,"line_start":50,"line_end":50,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":832},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3276,"byte_end":3287,"line_start":53,"line_end":53,"column_start":9,"column_end":20},"name":"prepaid_gas","qualname":"::context::VMContext::prepaid_gas","value":"u64","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" The gas attached to the call that can be used to pay for the gas fees.\n","sig":null,"attributes":[{"value":"/ The gas attached to the call that can be used to pay for the gas fees.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3193,"byte_end":3267,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3396,"byte_end":3407,"line_start":56,"line_end":56,"column_start":9,"column_end":20},"name":"random_seed","qualname":"::context::VMContext::random_seed","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" Initial seed for randomness\n","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_base58\")","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3298,"byte_end":3351,"line_start":54,"line_end":54,"column_start":5,"column_end":58}},{"value":"/ Initial seed for randomness","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3356,"byte_end":3387,"line_start":55,"line_end":55,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":833},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3679,"byte_end":3690,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"name":"view_config","qualname":"::context::VMContext::view_config","value":"std::option::Option<near_primitives_core::config::ViewConfig>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" If Some, it means that execution is made in a view mode and defines its configuration.\n View mode means that only read-only operations are allowed.\n See <https://nomicon.io/Proposals/0018-view-change-method.html> for more details.\n","sig":null,"attributes":[{"value":"/ If Some, it means that execution is made in a view mode and defines its configuration.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3422,"byte_end":3512,"line_start":57,"line_end":57,"column_start":5,"column_end":95}},{"value":"/ View mode means that only read-only operations are allowed.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3517,"byte_end":3580,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ See <https://nomicon.io/Proposals/0018-view-change-method.html> for more details.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3585,"byte_end":3670,"line_start":59,"line_end":59,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":834},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3894,"byte_end":3915,"line_start":63,"line_end":63,"column_start":9,"column_end":30},"name":"output_data_receivers","qualname":"::context::VMContext::output_data_receivers","value":"std::vec::Vec<near_primitives_core::types::AccountId>","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" How many `DataReceipt`'s should receive this execution result. This should be empty if\n this function call is a part of a batch and it is not the last action.\n","sig":null,"attributes":[{"value":"/ How many `DataReceipt`'s should receive this execution result. This should be empty if","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3716,"byte_end":3806,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/ this function call is a part of a batch and it is not the last action.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3811,"byte_end":3885,"line_start":62,"line_end":62,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3964,"byte_end":3971,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"is_view","qualname":"<VMContext>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4323,"byte_end":4333,"line_start":9,"line_end":9,"column_start":11,"column_end":21},"name":"MemoryLike","qualname":"::dependencies::MemoryLike","value":"MemoryLike","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" An abstraction over the memory of the smart contract.\n","sig":null,"attributes":[{"value":"/ An abstraction over the memory of the smart contract.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4255,"byte_end":4312,"line_start":8,"line_end":8,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4435,"byte_end":4446,"line_start":11,"line_end":11,"column_start":8,"column_end":19},"name":"fits_memory","qualname":"::dependencies::MemoryLike::fits_memory","value":"pub fn fits_memory(&Self, u64, u64) -> bool","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Returns whether the memory interval is completely inside the smart contract memory.\n","sig":null,"attributes":[{"value":"/ Returns whether the memory interval is completely inside the smart contract memory.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4340,"byte_end":4427,"line_start":10,"line_end":10,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4648,"byte_end":4659,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"read_memory","qualname":"::dependencies::MemoryLike::read_memory","value":"pub fn read_memory(&Self, u64, &mut [u8])","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Reads the content of the given memory interval.","sig":null,"attributes":[{"value":"/ Reads the content of the given memory interval.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4491,"byte_end":4542,"line_start":13,"line_end":13,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4547,"byte_end":4550,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4555,"byte_end":4567,"line_start":15,"line_end":15,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4572,"byte_end":4575,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If memory interval is outside the smart contract memory.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4580,"byte_end":4640,"line_start":17,"line_end":17,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4843,"byte_end":4857,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"read_memory_u8","qualname":"::dependencies::MemoryLike::read_memory_u8","value":"pub fn read_memory_u8(&Self, u64) -> u8","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Reads a single byte from the memory.","sig":null,"attributes":[{"value":"/ Reads a single byte from the memory.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4705,"byte_end":4745,"line_start":20,"line_end":20,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4750,"byte_end":4753,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4758,"byte_end":4770,"line_start":22,"line_end":22,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4775,"byte_end":4778,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If pointer is outside the smart contract memory.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4783,"byte_end":4835,"line_start":24,"line_end":24,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5057,"byte_end":5069,"line_start":32,"line_end":32,"column_start":8,"column_end":20},"name":"write_memory","qualname":"::dependencies::MemoryLike::write_memory","value":"pub fn write_memory(&mut Self, u64, &[u8])","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Writes the buffer into the smart contract memory.","sig":null,"attributes":[{"value":"/ Writes the buffer into the smart contract memory.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4890,"byte_end":4943,"line_start":27,"line_end":27,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4948,"byte_end":4951,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4956,"byte_end":4968,"line_start":29,"line_end":29,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4973,"byte_end":4976,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ If `offset + buffer.len()` is outside the smart contract memory.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":4981,"byte_end":5049,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":65},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5387,"byte_end":5395,"line_start":40,"line_end":40,"column_start":11,"column_end":19},"name":"ValuePtr","qualname":"::dependencies::ValuePtr","value":"ValuePtr","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" Logical pointer to a value in storage.\n Allows getting value length before getting the value itself. This is needed so that runtime\n can charge gas before accessing a potentially large value.\n","sig":null,"attributes":[{"value":"/ Logical pointer to a value in storage.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5175,"byte_end":5217,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/ Allows getting value length before getting the value itself. This is needed so that runtime","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5218,"byte_end":5313,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"/ can charge gas before accessing a potentially large value.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5314,"byte_end":5376,"line_start":39,"line_end":39,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5445,"byte_end":5448,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"len","qualname":"::dependencies::ValuePtr::len","value":"pub fn len(&Self) -> u32","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":" Returns the length of the value\n","sig":null,"attributes":[{"value":"/ Returns the length of the value","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5402,"byte_end":5437,"line_start":41,"line_end":41,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5648,"byte_end":5653,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"deref","qualname":"::dependencies::ValuePtr::deref","value":"pub fn deref(&Self) -> Result<Vec<u8>>","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":" Dereferences the pointer.\n Takes a box because currently runtime code uses dynamic dispatch.\n # Errors\n StorageError if reading from storage fails\n","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5469,"byte_end":5498,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/ Takes a box because currently runtime code uses dynamic dispatch.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5503,"byte_end":5572,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5577,"byte_end":5589,"line_start":46,"line_end":46,"column_start":5,"column_end":17}},{"value":"/ StorageError if reading from storage fails","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5594,"byte_end":5640,"line_start":47,"line_end":47,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5753,"byte_end":5761,"line_start":52,"line_end":52,"column_start":11,"column_end":19},"name":"External","qualname":"::dependencies::External","value":"External","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" An external blockchain interface for the Runtime logic\n","sig":null,"attributes":[{"value":"/ An external blockchain interface for the Runtime logic","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5684,"byte_end":5742,"line_start":51,"line_end":51,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6291,"byte_end":6302,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"storage_set","qualname":"::dependencies::External::storage_set","value":"pub fn storage_set(&mut Self, &[u8], &[u8]) -> Result<()>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Write `value` to the `key` of the storage trie associated with the current account.","sig":null,"attributes":[{"value":"/ Write `value` to the `key` of the storage trie associated with the current account.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5768,"byte_end":5855,"line_start":53,"line_end":53,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5860,"byte_end":5863,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5868,"byte_end":5881,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5886,"byte_end":5889,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5894,"byte_end":5901,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5906,"byte_end":5968,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":5973,"byte_end":6007,"line_start":59,"line_end":59,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6012,"byte_end":6015,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6020,"byte_end":6067,"line_start":61,"line_end":61,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(external.storage_set(b\"key42\", b\"value1337\"), Ok(()));","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6072,"byte_end":6141,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ // Should return an old value if the key exists","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6146,"byte_end":6197,"line_start":63,"line_end":63,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(external.storage_set(b\"key42\", b\"new_value\"), Ok(()));","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6202,"byte_end":6271,"line_start":64,"line_end":64,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6276,"byte_end":6283,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7179,"byte_end":7190,"line_start":89,"line_end":89,"column_start":8,"column_end":19},"name":"storage_get","qualname":"::dependencies::External::storage_get","value":"pub fn storage_get<'a>(&'a Self, &[u8])\n-> Result<Option<Box<dyn ValuePtr + 'a>>>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Read `key` from the storage trie associated with the current account.","sig":null,"attributes":[{"value":"/ Read `key` from the storage trie associated with the current account.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6360,"byte_end":6433,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6438,"byte_end":6441,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6446,"byte_end":6461,"line_start":70,"line_end":70,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6466,"byte_end":6469,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ * `key` - the key to read","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6474,"byte_end":6503,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6508,"byte_end":6511,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6516,"byte_end":6528,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6533,"byte_end":6536,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This function could return [`VMError::ExternalError`].","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6541,"byte_end":6599,"line_start":76,"line_end":76,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6604,"byte_end":6607,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6612,"byte_end":6625,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6630,"byte_end":6637,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6642,"byte_end":6704,"line_start":80,"line_end":80,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::{External, ValuePtr};","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6709,"byte_end":6755,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6760,"byte_end":6763,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6768,"byte_end":6815,"line_start":83,"line_end":83,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6820,"byte_end":6878,"line_start":84,"line_end":84,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(external.storage_get(b\"key42\").unwrap().map(|ptr| ptr.deref().unwrap()), Some(b\"value1337\".to_vec()));","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":6883,"byte_end":7000,"line_start":85,"line_end":85,"column_start":5,"column_end":122}},{"value":"/ // Returns Ok(None) if there is no value for a key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7005,"byte_end":7059,"line_start":86,"line_end":86,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(external.storage_get(b\"no_key\").unwrap().map(|ptr| ptr.deref().unwrap()), None);","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7064,"byte_end":7159,"line_start":87,"line_end":87,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7164,"byte_end":7171,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7990,"byte_end":8004,"line_start":111,"line_end":111,"column_start":8,"column_end":22},"name":"storage_remove","qualname":"::dependencies::External::storage_remove","value":"pub fn storage_remove(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Removes the `key` from the storage trie associated with the current account.","sig":null,"attributes":[{"value":"/ Removes the `key` from the storage trie associated with the current account.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7265,"byte_end":7345,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7350,"byte_end":7353,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The operation will succeed even if the `key` does not exist.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7358,"byte_end":7422,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7427,"byte_end":7430,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7435,"byte_end":7450,"line_start":95,"line_end":95,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7455,"byte_end":7458,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * `key` - the key to remove","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7463,"byte_end":7494,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7499,"byte_end":7502,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7507,"byte_end":7520,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7525,"byte_end":7532,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7537,"byte_end":7599,"line_start":101,"line_end":101,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7604,"byte_end":7638,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7643,"byte_end":7646,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7651,"byte_end":7698,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7703,"byte_end":7761,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"/ // Returns Ok if exists","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7766,"byte_end":7793,"line_start":106,"line_end":106,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(external.storage_remove(b\"key42\"), Ok(()));","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7798,"byte_end":7856,"line_start":107,"line_end":107,"column_start":5,"column_end":63}},{"value":"/ // Returns Ok if there was no value","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7861,"byte_end":7900,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(external.storage_remove(b\"no_value_key\"), Ok(()));","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7905,"byte_end":7970,"line_start":109,"line_end":109,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":7975,"byte_end":7982,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8931,"byte_end":8953,"line_start":138,"line_end":138,"column_start":8,"column_end":30},"name":"storage_remove_subtree","qualname":"::dependencies::External::storage_remove_subtree","value":"pub fn storage_remove_subtree(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Note: The method is currently unused and untested.","sig":null,"attributes":[{"value":"/ Note: The method is currently unused and untested.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8048,"byte_end":8102,"line_start":113,"line_end":113,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8107,"byte_end":8110,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Removes all keys with a given `prefix` from the storage trie associated with current","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8115,"byte_end":8203,"line_start":115,"line_end":115,"column_start":5,"column_end":93}},{"value":"/ account.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8208,"byte_end":8220,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8225,"byte_end":8228,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8233,"byte_end":8248,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8253,"byte_end":8256,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ * `prefix` - a prefix for all keys to remove","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8261,"byte_end":8309,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8314,"byte_end":8317,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8322,"byte_end":8334,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8339,"byte_end":8342,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function could return [`VMError`].","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8347,"byte_end":8390,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8395,"byte_end":8398,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8403,"byte_end":8416,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8421,"byte_end":8428,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8433,"byte_end":8495,"line_start":128,"line_end":128,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8500,"byte_end":8534,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8539,"byte_end":8542,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8547,"byte_end":8594,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key1\", b\"value1337\").unwrap();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8599,"byte_end":8656,"line_start":132,"line_end":132,"column_start":5,"column_end":62}},{"value":"/ external.storage_set(b\"key2\", b\"value1337\").unwrap();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8661,"byte_end":8718,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(external.storage_remove_subtree(b\"key\"), Ok(()));","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8723,"byte_end":8787,"line_start":134,"line_end":134,"column_start":5,"column_end":69}},{"value":"/ assert!(!external.storage_has_key(b\"key1\").unwrap());","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8792,"byte_end":8849,"line_start":135,"line_end":135,"column_start":5,"column_end":62}},{"value":"/ assert!(!external.storage_has_key(b\"key2\").unwrap());","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8854,"byte_end":8911,"line_start":136,"line_end":136,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":8916,"byte_end":8923,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9860,"byte_end":9875,"line_start":164,"line_end":164,"column_start":8,"column_end":23},"name":"storage_has_key","qualname":"::dependencies::External::storage_has_key","value":"pub fn storage_has_key(&mut Self, &[u8]) -> Result<bool>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Check whether the `key` is present in the storage trie associated with the current account.","sig":null,"attributes":[{"value":"/ Check whether the `key` is present in the storage trie associated with the current account.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9000,"byte_end":9095,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9100,"byte_end":9103,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(true)` if key is present, `Ok(false)` if the key is not present.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9108,"byte_end":9188,"line_start":142,"line_end":142,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9193,"byte_end":9196,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9201,"byte_end":9216,"line_start":144,"line_end":144,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9221,"byte_end":9224,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key to check","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9229,"byte_end":9257,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9262,"byte_end":9265,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9270,"byte_end":9282,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9287,"byte_end":9290,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This function could return [`VMError::RuntimeError`].","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9295,"byte_end":9352,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9357,"byte_end":9360,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9365,"byte_end":9378,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9383,"byte_end":9390,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9395,"byte_end":9457,"line_start":154,"line_end":154,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9462,"byte_end":9496,"line_start":155,"line_end":155,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9501,"byte_end":9504,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9509,"byte_end":9556,"line_start":157,"line_end":157,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9561,"byte_end":9619,"line_start":158,"line_end":158,"column_start":5,"column_end":63}},{"value":"/ // Returns value if exists","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9624,"byte_end":9654,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(external.storage_has_key(b\"key42\"), Ok(true));","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9659,"byte_end":9720,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/ // Returns None if there was no value","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9725,"byte_end":9766,"line_start":161,"line_end":161,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(external.storage_has_key(b\"no_value_key\"), Ok(false));","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9771,"byte_end":9840,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9845,"byte_end":9852,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9924,"byte_end":9940,"line_start":166,"line_end":166,"column_start":8,"column_end":24},"name":"generate_data_id","qualname":"::dependencies::External::generate_data_id","value":"pub fn generate_data_id(&mut Self) -> CryptoHash","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":10042,"byte_end":10062,"line_start":169,"line_end":169,"column_start":8,"column_end":28},"name":"get_trie_nodes_count","qualname":"::dependencies::External::get_trie_nodes_count","value":"pub fn get_trie_nodes_count(&Self) -> TrieNodesCount","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns amount of touched trie nodes by storage operations\n","sig":null,"attributes":[{"value":"/ Returns amount of touched trie nodes by storage operations","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":9972,"byte_end":10034,"line_start":168,"line_end":168,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":10232,"byte_end":10247,"line_start":173,"line_end":173,"column_start":8,"column_end":23},"name":"validator_stake","qualname":"::dependencies::External::validator_stake","value":"pub fn validator_stake(&Self, &AccountId) -> Result<Option<Balance>>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns the validator stake for given account in the current epoch.\n If the account is not a validator, returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns the validator stake for given account in the current epoch.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":10094,"byte_end":10165,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ If the account is not a validator, returns `None`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":10170,"byte_end":10224,"line_start":172,"line_end":172,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":10379,"byte_end":10400,"line_start":176,"line_end":176,"column_start":8,"column_end":29},"name":"validator_total_stake","qualname":"::dependencies::External::validator_total_stake","value":"pub fn validator_total_stake(&Self) -> Result<Balance>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns total stake of validators in the current epoch.\n","sig":null,"attributes":[{"value":"/ Returns total stake of validators in the current epoch.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/dependencies.rs","byte_start":10312,"byte_end":10371,"line_start":175,"line_end":175,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gas_counter","qualname":"::gas_counter","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":1110},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":126},{"krate":0,"index":134},{"krate":0,"index":136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":10879,"byte_end":10900,"line_start":15,"line_end":15,"column_start":8,"column_end":29},"name":"with_ext_cost_counter","qualname":"::gas_counter::with_ext_cost_counter","value":"pub fn with_ext_cost_counter<impl FnOnce(&mut HashMap<ExtCosts, u64>): FnOnce(&mut HashMap<ExtCosts,\nu64>) -> ()>(impl FnOnce(&mut HashMap<ExtCosts, u64>))","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":10862,"byte_end":10871,"line_start":14,"line_end":14,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11490,"byte_end":11504,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"FastGasCounter","qualname":"::gas_counter::FastGasCounter","value":"FastGasCounter { burnt_gas, gas_limit, opcode_cost }","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"decl_id":null,"docs":" Fast gas counter with very simple structure, could be exposed to compiled code in the VM.\n","sig":null,"attributes":[{"value":"/ Fast gas counter with very simple structure, could be exposed to compiled code in the VM.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11335,"byte_end":11428,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"repr(C)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11429,"byte_end":11439,"line_start":31,"line_end":31,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11925,"byte_end":11934,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"name":"burnt_gas","qualname":"::gas_counter::FastGasCounter::burnt_gas","value":"u64","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" The following three fields must be put next to another to make sure\n generated gas counting code can use and adjust them.\n We will share counter to ensure we never miss synchronization.\n This could change and in such a case synchronization required between compiled WASM code\n and the host code.\n The amount of gas that was irreversibly used for contract execution.\n","sig":null,"attributes":[{"value":"/ The following three fields must be put next to another to make sure","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11511,"byte_end":11582,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ generated gas counting code can use and adjust them.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11587,"byte_end":11643,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/ We will share counter to ensure we never miss synchronization.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11648,"byte_end":11714,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ This could change and in such a case synchronization required between compiled WASM code","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11719,"byte_end":11811,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ and the host code.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11816,"byte_end":11838,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ The amount of gas that was irreversibly used for contract execution.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11844,"byte_end":11916,"line_start":40,"line_end":40,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11986,"byte_end":11995,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"gas_limit","qualname":"::gas_counter::FastGasCounter::gas_limit","value":"u64","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Hard gas limit for execution\n","sig":null,"attributes":[{"value":"/ Hard gas limit for execution","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":11945,"byte_end":11977,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":12042,"byte_end":12053,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"name":"opcode_cost","qualname":"::gas_counter::FastGasCounter::opcode_cost","value":"u64","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Single WASM opcode cost\n","sig":null,"attributes":[{"value":"/ Single WASM opcode cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":12006,"byte_end":12033,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":12110,"byte_end":12120,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"GasCounter","qualname":"::gas_counter::GasCounter","value":"GasCounter {  }","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" Gas counter (a part of VMlogic)\n","sig":null,"attributes":[{"value":"/ Gas counter (a part of VMlogic)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":12063,"byte_end":12098,"line_start":48,"line_end":48,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":12757,"byte_end":12760,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<GasCounter>::new","value":"pub fn new(ExtCostsConfig, Gas, u32, Gas, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":14863,"byte_end":14871,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"burn_gas","qualname":"<GasCounter>::burn_gas","value":"pub fn burn_gas(&mut Self, Gas) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":15310,"byte_end":15327,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"process_gas_limit","qualname":"<GasCounter>::process_gas_limit","value":"pub fn process_gas_limit(&mut Self, Gas, Gas) -> HostError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":16634,"byte_end":16646,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"pay_wasm_gas","qualname":"<GasCounter>::pay_wasm_gas","value":"pub fn pay_wasm_gas(&mut Self, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17448,"byte_end":17467,"line_start":178,"line_end":178,"column_start":12,"column_end":31},"name":"gas_counter_raw_ptr","qualname":"<GasCounter>::gas_counter_raw_ptr","value":"pub fn gas_counter_raw_ptr(&mut Self) -> *mut FastGasCounter","parent":null,"children":[],"decl_id":null,"docs":" Very special function to get the gas counter pointer for generated machine code.\n Please do not use, unless fully understand Rust aliasing and other consequences.\n Can be used to emit inlined code like `pay_wasm_gas()`, i.e.\n    mov base, gas_counter_raw_ptr\n    mov rax, [base + 0] ; current burnt gas\n    mov rcx, [base + 16] ; opcode cost\n    imul rcx, block_ops_count ; block cost\n    add rax, rcx ; new burnt gas\n    jo emit_integer_overflow\n    cmp rax, [base + 8] ; unsigned compare with burnt limit\n    mov [base + 0], rax\n    ja emit_gas_exceeded\n","sig":null,"attributes":[{"value":"/ Very special function to get the gas counter pointer for generated machine code.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":16800,"byte_end":16884,"line_start":166,"line_end":166,"column_start":5,"column_end":89}},{"value":"/ Please do not use, unless fully understand Rust aliasing and other consequences.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":16889,"byte_end":16973,"line_start":167,"line_end":167,"column_start":5,"column_end":89}},{"value":"/ Can be used to emit inlined code like `pay_wasm_gas()`, i.e.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":16978,"byte_end":17042,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/    mov base, gas_counter_raw_ptr","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17047,"byte_end":17083,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/    mov rax, [base + 0] ; current burnt gas","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17088,"byte_end":17134,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/    mov rcx, [base + 16] ; opcode cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17139,"byte_end":17180,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/    imul rcx, block_ops_count ; block cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17185,"byte_end":17230,"line_start":172,"line_end":172,"column_start":5,"column_end":50}},{"value":"/    add rax, rcx ; new burnt gas","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17235,"byte_end":17270,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/    jo emit_integer_overflow","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17275,"byte_end":17306,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/    cmp rax, [base + 8] ; unsigned compare with burnt limit","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17311,"byte_end":17373,"line_start":175,"line_end":175,"column_start":5,"column_end":67}},{"value":"/    mov [base + 0], rax","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17378,"byte_end":17404,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/    ja emit_gas_exceeded","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":17409,"byte_end":17436,"line_start":177,"line_end":177,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18093,"byte_end":18100,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"pay_per","qualname":"<GasCounter>::pay_per","value":"pub fn pay_per(&mut Self, ExtCosts, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay a multiple of a cost.\n","sig":null,"attributes":[{"value":"/ A helper function to pay a multiple of a cost.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18031,"byte_end":18081,"line_start":198,"line_end":198,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18484,"byte_end":18492,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"pay_base","qualname":"<GasCounter>::pay_base","value":"pub fn pay_base(&mut Self, ExtCosts) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay base cost gas.\n","sig":null,"attributes":[{"value":"/ A helper function to pay base cost gas.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18429,"byte_end":18472,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":19050,"byte_end":19069,"line_start":223,"line_end":223,"column_start":12,"column_end":31},"name":"pay_action_per_byte","qualname":"<GasCounter>::pay_action_per_byte","value":"pub fn pay_action_per_byte(&mut Self, &Fee, u64, bool, ActionCosts)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay per byte gas fee for batching an action.\n # Args:\n * `per_byte_fee`: the fee per byte;\n * `num_bytes`: the number of bytes;\n * `sir`: whether the receiver_id is same as the current account ID;\n * `action`: what kind of action is charged for;\n","sig":null,"attributes":[{"value":"/ A helper function to pay per byte gas fee for batching an action.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18733,"byte_end":18802,"line_start":217,"line_end":217,"column_start":5,"column_end":74}},{"value":"/ # Args:","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18807,"byte_end":18818,"line_start":218,"line_end":218,"column_start":5,"column_end":16}},{"value":"/ * `per_byte_fee`: the fee per byte;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18823,"byte_end":18862,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/ * `num_bytes`: the number of bytes;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18867,"byte_end":18906,"line_start":220,"line_end":220,"column_start":5,"column_end":44}},{"value":"/ * `sir`: whether the receiver_id is same as the current account ID;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18911,"byte_end":18982,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ * `action`: what kind of action is charged for;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":18987,"byte_end":19038,"line_start":222,"line_end":222,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":19937,"byte_end":19952,"line_start":246,"line_end":246,"column_start":12,"column_end":27},"name":"pay_action_base","qualname":"<GasCounter>::pay_action_base","value":"pub fn pay_action_base(&mut Self, &Fee, bool, ActionCosts) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay base cost gas fee for batching an action.\n # Args:\n * `base_fee`: base fee for the action;\n * `sir`: whether the receiver_id is same as the current account ID;\n * `action`: what kind of action is charged for;\n","sig":null,"attributes":[{"value":"/ A helper function to pay base cost gas fee for batching an action.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":19660,"byte_end":19730,"line_start":241,"line_end":241,"column_start":5,"column_end":75}},{"value":"/ # Args:","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":19735,"byte_end":19746,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ * `base_fee`: base fee for the action;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":19751,"byte_end":19793,"line_start":243,"line_end":243,"column_start":5,"column_end":47}},{"value":"/ * `sir`: whether the receiver_id is same as the current account ID;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":19798,"byte_end":19869,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ * `action`: what kind of action is charged for;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":19874,"byte_end":19925,"line_start":245,"line_end":245,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":20580,"byte_end":20602,"line_start":264,"line_end":264,"column_start":12,"column_end":34},"name":"pay_action_accumulated","qualname":"<GasCounter>::pay_action_accumulated","value":"pub fn pay_action_accumulated(&mut Self, Gas, Gas, ActionCosts) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay base cost gas fee for batching an action.\n # Args:\n * `burn_gas`: amount of gas to burn;\n * `use_gas`: amount of gas to reserve;\n * `action`: what kind of action is charged for;\n","sig":null,"attributes":[{"value":"/ A helper function to pay base cost gas fee for batching an action.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":20334,"byte_end":20404,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ # Args:","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":20409,"byte_end":20420,"line_start":260,"line_end":260,"column_start":5,"column_end":16}},{"value":"/ * `burn_gas`: amount of gas to burn;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":20425,"byte_end":20465,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ * `use_gas`: amount of gas to reserve;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":20470,"byte_end":20512,"line_start":262,"line_end":262,"column_start":5,"column_end":47}},{"value":"/ * `action`: what kind of action is charged for;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":20517,"byte_end":20568,"line_start":263,"line_end":263,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":20834,"byte_end":20847,"line_start":274,"line_end":274,"column_start":12,"column_end":25},"name":"add_trie_fees","qualname":"<GasCounter>::add_trie_fees","value":"pub fn add_trie_fees(&mut Self, TrieNodesCount) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":21053,"byte_end":21063,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"prepay_gas","qualname":"<GasCounter>::prepay_gas","value":"pub fn prepay_gas(&mut Self, Gas) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":21159,"byte_end":21168,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"burnt_gas","qualname":"<GasCounter>::burnt_gas","value":"pub fn burnt_gas(&Self) -> Gas","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":21302,"byte_end":21310,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"used_gas","qualname":"<GasCounter>::used_gas","value":"pub fn used_gas(&Self) -> Gas","parent":null,"children":[],"decl_id":null,"docs":" Amount of gas used through promises and amount burned.\n","sig":null,"attributes":[{"value":"/ Amount of gas used through promises and amount burned.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":21232,"byte_end":21290,"line_start":288,"line_end":288,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":21472,"byte_end":21482,"line_start":294,"line_end":294,"column_start":12,"column_end":22},"name":"unused_gas","qualname":"<GasCounter>::unused_gas","value":"pub fn unused_gas(&Self) -> Gas","parent":null,"children":[],"decl_id":null,"docs":" Remaining gas based on the amount of prepaid gas not yet used.\n","sig":null,"attributes":[{"value":"/ Remaining gas based on the amount of prepaid gas not yet used.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":21394,"byte_end":21460,"line_start":293,"line_end":293,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":21560,"byte_end":21572,"line_start":298,"line_end":298,"column_start":12,"column_end":24},"name":"profile_data","qualname":"<GasCounter>::profile_data","value":"pub fn profile_data(&Self) -> ProfileData","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":25266,"byte_end":25273,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"VMLogic","qualname":"::logic::VMLogic","value":"VMLogic {  }","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":28262,"byte_end":28287,"line_start":104,"line_end":104,"column_start":12,"column_end":37},"name":"new_with_protocol_version","qualname":"<VMLogic>::new_with_protocol_version","value":"pub fn new_with_protocol_version(&'a mut dyn External, VMContext,\n&'a VMConfig, &'a RuntimeFeesConfig, &'a [PromiseResult],\n&'a mut dyn MemoryLike, ProtocolVersion) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":29945,"byte_end":29949,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"logs","qualname":"<VMLogic>::logs","value":"pub fn logs(&Self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":" Returns reference to logs that have been created so far.\n","sig":null,"attributes":[{"value":"/ Returns reference to logs that have been created so far.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":29873,"byte_end":29933,"line_start":150,"line_end":150,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":30063,"byte_end":30078,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"action_receipts","qualname":"<VMLogic>::action_receipts","value":"pub fn action_receipts(&Self) -> &[(AccountId, ReceiptMetadata)]","parent":null,"children":[],"decl_id":null,"docs":" Returns receipt metadata for created receipts\n","sig":null,"attributes":[{"value":"/ Returns receipt metadata for created receipts","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":30002,"byte_end":30051,"line_start":155,"line_end":155,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34113,"byte_end":34144,"line_start":270,"line_end":270,"column_start":12,"column_end":43},"name":"wrapped_internal_write_register","qualname":"<VMLogic>::wrapped_internal_write_register","value":"pub fn wrapped_internal_write_register(&mut Self, u64, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for testing.\n","sig":null,"attributes":[{"value":"/ Convenience function for testing.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34064,"byte_end":34101,"line_start":269,"line_end":269,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35291,"byte_end":35304,"line_start":294,"line_end":294,"column_start":12,"column_end":25},"name":"read_register","qualname":"<VMLogic>::read_register","value":"pub fn read_register(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the entire content from the register `register_id` into the memory of the guest starting with `ptr`.","sig":null,"attributes":[{"value":"/ Writes the entire content from the register `register_id` into the memory of the guest starting with `ptr`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34279,"byte_end":34390,"line_start":274,"line_end":274,"column_start":5,"column_end":116}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34395,"byte_end":34398,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34403,"byte_end":34418,"line_start":276,"line_end":276,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34423,"byte_end":34426,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id from where to read the data;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34431,"byte_end":34496,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/ * `ptr` -- location on guest memory where to copy the data.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34501,"byte_end":34564,"line_start":279,"line_end":279,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34569,"byte_end":34572,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34577,"byte_end":34589,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34594,"byte_end":34597,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ * If the content extends outside the memory allocated to the guest. In Wasmer, it returns `MemoryAccessViolation` error message;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34602,"byte_end":34734,"line_start":283,"line_end":283,"column_start":5,"column_end":137}},{"value":"/ * If `register_id` is pointing to unused register returns `InvalidRegisterId` error message.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34739,"byte_end":34835,"line_start":284,"line_end":284,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34840,"byte_end":34843,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Undefined Behavior","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34848,"byte_end":34872,"line_start":286,"line_end":286,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34877,"byte_end":34880,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ If the content of register extends outside the preallocated memory on the host side, or the pointer points to a","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":34885,"byte_end":35000,"line_start":288,"line_end":288,"column_start":5,"column_end":120}},{"value":"/ wrong location this function will overwrite memory that it is not supposed to overwrite causing an undefined behavior.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35005,"byte_end":35127,"line_start":289,"line_end":289,"column_start":5,"column_end":127}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35132,"byte_end":35135,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35140,"byte_end":35150,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35155,"byte_end":35158,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ `base + read_register_base + read_register_byte * num_bytes + write_memory_base + write_memory_byte * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35163,"byte_end":35279,"line_start":293,"line_end":293,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35882,"byte_end":35894,"line_start":311,"line_end":311,"column_start":12,"column_end":24},"name":"register_len","qualname":"<VMLogic>::register_len","value":"pub fn register_len(&mut Self, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the blob stored in the given register.\n * If register is used, then returns the size, which can potentially be zero;\n * If register is not used, returns `u64::MAX`","sig":null,"attributes":[{"value":"/ Returns the size of the blob stored in the given register.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35517,"byte_end":35579,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/ * If register is used, then returns the size, which can potentially be zero;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35584,"byte_end":35664,"line_start":301,"line_end":301,"column_start":5,"column_end":85}},{"value":"/ * If register is not used, returns `u64::MAX`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35669,"byte_end":35718,"line_start":302,"line_end":302,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35723,"byte_end":35726,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35731,"byte_end":35746,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35751,"byte_end":35754,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id from where to read the data;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35759,"byte_end":35824,"line_start":306,"line_end":306,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35829,"byte_end":35832,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35837,"byte_end":35847,"line_start":308,"line_end":308,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35852,"byte_end":35855,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":35860,"byte_end":35870,"line_start":310,"line_end":310,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36732,"byte_end":36746,"line_start":329,"line_end":329,"column_start":12,"column_end":26},"name":"write_register","qualname":"<VMLogic>::write_register","value":"pub fn write_register(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies `data` from the guest memory into the register. If register is unused will initialize\n it. If register has larger capacity than needed for `data` will not re-allocate it. The\n register will lose the pre-existing data if any.","sig":null,"attributes":[{"value":"/ Copies `data` from the guest memory into the register. If register is unused will initialize","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36081,"byte_end":36177,"line_start":316,"line_end":316,"column_start":5,"column_end":101}},{"value":"/ it. If register has larger capacity than needed for `data` will not re-allocate it. The","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36182,"byte_end":36273,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/ register will lose the pre-existing data if any.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36278,"byte_end":36330,"line_start":318,"line_end":318,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36335,"byte_end":36338,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36343,"byte_end":36358,"line_start":320,"line_end":320,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36363,"byte_end":36366,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id where to write the data;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36371,"byte_end":36432,"line_start":322,"line_end":322,"column_start":5,"column_end":66}},{"value":"/ * `data_len` -- length of the data in bytes;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36437,"byte_end":36485,"line_start":323,"line_end":323,"column_start":5,"column_end":53}},{"value":"/ * `data_ptr` -- pointer in the guest memory where to read the data from.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36490,"byte_end":36566,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36571,"byte_end":36574,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36579,"byte_end":36589,"line_start":326,"line_end":326,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36594,"byte_end":36597,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ `base + read_memory_base + read_memory_bytes * num_bytes + write_register_base + write_register_bytes * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":36602,"byte_end":36720,"line_start":328,"line_end":328,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45137,"byte_end":45155,"line_start":526,"line_end":526,"column_start":12,"column_end":30},"name":"current_account_id","qualname":"<VMLogic>::current_account_id","value":"pub fn current_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the account id of the current contract that we execute into the register.","sig":null,"attributes":[{"value":"/ Saves the account id of the current contract that we execute into the register.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":44825,"byte_end":44908,"line_start":517,"line_end":517,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":44913,"byte_end":44916,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":44921,"byte_end":44933,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":44938,"byte_end":44941,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":44946,"byte_end":45023,"line_start":521,"line_end":521,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45028,"byte_end":45031,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45036,"byte_end":45046,"line_start":523,"line_end":523,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45051,"byte_end":45054,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45059,"byte_end":45125,"line_start":525,"line_end":525,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46029,"byte_end":46046,"line_start":548,"line_end":548,"column_start":12,"column_end":29},"name":"signer_account_id","qualname":"<VMLogic>::signer_account_id","value":"pub fn signer_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" All contract calls are a result of some transaction that was signed by some account using\n some access key and submitted into a memory pool (either through the wallet using RPC or by\n a node itself). This function returns the id of that account. Saves the bytes of the signer\n account id into the register.","sig":null,"attributes":[{"value":"/ All contract calls are a result of some transaction that was signed by some account using","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45402,"byte_end":45495,"line_start":535,"line_end":535,"column_start":5,"column_end":98}},{"value":"/ some access key and submitted into a memory pool (either through the wallet using RPC or by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45500,"byte_end":45595,"line_start":536,"line_end":536,"column_start":5,"column_end":100}},{"value":"/ a node itself). This function returns the id of that account. Saves the bytes of the signer","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45600,"byte_end":45695,"line_start":537,"line_end":537,"column_start":5,"column_end":100}},{"value":"/ account id into the register.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45700,"byte_end":45733,"line_start":538,"line_end":538,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45738,"byte_end":45741,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45746,"byte_end":45758,"line_start":540,"line_end":540,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45763,"byte_end":45766,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45771,"byte_end":45850,"line_start":542,"line_end":542,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45855,"byte_end":45915,"line_start":543,"line_end":543,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45920,"byte_end":45923,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45928,"byte_end":45938,"line_start":545,"line_end":545,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45943,"byte_end":45946,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":45951,"byte_end":46017,"line_start":547,"line_end":547,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47078,"byte_end":47095,"line_start":575,"line_end":575,"column_start":12,"column_end":29},"name":"signer_account_pk","qualname":"<VMLogic>::signer_account_pk","value":"pub fn signer_account_pk(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the public key fo the access key that was used by the signer into the register. In\n rare situations smart contract might want to know the exact access key that was used to send\n the original transaction, e.g. to increase the allowance or manipulate with the public key.","sig":null,"attributes":[{"value":"/ Saves the public key fo the access key that was used by the signer into the register. In","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46489,"byte_end":46581,"line_start":563,"line_end":563,"column_start":5,"column_end":97}},{"value":"/ rare situations smart contract might want to know the exact access key that was used to send","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46586,"byte_end":46682,"line_start":564,"line_end":564,"column_start":5,"column_end":101}},{"value":"/ the original transaction, e.g. to increase the allowance or manipulate with the public key.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46687,"byte_end":46782,"line_start":565,"line_end":565,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46787,"byte_end":46790,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46795,"byte_end":46807,"line_start":567,"line_end":567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46812,"byte_end":46815,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46820,"byte_end":46899,"line_start":569,"line_end":569,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46904,"byte_end":46964,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46969,"byte_end":46972,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46977,"byte_end":46987,"line_start":572,"line_end":572,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":46992,"byte_end":46995,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47000,"byte_end":47066,"line_start":574,"line_end":574,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":48057,"byte_end":48079,"line_start":599,"line_end":599,"column_start":12,"column_end":34},"name":"predecessor_account_id","qualname":"<VMLogic>::predecessor_account_id","value":"pub fn predecessor_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" All contract calls are a result of a receipt, this receipt might be created by a transaction\n that does function invocation on the contract or another contract as a result of\n cross-contract call. Saves the bytes of the predecessor account id into the register.","sig":null,"attributes":[{"value":"/ All contract calls are a result of a receipt, this receipt might be created by a transaction","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47482,"byte_end":47578,"line_start":587,"line_end":587,"column_start":5,"column_end":101}},{"value":"/ that does function invocation on the contract or another contract as a result of","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47583,"byte_end":47667,"line_start":588,"line_end":588,"column_start":5,"column_end":89}},{"value":"/ cross-contract call. Saves the bytes of the predecessor account id into the register.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47672,"byte_end":47761,"line_start":589,"line_end":589,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47766,"byte_end":47769,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47774,"byte_end":47786,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47791,"byte_end":47794,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47799,"byte_end":47878,"line_start":593,"line_end":593,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47883,"byte_end":47943,"line_start":594,"line_end":594,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47948,"byte_end":47951,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47956,"byte_end":47966,"line_start":596,"line_end":596,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47971,"byte_end":47974,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":47979,"byte_end":48045,"line_start":598,"line_end":598,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":48896,"byte_end":48901,"line_start":621,"line_end":621,"column_start":12,"column_end":17},"name":"input","qualname":"<VMLogic>::input","value":"pub fn input(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads input to the contract call into the register. Input is expected to be in JSON-format.\n If input is provided saves the bytes (potentially zero) of input into register. If input is\n not provided writes 0 bytes into the register.","sig":null,"attributes":[{"value":"/ Reads input to the contract call into the register. Input is expected to be in JSON-format.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":48532,"byte_end":48627,"line_start":614,"line_end":614,"column_start":5,"column_end":100}},{"value":"/ If input is provided saves the bytes (potentially zero) of input into register. If input is","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":48632,"byte_end":48727,"line_start":615,"line_end":615,"column_start":5,"column_end":100}},{"value":"/ not provided writes 0 bytes into the register.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":48732,"byte_end":48782,"line_start":616,"line_end":616,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":48787,"byte_end":48790,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":48795,"byte_end":48805,"line_start":618,"line_end":618,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":48810,"byte_end":48813,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":48818,"byte_end":48884,"line_start":620,"line_end":620,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49217,"byte_end":49228,"line_start":633,"line_end":633,"column_start":12,"column_end":23},"name":"block_index","qualname":"<VMLogic>::block_index","value":"pub fn block_index(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current block height.","sig":null,"attributes":[{"value":"/ Returns the current block height.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49079,"byte_end":49116,"line_start":627,"line_end":627,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49121,"byte_end":49124,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49129,"byte_end":49139,"line_start":629,"line_end":629,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49144,"byte_end":49147,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49152,"byte_end":49162,"line_start":631,"line_end":631,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49512,"byte_end":49527,"line_start":643,"line_end":643,"column_start":12,"column_end":27},"name":"block_timestamp","qualname":"<VMLogic>::block_timestamp","value":"pub fn block_timestamp(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","sig":null,"attributes":[{"value":"/ Returns the current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49347,"byte_end":49454,"line_start":638,"line_end":638,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49459,"byte_end":49462,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49467,"byte_end":49477,"line_start":640,"line_end":640,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49482,"byte_end":49485,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49490,"byte_end":49500,"line_start":642,"line_end":642,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49745,"byte_end":49757,"line_start":653,"line_end":653,"column_start":12,"column_end":24},"name":"epoch_height","qualname":"<VMLogic>::epoch_height","value":"pub fn epoch_height(&mut Self) -> Result<EpochHeight>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current epoch height.","sig":null,"attributes":[{"value":"/ Returns the current epoch height.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49650,"byte_end":49687,"line_start":648,"line_end":648,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49692,"byte_end":49695,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49700,"byte_end":49710,"line_start":650,"line_end":650,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49715,"byte_end":49718,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49723,"byte_end":49733,"line_start":652,"line_end":652,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50239,"byte_end":50254,"line_start":664,"line_end":664,"column_start":12,"column_end":27},"name":"validator_stake","qualname":"<VMLogic>::validator_stake","value":"pub fn validator_stake(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Get the stake of an account, if the account is currently a validator. Otherwise returns 0.\n writes the value into the` u128` variable pointed by `stake_ptr`.","sig":null,"attributes":[{"value":"/ Get the stake of an account, if the account is currently a validator. Otherwise returns 0.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49885,"byte_end":49979,"line_start":658,"line_end":658,"column_start":5,"column_end":99}},{"value":"/ writes the value into the` u128` variable pointed by `stake_ptr`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":49984,"byte_end":50053,"line_start":659,"line_end":659,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50058,"byte_end":50061,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50066,"byte_end":50076,"line_start":661,"line_end":661,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50081,"byte_end":50084,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16 + utf8_decoding_base + utf8_decoding_byte * account_id_len + validator_stake_base`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50089,"byte_end":50227,"line_start":663,"line_end":663,"column_start":5,"column_end":143}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51019,"byte_end":51040,"line_start":684,"line_end":684,"column_start":12,"column_end":33},"name":"validator_total_stake","qualname":"<VMLogic>::validator_total_stake","value":"pub fn validator_total_stake(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Get the total validator stake of the current epoch.\n Write the u128 value into `stake_ptr`.\n writes the value into the` u128` variable pointed by `stake_ptr`.","sig":null,"attributes":[{"value":"/ Get the total validator stake of the current epoch.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50711,"byte_end":50766,"line_start":677,"line_end":677,"column_start":5,"column_end":60}},{"value":"/ Write the u128 value into `stake_ptr`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50771,"byte_end":50813,"line_start":678,"line_end":678,"column_start":5,"column_end":47}},{"value":"/ writes the value into the` u128` variable pointed by `stake_ptr`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50818,"byte_end":50887,"line_start":679,"line_end":679,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50892,"byte_end":50895,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50900,"byte_end":50910,"line_start":681,"line_end":681,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50915,"byte_end":50918,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16 + validator_total_stake_base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":50923,"byte_end":51007,"line_start":683,"line_end":683,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51751,"byte_end":51764,"line_start":701,"line_end":701,"column_start":12,"column_end":25},"name":"storage_usage","qualname":"<VMLogic>::storage_usage","value":"pub fn storage_usage(&mut Self) -> Result<StorageUsage>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes used by the contract if it was saved to the trie as of the\n invocation. This includes:\n * The data written with storage_* functions during current and previous execution;\n * The bytes needed to store the access keys of the given account.\n * The contract code size\n * A small fixed overhead for account metadata.","sig":null,"attributes":[{"value":"/ Returns the number of bytes used by the contract if it was saved to the trie as of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51315,"byte_end":51405,"line_start":691,"line_end":691,"column_start":5,"column_end":95}},{"value":"/ invocation. This includes:","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51410,"byte_end":51440,"line_start":692,"line_end":692,"column_start":5,"column_end":35}},{"value":"/ * The data written with storage_* functions during current and previous execution;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51445,"byte_end":51531,"line_start":693,"line_end":693,"column_start":5,"column_end":91}},{"value":"/ * The bytes needed to store the access keys of the given account.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51536,"byte_end":51605,"line_start":694,"line_end":694,"column_start":5,"column_end":74}},{"value":"/ * The contract code size","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51610,"byte_end":51638,"line_start":695,"line_end":695,"column_start":5,"column_end":33}},{"value":"/ * A small fixed overhead for account metadata.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51643,"byte_end":51693,"line_start":696,"line_end":696,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51698,"byte_end":51701,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51706,"byte_end":51716,"line_start":698,"line_end":698,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51721,"byte_end":51724,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51729,"byte_end":51739,"line_start":700,"line_end":700,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52199,"byte_end":52214,"line_start":716,"line_end":716,"column_start":12,"column_end":27},"name":"account_balance","qualname":"<VMLogic>::account_balance","value":"pub fn account_balance(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The current balance of the given account. This includes the attached_deposit that was\n attached to the transaction.","sig":null,"attributes":[{"value":"/ The current balance of the given account. This includes the attached_deposit that was","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":51970,"byte_end":52059,"line_start":710,"line_end":710,"column_start":5,"column_end":94}},{"value":"/ attached to the transaction.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52064,"byte_end":52096,"line_start":711,"line_end":711,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52101,"byte_end":52104,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52109,"byte_end":52119,"line_start":713,"line_end":713,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52124,"byte_end":52127,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52132,"byte_end":52187,"line_start":715,"line_end":715,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52543,"byte_end":52565,"line_start":726,"line_end":726,"column_start":12,"column_end":34},"name":"account_locked_balance","qualname":"<VMLogic>::account_locked_balance","value":"pub fn account_locked_balance(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The current amount of tokens locked due to staking.","sig":null,"attributes":[{"value":"/ The current amount of tokens locked due to staking.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52385,"byte_end":52440,"line_start":721,"line_end":721,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52445,"byte_end":52448,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52453,"byte_end":52463,"line_start":723,"line_end":723,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52468,"byte_end":52471,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52476,"byte_end":52531,"line_start":725,"line_end":725,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53069,"byte_end":53085,"line_start":741,"line_end":741,"column_start":12,"column_end":28},"name":"attached_deposit","qualname":"<VMLogic>::attached_deposit","value":"pub fn attached_deposit(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The balance that was attached to the call that will be immediately deposited before the\n contract execution starts.","sig":null,"attributes":[{"value":"/ The balance that was attached to the call that will be immediately deposited before the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52743,"byte_end":52834,"line_start":731,"line_end":731,"column_start":5,"column_end":96}},{"value":"/ contract execution starts.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52839,"byte_end":52869,"line_start":732,"line_end":732,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52874,"byte_end":52877,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52882,"byte_end":52894,"line_start":734,"line_end":734,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52899,"byte_end":52902,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView``.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52907,"byte_end":52966,"line_start":736,"line_end":736,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52971,"byte_end":52974,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52979,"byte_end":52989,"line_start":738,"line_end":738,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":52994,"byte_end":52997,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53002,"byte_end":53057,"line_start":740,"line_end":740,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53692,"byte_end":53703,"line_start":762,"line_end":762,"column_start":12,"column_end":23},"name":"prepaid_gas","qualname":"<VMLogic>::prepaid_gas","value":"pub fn prepaid_gas(&mut Self) -> Result<Gas>","parent":null,"children":[],"decl_id":null,"docs":" The amount of gas attached to the call that can be used to pay for the gas fees.","sig":null,"attributes":[{"value":"/ The amount of gas attached to the call that can be used to pay for the gas fees.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53454,"byte_end":53538,"line_start":753,"line_end":753,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53543,"byte_end":53546,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53551,"byte_end":53563,"line_start":755,"line_end":755,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53568,"byte_end":53571,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53576,"byte_end":53634,"line_start":757,"line_end":757,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53639,"byte_end":53642,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53647,"byte_end":53657,"line_start":759,"line_end":759,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53662,"byte_end":53665,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":53670,"byte_end":53680,"line_start":761,"line_end":761,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54249,"byte_end":54257,"line_start":781,"line_end":781,"column_start":12,"column_end":20},"name":"used_gas","qualname":"<VMLogic>::used_gas","value":"pub fn used_gas(&mut Self) -> Result<Gas>","parent":null,"children":[],"decl_id":null,"docs":" The gas that was already burnt during the contract execution (cannot exceed `prepaid_gas`)","sig":null,"attributes":[{"value":"/ The gas that was already burnt during the contract execution (cannot exceed `prepaid_gas`)","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54001,"byte_end":54095,"line_start":772,"line_end":772,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54100,"byte_end":54103,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54108,"byte_end":54120,"line_start":774,"line_end":774,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54125,"byte_end":54128,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54133,"byte_end":54191,"line_start":776,"line_end":776,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54196,"byte_end":54199,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54204,"byte_end":54214,"line_start":778,"line_end":778,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54219,"byte_end":54222,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":54227,"byte_end":54237,"line_start":780,"line_end":780,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60000,"byte_end":60011,"line_start":931,"line_end":931,"column_start":12,"column_end":23},"name":"random_seed","qualname":"<VMLogic>::random_seed","value":"pub fn random_seed(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes random seed into the register.","sig":null,"attributes":[{"value":"/ Writes random seed into the register.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":59728,"byte_end":59769,"line_start":922,"line_end":922,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":59774,"byte_end":59777,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":59782,"byte_end":59794,"line_start":924,"line_end":924,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":59799,"byte_end":59802,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ If the size of the registers exceed the set limit `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":59807,"byte_end":59885,"line_start":926,"line_end":926,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":59890,"byte_end":59893,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":59898,"byte_end":59908,"line_start":928,"line_end":928,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":59913,"byte_end":59916,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":59921,"byte_end":59988,"line_start":930,"line_end":930,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60602,"byte_end":60608,"line_start":946,"line_end":946,"column_start":12,"column_end":18},"name":"sha256","qualname":"<VMLogic>::sha256","value":"pub fn sha256(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using sha256 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using sha256 and returns it into `register_id`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60194,"byte_end":60268,"line_start":936,"line_end":936,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60273,"byte_end":60276,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60281,"byte_end":60293,"line_start":938,"line_end":938,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60298,"byte_end":60301,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60306,"byte_end":60400,"line_start":940,"line_end":940,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60405,"byte_end":60448,"line_start":941,"line_end":941,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60453,"byte_end":60456,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60461,"byte_end":60471,"line_start":943,"line_end":943,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60476,"byte_end":60479,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + sha256_base + sha256_byte * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":60484,"byte_end":60590,"line_start":945,"line_end":945,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61477,"byte_end":61486,"line_start":967,"line_end":967,"column_start":12,"column_end":21},"name":"keccak256","qualname":"<VMLogic>::keccak256","value":"pub fn keccak256(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using keccak256 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using keccak256 and returns it into `register_id`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61060,"byte_end":61137,"line_start":957,"line_end":957,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61142,"byte_end":61145,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61150,"byte_end":61162,"line_start":959,"line_end":959,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61167,"byte_end":61170,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61175,"byte_end":61269,"line_start":961,"line_end":961,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61274,"byte_end":61317,"line_start":962,"line_end":962,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61322,"byte_end":61325,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61330,"byte_end":61340,"line_start":964,"line_end":964,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61345,"byte_end":61348,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + keccak256_base + keccak256_byte * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61353,"byte_end":61465,"line_start":966,"line_end":966,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62364,"byte_end":62373,"line_start":988,"line_end":988,"column_start":12,"column_end":21},"name":"keccak512","qualname":"<VMLogic>::keccak512","value":"pub fn keccak512(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using keccak512 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using keccak512 and returns it into `register_id`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":61947,"byte_end":62024,"line_start":978,"line_end":978,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62029,"byte_end":62032,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62037,"byte_end":62049,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62054,"byte_end":62057,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62062,"byte_end":62156,"line_start":982,"line_end":982,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62161,"byte_end":62204,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62209,"byte_end":62212,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62217,"byte_end":62227,"line_start":985,"line_end":985,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62232,"byte_end":62235,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + keccak512_base + keccak512_byte * num_bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62240,"byte_end":62352,"line_start":987,"line_end":987,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":63333,"byte_end":63342,"line_start":1011,"line_end":1011,"column_start":12,"column_end":21},"name":"ripemd160","qualname":"<VMLogic>::ripemd160","value":"pub fn ripemd160(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using RIPEMD-160 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using RIPEMD-160 and returns it into `register_id`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62834,"byte_end":62912,"line_start":999,"line_end":999,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62917,"byte_end":62920,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62925,"byte_end":62937,"line_start":1001,"line_end":1001,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62942,"byte_end":62945,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":62950,"byte_end":63044,"line_start":1003,"line_end":1003,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":63049,"byte_end":63092,"line_start":1004,"line_end":1004,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":63097,"byte_end":63100,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":63105,"byte_end":63115,"line_start":1006,"line_end":1006,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":63120,"byte_end":63123,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/  Where `message_blocks` is `(value_len + 9).div_ceil(64)`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":63128,"byte_end":63190,"line_start":1008,"line_end":1008,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":63195,"byte_end":63198,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + ripemd160_base + ripemd160_block * message_blocks`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":63203,"byte_end":63321,"line_start":1010,"line_end":1010,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64722,"byte_end":64731,"line_start":1050,"line_end":1050,"column_start":12,"column_end":21},"name":"ecrecover","qualname":"<VMLogic>::ecrecover","value":"pub fn ecrecover(&mut Self, u64, u64, u64, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Recovers an ECDSA signer address and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Recovers an ECDSA signer address and returns it into `register_id`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64002,"byte_end":64073,"line_start":1030,"line_end":1030,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64078,"byte_end":64081,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ Takes in an additional flag to check for malleability of the signature","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64086,"byte_end":64160,"line_start":1032,"line_end":1032,"column_start":5,"column_end":79}},{"value":"/ which is generally only ideal for transactions.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64165,"byte_end":64216,"line_start":1033,"line_end":1033,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64221,"byte_end":64224,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Returns a bool indicating success or failure as a `u64`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64229,"byte_end":64289,"line_start":1035,"line_end":1035,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64294,"byte_end":64297,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ # Malleability Flags","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64302,"byte_end":64326,"line_start":1037,"line_end":1037,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64331,"byte_end":64334,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ 0 - No extra checks.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64339,"byte_end":64363,"line_start":1039,"line_end":1039,"column_start":5,"column_end":29}},{"value":"/ 1 - Rejecting upper range.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64368,"byte_end":64398,"line_start":1040,"line_end":1040,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64403,"byte_end":64406,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64411,"byte_end":64423,"line_start":1042,"line_end":1042,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64428,"byte_end":64431,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ * If `hash_ptr`, `r_ptr`, or `s_ptr` point outside the memory or the registers use more","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64436,"byte_end":64527,"line_start":1044,"line_end":1044,"column_start":5,"column_end":96}},{"value":"/   memory than the limit, then returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64532,"byte_end":64598,"line_start":1045,"line_end":1045,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64603,"byte_end":64606,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64611,"byte_end":64621,"line_start":1047,"line_end":1047,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64626,"byte_end":64629,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * 64 + ecrecover_base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":64634,"byte_end":64710,"line_start":1049,"line_end":1049,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":67455,"byte_end":67458,"line_start":1130,"line_end":1130,"column_start":12,"column_end":15},"name":"gas","qualname":"<VMLogic>::gas","value":"pub fn gas(&mut Self, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Called by gas metering injected into Wasm. Counts both towards `burnt_gas` and `used_gas`.","sig":null,"attributes":[{"value":"/ Called by gas metering injected into Wasm. Counts both towards `burnt_gas` and `used_gas`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":67065,"byte_end":67159,"line_start":1123,"line_end":1123,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":67164,"byte_end":67167,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":67172,"byte_end":67184,"line_start":1125,"line_end":1125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":67189,"byte_end":67192,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ * If passed gas amount somehow overflows internal gas counters returns `IntegerOverflow`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":67197,"byte_end":67290,"line_start":1127,"line_end":1127,"column_start":5,"column_end":98}},{"value":"/ * If we exceed usage limit imposed on burnt gas returns `GasLimitExceeded`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":67295,"byte_end":67374,"line_start":1128,"line_end":1128,"column_start":5,"column_end":84}},{"value":"/ * If we exceed the `prepaid_gas` then returns `GasExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":67379,"byte_end":67443,"line_start":1129,"line_end":1129,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70788,"byte_end":70802,"line_start":1196,"line_end":1196,"column_start":12,"column_end":26},"name":"promise_create","qualname":"<VMLogic>::promise_create","value":"pub fn promise_create(&mut Self, u64, u64, u64, u64, u64, u64, u64, Gas)\n-> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a promise that will execute a method on account with given arguments and attaches\n the given amount and gas. `amount_ptr` point to slices of bytes representing `u128`.","sig":null,"attributes":[{"value":"/ Creates a promise that will execute a method on account with given arguments and attaches","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":69894,"byte_end":69987,"line_start":1177,"line_end":1177,"column_start":5,"column_end":98}},{"value":"/ the given amount and gas. `amount_ptr` point to slices of bytes representing `u128`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":69992,"byte_end":70080,"line_start":1178,"line_end":1178,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70085,"byte_end":70088,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70093,"byte_end":70105,"line_start":1180,"line_end":1180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70110,"byte_end":70113,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ * If `account_id_len + account_id_ptr` or `method_name_len + method_name_ptr` or","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70118,"byte_end":70202,"line_start":1182,"line_end":1182,"column_start":5,"column_end":89}},{"value":"/ `arguments_len + arguments_ptr` or `amount_ptr + 16` points outside the memory of the guest","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70207,"byte_end":70302,"line_start":1183,"line_end":1183,"column_start":5,"column_end":100}},{"value":"/ or host returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70307,"byte_end":70351,"line_start":1184,"line_end":1184,"column_start":5,"column_end":49}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70356,"byte_end":70416,"line_start":1185,"line_end":1185,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70421,"byte_end":70424,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70429,"byte_end":70442,"line_start":1187,"line_end":1187,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70447,"byte_end":70450,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70455,"byte_end":70547,"line_start":1189,"line_end":1189,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70552,"byte_end":70563,"line_start":1190,"line_end":1190,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70568,"byte_end":70571,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70576,"byte_end":70586,"line_start":1192,"line_end":1192,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70591,"byte_end":70594,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ Since `promise_create` is a convenience wrapper around `promise_batch_create` and","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70599,"byte_end":70684,"line_start":1194,"line_end":1194,"column_start":5,"column_end":90}},{"value":"/ `promise_batch_action_function_call`. This also means it charges `base` cost twice.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":70689,"byte_end":70776,"line_start":1195,"line_end":1195,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":72340,"byte_end":72352,"line_start":1239,"line_end":1239,"column_start":12,"column_end":24},"name":"promise_then","qualname":"<VMLogic>::promise_then","value":"pub fn promise_then(&mut Self, u64, u64, u64, u64, u64, u64, u64, u64, u64)\n-> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Attaches the callback that is executed after promise pointed by `promise_idx` is complete.","sig":null,"attributes":[{"value":"/ Attaches the callback that is executed after promise pointed by `promise_idx` is complete.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71435,"byte_end":71529,"line_start":1220,"line_end":1220,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71534,"byte_end":71537,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71542,"byte_end":71554,"line_start":1222,"line_end":1222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71559,"byte_end":71562,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71567,"byte_end":71663,"line_start":1224,"line_end":1224,"column_start":5,"column_end":101}},{"value":"/ * If `account_id_len + account_id_ptr` or `method_name_len + method_name_ptr` or","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71668,"byte_end":71752,"line_start":1225,"line_end":1225,"column_start":5,"column_end":89}},{"value":"/   `arguments_len + arguments_ptr` or `amount_ptr + 16` points outside the memory of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71757,"byte_end":71848,"line_start":1226,"line_end":1226,"column_start":5,"column_end":96}},{"value":"/   guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71853,"byte_end":71905,"line_start":1227,"line_end":1227,"column_start":5,"column_end":57}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71910,"byte_end":71970,"line_start":1228,"line_end":1228,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71975,"byte_end":71978,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":71983,"byte_end":71996,"line_start":1230,"line_end":1230,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":72001,"byte_end":72004,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":72009,"byte_end":72101,"line_start":1232,"line_end":1232,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":72106,"byte_end":72117,"line_start":1233,"line_end":1233,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":72122,"byte_end":72125,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":72130,"byte_end":72140,"line_start":1235,"line_end":1235,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":72145,"byte_end":72148,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ Since `promise_create` is a convenience wrapper around `promise_batch_then` and","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":72153,"byte_end":72236,"line_start":1237,"line_end":1237,"column_start":5,"column_end":88}},{"value":"/ `promise_batch_action_function_call`. This also means it charges `base` cost twice.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":72241,"byte_end":72328,"line_start":1238,"line_end":1238,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74329,"byte_end":74340,"line_start":1290,"line_end":1290,"column_start":12,"column_end":23},"name":"promise_and","qualname":"<VMLogic>::promise_and","value":"pub fn promise_and(&mut Self, u64, u64) -> Result<PromiseIndex>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise which completes when time all promises passed as arguments complete.\n Cannot be used with registers. `promise_idx_ptr` points to an array of `u64` elements, with\n `promise_idx_count` denoting the number of elements. The array contains indices of promises\n that need to be waited on jointly.","sig":null,"attributes":[{"value":"/ Creates a new promise which completes when time all promises passed as arguments complete.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73034,"byte_end":73128,"line_start":1265,"line_end":1265,"column_start":5,"column_end":99}},{"value":"/ Cannot be used with registers. `promise_idx_ptr` points to an array of `u64` elements, with","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73133,"byte_end":73228,"line_start":1266,"line_end":1266,"column_start":5,"column_end":100}},{"value":"/ `promise_idx_count` denoting the number of elements. The array contains indices of promises","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73233,"byte_end":73328,"line_start":1267,"line_end":1267,"column_start":5,"column_end":100}},{"value":"/ that need to be waited on jointly.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73333,"byte_end":73371,"line_start":1268,"line_end":1268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73376,"byte_end":73379,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73384,"byte_end":73396,"line_start":1270,"line_end":1270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73401,"byte_end":73404,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ * If `promise_ids_ptr + 8 * promise_idx_count` extend outside the guest memory returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73409,"byte_end":73499,"line_start":1272,"line_end":1272,"column_start":5,"column_end":95}},{"value":"/   `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73504,"byte_end":73534,"line_start":1273,"line_end":1273,"column_start":5,"column_end":35}},{"value":"/ * If any of the promises in the array do not correspond to existing promises returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73539,"byte_end":73627,"line_start":1274,"line_end":1274,"column_start":5,"column_end":93}},{"value":"/   `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73632,"byte_end":73660,"line_start":1275,"line_end":1275,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73665,"byte_end":73725,"line_start":1276,"line_end":1276,"column_start":5,"column_end":65}},{"value":"/ * If the total number of receipt dependencies exceeds `max_number_input_data_dependencies`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73730,"byte_end":73824,"line_start":1277,"line_end":1277,"column_start":5,"column_end":99}},{"value":"/   limit returns `NumInputDataDependenciesExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73829,"byte_end":73884,"line_start":1278,"line_end":1278,"column_start":5,"column_end":60}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73889,"byte_end":73980,"line_start":1279,"line_end":1279,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":73985,"byte_end":74021,"line_start":1280,"line_end":1280,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74026,"byte_end":74029,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74034,"byte_end":74047,"line_start":1282,"line_end":1282,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74052,"byte_end":74055,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74060,"byte_end":74152,"line_start":1284,"line_end":1284,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74157,"byte_end":74168,"line_start":1285,"line_end":1285,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74173,"byte_end":74176,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74181,"byte_end":74191,"line_start":1287,"line_end":1287,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74196,"byte_end":74199,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ `base + promise_and_base + promise_and_per_promise * num_promises + cost of reading promise ids from memory`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":74204,"byte_end":74317,"line_start":1289,"line_end":1289,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":77099,"byte_end":77119,"line_start":1358,"line_end":1358,"column_start":12,"column_end":32},"name":"promise_batch_create","qualname":"<VMLogic>::promise_batch_create","value":"pub fn promise_batch_create(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise towards given `account_id` without any actions attached to it.","sig":null,"attributes":[{"value":"/ Creates a new promise towards given `account_id` without any actions attached to it.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76285,"byte_end":76373,"line_start":1339,"line_end":1339,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76378,"byte_end":76381,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76386,"byte_end":76398,"line_start":1341,"line_end":1341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76403,"byte_end":76406,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ * If `account_id_len + account_id_ptr` points outside the memory of the guest or host","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76411,"byte_end":76500,"line_start":1343,"line_end":1343,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76505,"byte_end":76541,"line_start":1344,"line_end":1344,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76546,"byte_end":76606,"line_start":1345,"line_end":1345,"column_start":5,"column_end":65}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76611,"byte_end":76702,"line_start":1346,"line_end":1346,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76707,"byte_end":76743,"line_start":1347,"line_end":1347,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76748,"byte_end":76751,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76756,"byte_end":76769,"line_start":1349,"line_end":1349,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76774,"byte_end":76777,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76782,"byte_end":76874,"line_start":1351,"line_end":1351,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76879,"byte_end":76890,"line_start":1352,"line_end":1352,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76895,"byte_end":76898,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76903,"byte_end":76913,"line_start":1354,"line_end":1354,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76918,"byte_end":76921,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + cost of reading and decoding the account id + dispatch cost of the receipt`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":76926,"byte_end":77027,"line_start":1356,"line_end":1356,"column_start":5,"column_end":106}},{"value":"/ `used_gas := burnt_gas + exec cost of the receipt`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":77032,"byte_end":77087,"line_start":1357,"line_end":1357,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78833,"byte_end":78851,"line_start":1399,"line_end":1399,"column_start":12,"column_end":30},"name":"promise_batch_then","qualname":"<VMLogic>::promise_batch_then","value":"pub fn promise_batch_then(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise towards given `account_id` without any actions attached, that is\n executed after promise pointed by `promise_idx` is complete.","sig":null,"attributes":[{"value":"/ Creates a new promise towards given `account_id` without any actions attached, that is","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":77846,"byte_end":77936,"line_start":1378,"line_end":1378,"column_start":5,"column_end":95}},{"value":"/ executed after promise pointed by `promise_idx` is complete.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":77941,"byte_end":78005,"line_start":1379,"line_end":1379,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78010,"byte_end":78013,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78018,"byte_end":78030,"line_start":1381,"line_end":1381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78035,"byte_end":78038,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78043,"byte_end":78139,"line_start":1383,"line_end":1383,"column_start":5,"column_end":101}},{"value":"/ * If `account_id_len + account_id_ptr` points outside the memory of the guest or host","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78144,"byte_end":78233,"line_start":1384,"line_end":1384,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78238,"byte_end":78274,"line_start":1385,"line_end":1385,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78279,"byte_end":78339,"line_start":1386,"line_end":1386,"column_start":5,"column_end":65}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78344,"byte_end":78435,"line_start":1387,"line_end":1387,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78440,"byte_end":78476,"line_start":1388,"line_end":1388,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78481,"byte_end":78484,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78489,"byte_end":78502,"line_start":1390,"line_end":1390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78507,"byte_end":78510,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78515,"byte_end":78607,"line_start":1392,"line_end":1392,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78612,"byte_end":78623,"line_start":1393,"line_end":1393,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78628,"byte_end":78631,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78636,"byte_end":78646,"line_start":1395,"line_end":1395,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78651,"byte_end":78654,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ `base + cost of reading and decoding the account id + dispatch&execution cost of the receipt","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78659,"byte_end":78755,"line_start":1397,"line_end":1397,"column_start":5,"column_end":101}},{"value":"/  + dispatch&execution base cost for each data dependency`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":78760,"byte_end":78821,"line_start":1398,"line_end":1398,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81995,"byte_end":82030,"line_start":1476,"line_end":1476,"column_start":12,"column_end":47},"name":"promise_batch_action_create_account","qualname":"<VMLogic>::promise_batch_action_create_account","value":"pub fn promise_batch_action_create_account(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `CreateAccount` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `CreateAccount` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81384,"byte_end":81475,"line_start":1462,"line_end":1462,"column_start":5,"column_end":96}},{"value":"/ `promise_idx`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81480,"byte_end":81498,"line_start":1463,"line_end":1463,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81503,"byte_end":81506,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81511,"byte_end":81523,"line_start":1465,"line_end":1465,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81528,"byte_end":81531,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81536,"byte_end":81632,"line_start":1467,"line_end":1467,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81637,"byte_end":81721,"line_start":1468,"line_end":1468,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81726,"byte_end":81787,"line_start":1469,"line_end":1469,"column_start":5,"column_end":66}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81792,"byte_end":81852,"line_start":1470,"line_end":1470,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81857,"byte_end":81860,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81865,"byte_end":81875,"line_start":1472,"line_end":1472,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81880,"byte_end":81883,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action fee`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81888,"byte_end":81933,"line_start":1474,"line_end":1474,"column_start":5,"column_end":50}},{"value":"/ `used_gas := burnt_gas + exec action fee`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":81938,"byte_end":81983,"line_start":1475,"line_end":1475,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83672,"byte_end":83708,"line_start":1513,"line_end":1513,"column_start":12,"column_end":48},"name":"promise_batch_action_deploy_contract","qualname":"<VMLogic>::promise_batch_action_deploy_contract","value":"pub fn promise_batch_action_deploy_contract(&mut Self, u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeployContract` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeployContract` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":82709,"byte_end":82801,"line_start":1496,"line_end":1496,"column_start":5,"column_end":97}},{"value":"/ `promise_idx`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":82806,"byte_end":82824,"line_start":1497,"line_end":1497,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":82829,"byte_end":82832,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":82837,"byte_end":82849,"line_start":1499,"line_end":1499,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":82854,"byte_end":82857,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":82862,"byte_end":82958,"line_start":1501,"line_end":1501,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":82963,"byte_end":83047,"line_start":1502,"line_end":1502,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83052,"byte_end":83113,"line_start":1503,"line_end":1503,"column_start":5,"column_end":66}},{"value":"/ * If `code_len + code_ptr` points outside the memory of the guest or host returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83118,"byte_end":83203,"line_start":1504,"line_end":1504,"column_start":5,"column_end":90}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83208,"byte_end":83236,"line_start":1505,"line_end":1505,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83241,"byte_end":83301,"line_start":1506,"line_end":1506,"column_start":5,"column_end":65}},{"value":"/ * If the contract code length exceeds `max_contract_size` returns `ContractSizeExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83306,"byte_end":83399,"line_start":1507,"line_end":1507,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83404,"byte_end":83407,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83412,"byte_end":83422,"line_start":1509,"line_end":1509,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83427,"byte_end":83430,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory `","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83435,"byte_end":83566,"line_start":1511,"line_end":1511,"column_start":5,"column_end":136}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":83571,"byte_end":83660,"line_start":1512,"line_end":1512,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":86114,"byte_end":86148,"line_start":1572,"line_end":1572,"column_start":12,"column_end":46},"name":"promise_batch_action_function_call","qualname":"<VMLogic>::promise_batch_action_function_call","value":"pub fn promise_batch_action_function_call(&mut Self, u64, u64, u64, u64, u64,\nu64, Gas) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `FunctionCall` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `FunctionCall` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85099,"byte_end":85189,"line_start":1554,"line_end":1554,"column_start":5,"column_end":95}},{"value":"/ `promise_idx`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85194,"byte_end":85212,"line_start":1555,"line_end":1555,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85217,"byte_end":85220,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85225,"byte_end":85237,"line_start":1557,"line_end":1557,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85242,"byte_end":85245,"line_start":1558,"line_end":1558,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85250,"byte_end":85346,"line_start":1559,"line_end":1559,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85351,"byte_end":85435,"line_start":1560,"line_end":1560,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85440,"byte_end":85501,"line_start":1561,"line_end":1561,"column_start":5,"column_end":66}},{"value":"/ * If `method_name_len + method_name_ptr` or `arguments_len + arguments_ptr` or","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85506,"byte_end":85588,"line_start":1562,"line_end":1562,"column_start":5,"column_end":87}},{"value":"/ `amount_ptr + 16` points outside the memory of the guest or host returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85593,"byte_end":85669,"line_start":1563,"line_end":1563,"column_start":5,"column_end":81}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85674,"byte_end":85702,"line_start":1564,"line_end":1564,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85707,"byte_end":85767,"line_start":1565,"line_end":1565,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85772,"byte_end":85775,"line_start":1566,"line_end":1566,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85780,"byte_end":85790,"line_start":1567,"line_end":1567,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85795,"byte_end":85798,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85803,"byte_end":85932,"line_start":1569,"line_end":1569,"column_start":5,"column_end":134}},{"value":"/  + cost of reading u128, method_name and arguments from the memory`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":85937,"byte_end":86008,"line_start":1570,"line_end":1570,"column_start":5,"column_end":76}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":86013,"byte_end":86102,"line_start":1571,"line_end":1571,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88710,"byte_end":88751,"line_start":1630,"line_end":1630,"column_start":12,"column_end":53},"name":"promise_batch_action_function_call_weight","qualname":"<VMLogic>::promise_batch_action_function_call_weight","value":"pub fn promise_batch_action_function_call_weight(&mut Self, u64, u64, u64,\nu64, u64, u64, Gas, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `FunctionCall` action to the batch of actions for the given promise pointed by\n `promise_idx`. This function allows not specifying a specific gas value and allowing the\n runtime to assign remaining gas based on a weight.","sig":null,"attributes":[{"value":"/ Appends `FunctionCall` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":86646,"byte_end":86736,"line_start":1594,"line_end":1594,"column_start":5,"column_end":95}},{"value":"/ `promise_idx`. This function allows not specifying a specific gas value and allowing the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":86741,"byte_end":86833,"line_start":1595,"line_end":1595,"column_start":5,"column_end":97}},{"value":"/ runtime to assign remaining gas based on a weight.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":86838,"byte_end":86892,"line_start":1596,"line_end":1596,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":86897,"byte_end":86900,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ # Gas","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":86905,"byte_end":86914,"line_start":1598,"line_end":1598,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":86919,"byte_end":86922,"line_start":1599,"line_end":1599,"column_start":5,"column_end":8}},{"value":"/ Gas can be specified using a static amount, a weight of remaining prepaid gas, or a mixture","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":86927,"byte_end":87022,"line_start":1600,"line_end":1600,"column_start":5,"column_end":100}},{"value":"/ of both. To omit a static gas amount, `0` can be passed for the `gas` parameter.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87027,"byte_end":87111,"line_start":1601,"line_end":1601,"column_start":5,"column_end":89}},{"value":"/ To omit assigning remaining gas, `0` can be passed as the `gas_weight` parameter.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87116,"byte_end":87201,"line_start":1602,"line_end":1602,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87206,"byte_end":87209,"line_start":1603,"line_end":1603,"column_start":5,"column_end":8}},{"value":"/ The gas weight parameter works as the following:","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87214,"byte_end":87266,"line_start":1604,"line_end":1604,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87271,"byte_end":87274,"line_start":1605,"line_end":1605,"column_start":5,"column_end":8}},{"value":"/ All unused prepaid gas from the current function call is split among all function calls","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87279,"byte_end":87370,"line_start":1606,"line_end":1606,"column_start":5,"column_end":96}},{"value":"/ which supply this gas weight. The amount attached to each respective call depends on the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87375,"byte_end":87467,"line_start":1607,"line_end":1607,"column_start":5,"column_end":97}},{"value":"/ value of the weight.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87472,"byte_end":87496,"line_start":1608,"line_end":1608,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87501,"byte_end":87504,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ For example, if 40 gas is leftover from the current method call and three functions specify","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87509,"byte_end":87604,"line_start":1610,"line_end":1610,"column_start":5,"column_end":100}},{"value":"/ the weights 1, 5, 2 then 5, 25, 10 gas will be added to each function call respectively,","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87609,"byte_end":87701,"line_start":1611,"line_end":1611,"column_start":5,"column_end":97}},{"value":"/ using up all remaining available gas.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87706,"byte_end":87747,"line_start":1612,"line_end":1612,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87752,"byte_end":87755,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ If the `gas_weight` parameter is set as a large value, the amount of distributed gas","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87760,"byte_end":87848,"line_start":1614,"line_end":1614,"column_start":5,"column_end":93}},{"value":"/ to each action can be 0 or a very low value because the amount of gas per weight is","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87853,"byte_end":87940,"line_start":1615,"line_end":1615,"column_start":5,"column_end":92}},{"value":"/ based on the floor division of the amount of gas by the sum of weights.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":87945,"byte_end":88020,"line_start":1616,"line_end":1616,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88025,"byte_end":88028,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ Any remaining gas will be distributed to the last scheduled function call with a weight","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88033,"byte_end":88124,"line_start":1618,"line_end":1618,"column_start":5,"column_end":96}},{"value":"/ specified.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88129,"byte_end":88143,"line_start":1619,"line_end":1619,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88148,"byte_end":88151,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88156,"byte_end":88168,"line_start":1621,"line_end":1621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88173,"byte_end":88176,"line_start":1622,"line_end":1622,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88181,"byte_end":88277,"line_start":1623,"line_end":1623,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88282,"byte_end":88366,"line_start":1624,"line_end":1624,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88371,"byte_end":88432,"line_start":1625,"line_end":1625,"column_start":5,"column_end":66}},{"value":"/ * If `method_name_len + method_name_ptr` or `arguments_len + arguments_ptr` or","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88437,"byte_end":88519,"line_start":1626,"line_end":1626,"column_start":5,"column_end":87}},{"value":"/ `amount_ptr + 16` points outside the memory of the guest or host returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88524,"byte_end":88600,"line_start":1627,"line_end":1627,"column_start":5,"column_end":81}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88605,"byte_end":88633,"line_start":1628,"line_end":1628,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":88638,"byte_end":88698,"line_start":1629,"line_end":1629,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":91424,"byte_end":91453,"line_start":1701,"line_end":1701,"column_start":12,"column_end":41},"name":"promise_batch_action_transfer","qualname":"<VMLogic>::promise_batch_action_transfer","value":"pub fn promise_batch_action_transfer(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `Transfer` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `Transfer` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":90571,"byte_end":90657,"line_start":1685,"line_end":1685,"column_start":5,"column_end":91}},{"value":"/ `promise_idx`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":90662,"byte_end":90680,"line_start":1686,"line_end":1686,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":90685,"byte_end":90688,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":90693,"byte_end":90705,"line_start":1688,"line_end":1688,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":90710,"byte_end":90713,"line_start":1689,"line_end":1689,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":90718,"byte_end":90814,"line_start":1690,"line_end":1690,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":90819,"byte_end":90903,"line_start":1691,"line_end":1691,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":90908,"byte_end":90969,"line_start":1692,"line_end":1692,"column_start":5,"column_end":66}},{"value":"/ * If `amount_ptr + 16` points outside the memory of the guest or host returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":90974,"byte_end":91055,"line_start":1693,"line_end":1693,"column_start":5,"column_end":86}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":91060,"byte_end":91088,"line_start":1694,"line_end":1694,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":91093,"byte_end":91153,"line_start":1695,"line_end":1695,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":91158,"byte_end":91161,"line_start":1696,"line_end":1696,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":91166,"byte_end":91176,"line_start":1697,"line_end":1697,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":91181,"byte_end":91184,"line_start":1698,"line_end":1698,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading u128 from memory `","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":91189,"byte_end":91318,"line_start":1699,"line_end":1699,"column_start":5,"column_end":134}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":91323,"byte_end":91412,"line_start":1700,"line_end":1700,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93760,"byte_end":93786,"line_start":1752,"line_end":1752,"column_start":12,"column_end":38},"name":"promise_batch_action_stake","qualname":"<VMLogic>::promise_batch_action_stake","value":"pub fn promise_batch_action_stake(&mut Self, u64, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `Stake` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `Stake` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":92770,"byte_end":92853,"line_start":1735,"line_end":1735,"column_start":5,"column_end":88}},{"value":"/ `promise_idx`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":92858,"byte_end":92876,"line_start":1736,"line_end":1736,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":92881,"byte_end":92884,"line_start":1737,"line_end":1737,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":92889,"byte_end":92901,"line_start":1738,"line_end":1738,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":92906,"byte_end":92909,"line_start":1739,"line_end":1739,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":92914,"byte_end":93010,"line_start":1740,"line_end":1740,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93015,"byte_end":93099,"line_start":1741,"line_end":1741,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93104,"byte_end":93165,"line_start":1742,"line_end":1742,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93170,"byte_end":93262,"line_start":1743,"line_end":1743,"column_start":5,"column_end":97}},{"value":"/ * If `amount_ptr + 16` or `public_key_len + public_key_ptr` points outside the memory of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93267,"byte_end":93363,"line_start":1744,"line_end":1744,"column_start":5,"column_end":101}},{"value":"/ guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93368,"byte_end":93418,"line_start":1745,"line_end":1745,"column_start":5,"column_end":55}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93423,"byte_end":93483,"line_start":1746,"line_end":1746,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93488,"byte_end":93491,"line_start":1747,"line_end":1747,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93496,"byte_end":93506,"line_start":1748,"line_end":1748,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93511,"byte_end":93514,"line_start":1749,"line_end":1749,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93519,"byte_end":93654,"line_start":1750,"line_end":1750,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":93659,"byte_end":93748,"line_start":1751,"line_end":1751,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95728,"byte_end":95773,"line_start":1798,"line_end":1798,"column_start":12,"column_end":57},"name":"promise_batch_action_add_key_with_full_access","qualname":"<VMLogic>::promise_batch_action_add_key_with_full_access","value":"pub fn promise_batch_action_add_key_with_full_access(&mut Self, u64, u64, u64,\nu64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `AddKey` action to the batch of actions for the given promise pointed by\n `promise_idx`. The access key will have `FullAccess` permission.","sig":null,"attributes":[{"value":"/ Appends `AddKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":94708,"byte_end":94792,"line_start":1781,"line_end":1781,"column_start":5,"column_end":89}},{"value":"/ `promise_idx`. The access key will have `FullAccess` permission.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":94797,"byte_end":94865,"line_start":1782,"line_end":1782,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":94870,"byte_end":94873,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":94878,"byte_end":94890,"line_start":1784,"line_end":1784,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":94895,"byte_end":94898,"line_start":1785,"line_end":1785,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":94903,"byte_end":94999,"line_start":1786,"line_end":1786,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95004,"byte_end":95088,"line_start":1787,"line_end":1787,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95093,"byte_end":95154,"line_start":1788,"line_end":1788,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95159,"byte_end":95251,"line_start":1789,"line_end":1789,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr` points outside the memory of the guest or host","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95256,"byte_end":95345,"line_start":1790,"line_end":1790,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95350,"byte_end":95386,"line_start":1791,"line_end":1791,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95391,"byte_end":95451,"line_start":1792,"line_end":1792,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95456,"byte_end":95459,"line_start":1793,"line_end":1793,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95464,"byte_end":95474,"line_start":1794,"line_end":1794,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95479,"byte_end":95482,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95487,"byte_end":95622,"line_start":1796,"line_end":1796,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":95627,"byte_end":95716,"line_start":1797,"line_end":1797,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97984,"byte_end":98031,"line_start":1849,"line_end":1849,"column_start":12,"column_end":59},"name":"promise_batch_action_add_key_with_function_call","qualname":"<VMLogic>::promise_batch_action_add_key_with_function_call","value":"pub fn promise_batch_action_add_key_with_function_call(&mut Self, u64, u64,\nu64, u64, u64, u64, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `AddKey` action to the batch of actions for the given promise pointed by\n `promise_idx`. The access key will have `FunctionCall` permission.","sig":null,"attributes":[{"value":"/ Appends `AddKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":96739,"byte_end":96823,"line_start":1830,"line_end":1830,"column_start":5,"column_end":89}},{"value":"/ `promise_idx`. The access key will have `FunctionCall` permission.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":96828,"byte_end":96898,"line_start":1831,"line_end":1831,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":96903,"byte_end":96906,"line_start":1832,"line_end":1832,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":96911,"byte_end":96923,"line_start":1833,"line_end":1833,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":96928,"byte_end":96931,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":96936,"byte_end":97032,"line_start":1835,"line_end":1835,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97037,"byte_end":97121,"line_start":1836,"line_end":1836,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97126,"byte_end":97187,"line_start":1837,"line_end":1837,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97192,"byte_end":97284,"line_start":1838,"line_end":1838,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr`, `allowance_ptr + 16`,","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97289,"byte_end":97354,"line_start":1839,"line_end":1839,"column_start":5,"column_end":70}},{"value":"/ `receiver_id_len + receiver_id_ptr` or `method_names_len + method_names_ptr` points outside","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97359,"byte_end":97454,"line_start":1840,"line_end":1840,"column_start":5,"column_end":100}},{"value":"/ the memory of the guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97459,"byte_end":97527,"line_start":1841,"line_end":1841,"column_start":5,"column_end":73}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97532,"byte_end":97592,"line_start":1842,"line_end":1842,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97597,"byte_end":97600,"line_start":1843,"line_end":1843,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97605,"byte_end":97615,"line_start":1844,"line_end":1844,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97620,"byte_end":97623,"line_start":1845,"line_end":1845,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97628,"byte_end":97757,"line_start":1846,"line_end":1846,"column_start":5,"column_end":134}},{"value":"/  + cost of reading u128, method_names and public key from the memory + cost of reading and parsing account name`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97762,"byte_end":97878,"line_start":1847,"line_end":1847,"column_start":5,"column_end":121}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":97883,"byte_end":97972,"line_start":1848,"line_end":1848,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100990,"byte_end":101021,"line_start":1920,"line_end":1920,"column_start":12,"column_end":43},"name":"promise_batch_action_delete_key","qualname":"<VMLogic>::promise_batch_action_delete_key","value":"pub fn promise_batch_action_delete_key(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeleteKey` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeleteKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100017,"byte_end":100104,"line_start":1903,"line_end":1903,"column_start":5,"column_end":92}},{"value":"/ `promise_idx`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100109,"byte_end":100127,"line_start":1904,"line_end":1904,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100132,"byte_end":100135,"line_start":1905,"line_end":1905,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100140,"byte_end":100152,"line_start":1906,"line_end":1906,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100157,"byte_end":100160,"line_start":1907,"line_end":1907,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100165,"byte_end":100261,"line_start":1908,"line_end":1908,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100266,"byte_end":100350,"line_start":1909,"line_end":1909,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100355,"byte_end":100416,"line_start":1910,"line_end":1910,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100421,"byte_end":100513,"line_start":1911,"line_end":1911,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr` points outside the memory of the guest or host","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100518,"byte_end":100607,"line_start":1912,"line_end":1912,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100612,"byte_end":100648,"line_start":1913,"line_end":1913,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100653,"byte_end":100713,"line_start":1914,"line_end":1914,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100718,"byte_end":100721,"line_start":1915,"line_end":1915,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100726,"byte_end":100736,"line_start":1916,"line_end":1916,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100741,"byte_end":100744,"line_start":1917,"line_end":1917,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100749,"byte_end":100884,"line_start":1918,"line_end":1918,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":100889,"byte_end":100978,"line_start":1919,"line_end":1919,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102823,"byte_end":102858,"line_start":1963,"line_end":1963,"column_start":12,"column_end":47},"name":"promise_batch_action_delete_account","qualname":"<VMLogic>::promise_batch_action_delete_account","value":"pub fn promise_batch_action_delete_account(&mut Self, u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeleteAccount` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeleteAccount` action to the batch of actions for the given promise pointed by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":101874,"byte_end":101965,"line_start":1947,"line_end":1947,"column_start":5,"column_end":96}},{"value":"/ `promise_idx`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":101970,"byte_end":101988,"line_start":1948,"line_end":1948,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":101993,"byte_end":101996,"line_start":1949,"line_end":1949,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102001,"byte_end":102013,"line_start":1950,"line_end":1950,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102018,"byte_end":102021,"line_start":1951,"line_end":1951,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102026,"byte_end":102122,"line_start":1952,"line_end":1952,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102127,"byte_end":102211,"line_start":1953,"line_end":1953,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102216,"byte_end":102277,"line_start":1954,"line_end":1954,"column_start":5,"column_end":66}},{"value":"/ * If `beneficiary_id_len + beneficiary_id_ptr` points outside the memory of the guest or","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102282,"byte_end":102374,"line_start":1955,"line_end":1955,"column_start":5,"column_end":97}},{"value":"/ host returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102379,"byte_end":102420,"line_start":1956,"line_end":1956,"column_start":5,"column_end":46}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102425,"byte_end":102485,"line_start":1957,"line_end":1957,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102490,"byte_end":102493,"line_start":1958,"line_end":1958,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102498,"byte_end":102508,"line_start":1959,"line_end":1959,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102513,"byte_end":102516,"line_start":1960,"line_end":1960,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading and parsing account id from memory `","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102521,"byte_end":102668,"line_start":1961,"line_end":1961,"column_start":5,"column_end":152}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes + fees for transferring funds to the beneficiary`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":102673,"byte_end":102811,"line_start":1962,"line_end":1962,"column_start":5,"column_end":143}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104381,"byte_end":104402,"line_start":2004,"line_end":2004,"column_start":12,"column_end":33},"name":"promise_results_count","qualname":"<VMLogic>::promise_results_count","value":"pub fn promise_results_count(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the current function is invoked by a callback we can access the execution results of the\n promises that caused the callback. This function returns the number of complete and\n incomplete callbacks.","sig":null,"attributes":[{"value":"/ If the current function is invoked by a callback we can access the execution results of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":103756,"byte_end":103851,"line_start":1990,"line_end":1990,"column_start":5,"column_end":100}},{"value":"/ promises that caused the callback. This function returns the number of complete and","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":103856,"byte_end":103943,"line_start":1991,"line_end":1991,"column_start":5,"column_end":92}},{"value":"/ incomplete callbacks.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":103948,"byte_end":103973,"line_start":1992,"line_end":1992,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":103978,"byte_end":103981,"line_start":1993,"line_end":1993,"column_start":5,"column_end":8}},{"value":"/ Note, we are only going to have incomplete callbacks once we have promise_or combinator.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":103986,"byte_end":104078,"line_start":1994,"line_end":1994,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104083,"byte_end":104086,"line_start":1995,"line_end":1995,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104091,"byte_end":104094,"line_start":1996,"line_end":1996,"column_start":5,"column_end":8}},{"value":"/ * If there is only one callback returns `1`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104099,"byte_end":104147,"line_start":1997,"line_end":1997,"column_start":5,"column_end":53}},{"value":"/ * If there are multiple callbacks (e.g. created through `promise_and`) returns their number;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104152,"byte_end":104248,"line_start":1998,"line_end":1998,"column_start":5,"column_end":101}},{"value":"/ * If the function was called not through the callback returns `0`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104253,"byte_end":104323,"line_start":1999,"line_end":1999,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104328,"byte_end":104331,"line_start":2000,"line_end":2000,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104336,"byte_end":104346,"line_start":2001,"line_end":2001,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104351,"byte_end":104354,"line_start":2002,"line_end":2002,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104359,"byte_end":104369,"line_start":2003,"line_end":2003,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105756,"byte_end":105770,"line_start":2037,"line_end":2037,"column_start":12,"column_end":26},"name":"promise_result","qualname":"<VMLogic>::promise_result","value":"pub fn promise_result(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the current function is invoked by a callback we can access the execution results of the\n promises that caused the callback. This function returns the result in blob format and\n places it into the register.","sig":null,"attributes":[{"value":"/ If the current function is invoked by a callback we can access the execution results of the","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104729,"byte_end":104824,"line_start":2015,"line_end":2015,"column_start":5,"column_end":100}},{"value":"/ promises that caused the callback. This function returns the result in blob format and","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104829,"byte_end":104919,"line_start":2016,"line_end":2016,"column_start":5,"column_end":95}},{"value":"/ places it into the register.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104924,"byte_end":104956,"line_start":2017,"line_end":2017,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104961,"byte_end":104964,"line_start":2018,"line_end":2018,"column_start":5,"column_end":8}},{"value":"/ * If promise result is complete and successful copies its blob into the register;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":104969,"byte_end":105054,"line_start":2019,"line_end":2019,"column_start":5,"column_end":90}},{"value":"/ * If promise result is complete and failed or incomplete keeps register unused;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105059,"byte_end":105142,"line_start":2020,"line_end":2020,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105147,"byte_end":105150,"line_start":2021,"line_end":2021,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105155,"byte_end":105168,"line_start":2022,"line_end":2022,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105173,"byte_end":105176,"line_start":2023,"line_end":2023,"column_start":5,"column_end":8}},{"value":"/ * If promise result is not complete returns `0`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105181,"byte_end":105233,"line_start":2024,"line_end":2024,"column_start":5,"column_end":57}},{"value":"/ * If promise result is complete and successful returns `1`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105238,"byte_end":105301,"line_start":2025,"line_end":2025,"column_start":5,"column_end":68}},{"value":"/ * If promise result is complete and failed returns `2`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105306,"byte_end":105365,"line_start":2026,"line_end":2026,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105370,"byte_end":105373,"line_start":2027,"line_end":2027,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105378,"byte_end":105390,"line_start":2028,"line_end":2028,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105395,"byte_end":105398,"line_start":2029,"line_end":2029,"column_start":5,"column_end":8}},{"value":"/ * If `result_id` does not correspond to an existing result returns `InvalidPromiseResultIndex`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105403,"byte_end":105502,"line_start":2030,"line_end":2030,"column_start":5,"column_end":104}},{"value":"/ * If copying the blob exhausts the memory limit it returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105507,"byte_end":105594,"line_start":2031,"line_end":2031,"column_start":5,"column_end":92}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105599,"byte_end":105659,"line_start":2032,"line_end":2032,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105664,"byte_end":105667,"line_start":2033,"line_end":2033,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105672,"byte_end":105682,"line_start":2034,"line_end":2034,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105687,"byte_end":105690,"line_start":2035,"line_end":2035,"column_start":5,"column_end":8}},{"value":"/ `base + cost of writing data into a register`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":105695,"byte_end":105744,"line_start":2036,"line_end":2036,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106895,"byte_end":106909,"line_start":2069,"line_end":2069,"column_start":12,"column_end":26},"name":"promise_return","qualname":"<VMLogic>::promise_return","value":"pub fn promise_return(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" When promise `promise_idx` finishes executing its result is considered to be the result of\n the current function.","sig":null,"attributes":[{"value":"/ When promise `promise_idx` finishes executing its result is considered to be the result of","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106497,"byte_end":106591,"line_start":2058,"line_end":2058,"column_start":5,"column_end":99}},{"value":"/ the current function.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106596,"byte_end":106621,"line_start":2059,"line_end":2059,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106626,"byte_end":106629,"line_start":2060,"line_end":2060,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106634,"byte_end":106646,"line_start":2061,"line_end":2061,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106651,"byte_end":106654,"line_start":2062,"line_end":2062,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106659,"byte_end":106755,"line_start":2063,"line_end":2063,"column_start":5,"column_end":101}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106760,"byte_end":106820,"line_start":2064,"line_end":2064,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106825,"byte_end":106828,"line_start":2065,"line_end":2065,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106833,"byte_end":106843,"line_start":2066,"line_end":2066,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106848,"byte_end":106851,"line_start":2067,"line_end":2067,"column_start":5,"column_end":8}},{"value":"/ `base + promise_return`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":106856,"byte_end":106883,"line_start":2068,"line_end":2068,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":108285,"byte_end":108297,"line_start":2105,"line_end":2105,"column_start":12,"column_end":24},"name":"value_return","qualname":"<VMLogic>::value_return","value":"pub fn value_return(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blob of data as the return value of the contract.","sig":null,"attributes":[{"value":"/ Sets the blob of data as the return value of the contract.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":107744,"byte_end":107806,"line_start":2094,"line_end":2094,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":107811,"byte_end":107814,"line_start":2095,"line_end":2095,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":107819,"byte_end":107831,"line_start":2096,"line_end":2096,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":107836,"byte_end":107839,"line_start":2097,"line_end":2097,"column_start":5,"column_end":8}},{"value":"/ * If `value_len + value_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":107844,"byte_end":107940,"line_start":2098,"line_end":2098,"column_start":5,"column_end":101}},{"value":"/   returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":107945,"byte_end":107983,"line_start":2099,"line_end":2099,"column_start":5,"column_end":43}},{"value":"/ * if the length of the returned data exceeds `max_length_returned_data` returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":107988,"byte_end":108071,"line_start":2100,"line_end":2100,"column_start":5,"column_end":88}},{"value":"/   `ReturnedValueLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":108076,"byte_end":108112,"line_start":2101,"line_end":2101,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":108117,"byte_end":108120,"line_start":2102,"line_end":2102,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":108125,"byte_end":108135,"line_start":2103,"line_end":2103,"column_start":5,"column_end":15}},{"value":"/ `base + cost of reading return value from memory or register + dispatch&exec cost per byte of the data sent * num data receivers`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":108140,"byte_end":108273,"line_start":2104,"line_end":2104,"column_start":5,"column_end":138}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110469,"byte_end":110474,"line_start":2149,"line_end":2149,"column_start":12,"column_end":17},"name":"panic","qualname":"<VMLogic>::panic","value":"pub fn panic(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Terminates the execution of the program with panic `GuestPanic`.","sig":null,"attributes":[{"value":"/ Terminates the execution of the program with panic `GuestPanic`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110343,"byte_end":110411,"line_start":2144,"line_end":2144,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110416,"byte_end":110419,"line_start":2145,"line_end":2145,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110424,"byte_end":110434,"line_start":2146,"line_end":2146,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110439,"byte_end":110442,"line_start":2147,"line_end":2147,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110447,"byte_end":110457,"line_start":2148,"line_end":2148,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111141,"byte_end":111151,"line_start":2165,"line_end":2165,"column_start":12,"column_end":22},"name":"panic_utf8","qualname":"<VMLogic>::panic_utf8","value":"pub fn panic_utf8(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Guest panics with the UTF-8 encoded string.\n If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","sig":null,"attributes":[{"value":"/ Guest panics with the UTF-8 encoded string.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110647,"byte_end":110694,"line_start":2154,"line_end":2154,"column_start":5,"column_end":52}},{"value":"/ If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110699,"byte_end":110788,"line_start":2155,"line_end":2155,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110793,"byte_end":110796,"line_start":2156,"line_end":2156,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110801,"byte_end":110813,"line_start":2157,"line_end":2157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110818,"byte_end":110821,"line_start":2158,"line_end":2158,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110826,"byte_end":110911,"line_start":2159,"line_end":2159,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110916,"byte_end":110963,"line_start":2160,"line_end":2160,"column_start":5,"column_end":52}},{"value":"/ * If string is longer than `max_log_len` returns `TotalLogLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":110968,"byte_end":111046,"line_start":2161,"line_end":2161,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111051,"byte_end":111054,"line_start":2162,"line_end":2162,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111059,"byte_end":111069,"line_start":2163,"line_end":2163,"column_start":5,"column_end":15}},{"value":"/ `base + cost of reading and decoding a utf8 string`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111074,"byte_end":111129,"line_start":2164,"line_end":2164,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112005,"byte_end":112013,"line_start":2185,"line_end":2185,"column_start":12,"column_end":20},"name":"log_utf8","qualname":"<VMLogic>::log_utf8","value":"pub fn log_utf8(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Logs the UTF-8 encoded string.\n If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","sig":null,"attributes":[{"value":"/ Logs the UTF-8 encoded string.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111341,"byte_end":111375,"line_start":2170,"line_end":2170,"column_start":5,"column_end":39}},{"value":"/ If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111380,"byte_end":111469,"line_start":2171,"line_end":2171,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111474,"byte_end":111477,"line_start":2172,"line_end":2172,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111482,"byte_end":111494,"line_start":2173,"line_end":2173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111499,"byte_end":111502,"line_start":2174,"line_end":2174,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111507,"byte_end":111592,"line_start":2175,"line_end":2175,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111597,"byte_end":111644,"line_start":2176,"line_end":2176,"column_start":5,"column_end":52}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111649,"byte_end":111742,"line_start":2177,"line_end":2177,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111747,"byte_end":111778,"line_start":2178,"line_end":2178,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111783,"byte_end":111858,"line_start":2179,"line_end":2179,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111863,"byte_end":111892,"line_start":2180,"line_end":2180,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111897,"byte_end":111900,"line_start":2181,"line_end":2181,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111905,"byte_end":111915,"line_start":2182,"line_end":2182,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111920,"byte_end":111923,"line_start":2183,"line_end":2183,"column_start":5,"column_end":8}},{"value":"/ `base + log_base + log_byte + num_bytes + utf8 decoding cost`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":111928,"byte_end":111993,"line_start":2184,"line_end":2184,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113050,"byte_end":113059,"line_start":2209,"line_end":2209,"column_start":12,"column_end":21},"name":"log_utf16","qualname":"<VMLogic>::log_utf16","value":"pub fn log_utf16(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Logs the UTF-16 encoded string. If `len == u64::MAX` then treats the string as\n null-terminated with two-byte sequence of `0x00 0x00`.","sig":null,"attributes":[{"value":"/ Logs the UTF-16 encoded string. If `len == u64::MAX` then treats the string as","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112366,"byte_end":112448,"line_start":2194,"line_end":2194,"column_start":5,"column_end":87}},{"value":"/ null-terminated with two-byte sequence of `0x00 0x00`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112453,"byte_end":112511,"line_start":2195,"line_end":2195,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112516,"byte_end":112519,"line_start":2196,"line_end":2196,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112524,"byte_end":112536,"line_start":2197,"line_end":2197,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112541,"byte_end":112544,"line_start":2198,"line_end":2198,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112549,"byte_end":112634,"line_start":2199,"line_end":2199,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-16 returns `BadUtf16`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112639,"byte_end":112688,"line_start":2200,"line_end":2200,"column_start":5,"column_end":54}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112693,"byte_end":112786,"line_start":2201,"line_end":2201,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112791,"byte_end":112822,"line_start":2202,"line_end":2202,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112827,"byte_end":112902,"line_start":2203,"line_end":2203,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112907,"byte_end":112936,"line_start":2204,"line_end":2204,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112941,"byte_end":112944,"line_start":2205,"line_end":2205,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112949,"byte_end":112959,"line_start":2206,"line_end":2206,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112964,"byte_end":112967,"line_start":2207,"line_end":2207,"column_start":5,"column_end":8}},{"value":"/ `base + log_base + log_byte * num_bytes + utf16 decoding cost`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":112972,"byte_end":113038,"line_start":2208,"line_end":2208,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":114223,"byte_end":114228,"line_start":2234,"line_end":2234,"column_start":12,"column_end":17},"name":"abort","qualname":"<VMLogic>::abort","value":"pub fn abort(&mut Self, u32, u32, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Special import kept for compatibility with AssemblyScript contracts. Not called by smart\n contracts directly, but instead called by the code generated by AssemblyScript.","sig":null,"attributes":[{"value":"/ Special import kept for compatibility with AssemblyScript contracts. Not called by smart","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113505,"byte_end":113597,"line_start":2219,"line_end":2219,"column_start":5,"column_end":97}},{"value":"/ contracts directly, but instead called by the code generated by AssemblyScript.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113602,"byte_end":113685,"line_start":2220,"line_end":2220,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113690,"byte_end":113693,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113698,"byte_end":113710,"line_start":2222,"line_end":2222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113715,"byte_end":113718,"line_start":2223,"line_end":2223,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113723,"byte_end":113808,"line_start":2224,"line_end":2224,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113813,"byte_end":113860,"line_start":2225,"line_end":2225,"column_start":5,"column_end":52}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113865,"byte_end":113958,"line_start":2226,"line_end":2226,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113963,"byte_end":113994,"line_start":2227,"line_end":2227,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":113999,"byte_end":114074,"line_start":2228,"line_end":2228,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":114079,"byte_end":114108,"line_start":2229,"line_end":2229,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":114113,"byte_end":114116,"line_start":2230,"line_end":2230,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":114121,"byte_end":114131,"line_start":2231,"line_end":2231,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":114136,"byte_end":114139,"line_start":2232,"line_end":2232,"column_start":5,"column_end":8}},{"value":"/ `base +  log_base + log_byte * num_bytes + utf16 decoding cost`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":114144,"byte_end":114211,"line_start":2233,"line_end":2233,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117804,"byte_end":117817,"line_start":2311,"line_end":2311,"column_start":12,"column_end":25},"name":"storage_write","qualname":"<VMLogic>::storage_write","value":"pub fn storage_write(&mut Self, u64, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Writes key-value into storage.\n * If key is not in use it inserts the key-value pair and does not modify the register. Returns `0`;\n * If key is in use it inserts the key-value and copies the old value into the `register_id`. Returns `1`.","sig":null,"attributes":[{"value":"/ Writes key-value into storage.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":116573,"byte_end":116607,"line_start":2290,"line_end":2290,"column_start":5,"column_end":39}},{"value":"/ * If key is not in use it inserts the key-value pair and does not modify the register. Returns `0`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":116612,"byte_end":116715,"line_start":2291,"line_end":2291,"column_start":5,"column_end":108}},{"value":"/ * If key is in use it inserts the key-value and copies the old value into the `register_id`. Returns `1`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":116720,"byte_end":116829,"line_start":2292,"line_end":2292,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":116834,"byte_end":116837,"line_start":2293,"line_end":2293,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":116842,"byte_end":116854,"line_start":2294,"line_end":2294,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":116859,"byte_end":116862,"line_start":2295,"line_end":2295,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` or `value_len + value_ptr` exceeds the memory container or points","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":116867,"byte_end":116961,"line_start":2296,"line_end":2296,"column_start":5,"column_end":99}},{"value":"/   to an unused register it returns `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":116966,"byte_end":117029,"line_start":2297,"line_end":2297,"column_start":5,"column_end":68}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117034,"byte_end":117130,"line_start":2298,"line_end":2298,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117135,"byte_end":117165,"line_start":2299,"line_end":2299,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117170,"byte_end":117262,"line_start":2300,"line_end":2300,"column_start":5,"column_end":97}},{"value":"/ * If the length of the value exceeds `max_length_storage_value` returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117267,"byte_end":117342,"line_start":2301,"line_end":2301,"column_start":5,"column_end":80}},{"value":"/   `ValueLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117347,"byte_end":117375,"line_start":2302,"line_end":2302,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView``.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117380,"byte_end":117441,"line_start":2303,"line_end":2303,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117446,"byte_end":117449,"line_start":2304,"line_end":2304,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117454,"byte_end":117464,"line_start":2305,"line_end":2305,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117469,"byte_end":117472,"line_start":2306,"line_end":2306,"column_start":5,"column_end":8}},{"value":"/ `base + storage_write_base + storage_write_key_byte * num_key_bytes + storage_write_value_byte * num_value_bytes","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117477,"byte_end":117593,"line_start":2307,"line_end":2307,"column_start":5,"column_end":121}},{"value":"/ + get_vec_from_memory_or_register_cost x 2`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117598,"byte_end":117646,"line_start":2308,"line_end":2308,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117651,"byte_end":117654,"line_start":2309,"line_end":2309,"column_start":5,"column_end":8}},{"value":"/ If a value was evicted it costs additional `storage_write_value_evicted_byte * num_evicted_bytes + internal_write_register_cost`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":117659,"byte_end":117792,"line_start":2310,"line_end":2310,"column_start":5,"column_end":138}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":122291,"byte_end":122303,"line_start":2413,"line_end":2413,"column_start":12,"column_end":24},"name":"storage_read","qualname":"<VMLogic>::storage_read","value":"pub fn storage_read(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Reads the value stored under the given key.\n * If key is used copies the content of the value into the `register_id`, even if the content\n   is zero bytes. Returns `1`;\n * If key is not present then does not modify the register. Returns `0`;","sig":null,"attributes":[{"value":"/ Reads the value stored under the given key.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121380,"byte_end":121427,"line_start":2396,"line_end":2396,"column_start":5,"column_end":52}},{"value":"/ * If key is used copies the content of the value into the `register_id`, even if the content","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121432,"byte_end":121528,"line_start":2397,"line_end":2397,"column_start":5,"column_end":101}},{"value":"/   is zero bytes. Returns `1`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121533,"byte_end":121566,"line_start":2398,"line_end":2398,"column_start":5,"column_end":38}},{"value":"/ * If key is not present then does not modify the register. Returns `0`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121571,"byte_end":121646,"line_start":2399,"line_end":2399,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121651,"byte_end":121654,"line_start":2400,"line_end":2400,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121659,"byte_end":121671,"line_start":2401,"line_end":2401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121676,"byte_end":121679,"line_start":2402,"line_end":2402,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121684,"byte_end":121776,"line_start":2403,"line_end":2403,"column_start":5,"column_end":97}},{"value":"/   returns `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121781,"byte_end":121819,"line_start":2404,"line_end":2404,"column_start":5,"column_end":43}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121824,"byte_end":121920,"line_start":2405,"line_end":2405,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121925,"byte_end":121955,"line_start":2406,"line_end":2406,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":121960,"byte_end":122052,"line_start":2407,"line_end":2407,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":122057,"byte_end":122060,"line_start":2408,"line_end":2408,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":122065,"byte_end":122075,"line_start":2409,"line_end":2409,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":122080,"byte_end":122083,"line_start":2410,"line_end":2410,"column_start":5,"column_end":8}},{"value":"/ `base + storage_read_base + storage_read_key_byte * num_key_bytes + storage_read_value_byte + num_value_bytes","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":122088,"byte_end":122201,"line_start":2411,"line_end":2411,"column_start":5,"column_end":118}},{"value":"/  cost to read key from register + cost to write value into register`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":122206,"byte_end":122279,"line_start":2412,"line_end":2412,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124545,"byte_end":124559,"line_start":2458,"line_end":2458,"column_start":12,"column_end":26},"name":"storage_remove","qualname":"<VMLogic>::storage_remove","value":"pub fn storage_remove(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Removes the value stored under the given key.\n * If key is used, removes the key-value from the trie and copies the content of the value\n   into the `register_id`, even if the content is zero bytes. Returns `1`;\n * If key is not present then does not modify the register. Returns `0`.","sig":null,"attributes":[{"value":"/ Removes the value stored under the given key.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123450,"byte_end":123499,"line_start":2439,"line_end":2439,"column_start":5,"column_end":54}},{"value":"/ * If key is used, removes the key-value from the trie and copies the content of the value","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123504,"byte_end":123597,"line_start":2440,"line_end":2440,"column_start":5,"column_end":98}},{"value":"/   into the `register_id`, even if the content is zero bytes. Returns `1`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123602,"byte_end":123679,"line_start":2441,"line_end":2441,"column_start":5,"column_end":82}},{"value":"/ * If key is not present then does not modify the register. Returns `0`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123684,"byte_end":123759,"line_start":2442,"line_end":2442,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123764,"byte_end":123767,"line_start":2443,"line_end":2443,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123772,"byte_end":123784,"line_start":2444,"line_end":2444,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123789,"byte_end":123792,"line_start":2445,"line_end":2445,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123797,"byte_end":123889,"line_start":2446,"line_end":2446,"column_start":5,"column_end":97}},{"value":"/   returns `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123894,"byte_end":123932,"line_start":2447,"line_end":2447,"column_start":5,"column_end":43}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":123937,"byte_end":124016,"line_start":2448,"line_end":2448,"column_start":5,"column_end":84}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124021,"byte_end":124117,"line_start":2449,"line_end":2449,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124122,"byte_end":124152,"line_start":2450,"line_end":2450,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124157,"byte_end":124249,"line_start":2451,"line_end":2451,"column_start":5,"column_end":97}},{"value":"/ * If called as view function returns `ProhibitedInView``.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124254,"byte_end":124315,"line_start":2452,"line_end":2452,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124320,"byte_end":124323,"line_start":2453,"line_end":2453,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124328,"byte_end":124338,"line_start":2454,"line_end":2454,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124343,"byte_end":124346,"line_start":2455,"line_end":2455,"column_start":5,"column_end":8}},{"value":"/ `base + storage_remove_base + storage_remove_key_byte * num_key_bytes + storage_remove_ret_value_byte * num_value_bytes","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124351,"byte_end":124474,"line_start":2456,"line_end":2456,"column_start":5,"column_end":128}},{"value":"/ + cost to read the key + cost to write the value`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":124479,"byte_end":124533,"line_start":2457,"line_end":2457,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":127016,"byte_end":127031,"line_start":2514,"line_end":2514,"column_start":12,"column_end":27},"name":"storage_has_key","qualname":"<VMLogic>::storage_has_key","value":"pub fn storage_has_key(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Checks if there is a key-value pair.\n * If key is used returns `1`, even if the value is zero bytes;\n * Otherwise returns `0`.","sig":null,"attributes":[{"value":"/ Checks if there is a key-value pair.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126506,"byte_end":126546,"line_start":2502,"line_end":2502,"column_start":5,"column_end":45}},{"value":"/ * If key is used returns `1`, even if the value is zero bytes;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126551,"byte_end":126617,"line_start":2503,"line_end":2503,"column_start":5,"column_end":71}},{"value":"/ * Otherwise returns `0`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126622,"byte_end":126650,"line_start":2504,"line_end":2504,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126655,"byte_end":126658,"line_start":2505,"line_end":2505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126663,"byte_end":126675,"line_start":2506,"line_end":2506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126680,"byte_end":126683,"line_start":2507,"line_end":2507,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container it returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126688,"byte_end":126781,"line_start":2508,"line_end":2508,"column_start":5,"column_end":98}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126786,"byte_end":126878,"line_start":2509,"line_end":2509,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126883,"byte_end":126886,"line_start":2510,"line_end":2510,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126891,"byte_end":126901,"line_start":2511,"line_end":2511,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126906,"byte_end":126909,"line_start":2512,"line_end":2512,"column_start":5,"column_end":8}},{"value":"/ `base + storage_has_key_base + storage_has_key_byte * num_bytes + cost of reading key`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":126914,"byte_end":127004,"line_start":2513,"line_end":2513,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129357,"byte_end":129376,"line_start":2567,"line_end":2567,"column_start":12,"column_end":31},"name":"storage_iter_prefix","qualname":"<VMLogic>::storage_iter_prefix","value":"pub fn storage_iter_prefix(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Creates an iterator object inside the host. Returns the identifier that uniquely\n differentiates the given iterator from other iterators that can be simultaneously created.\n * It iterates over the keys that have the provided prefix. The order of iteration is defined\n   by the lexicographic order of the bytes in the keys;\n * If there are no keys, it creates an empty iterator, see below on empty iterators.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128473,"byte_end":128487,"line_start":2550,"line_end":2550,"column_start":5,"column_end":19}},{"value":"/ Creates an iterator object inside the host. Returns the identifier that uniquely","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128492,"byte_end":128576,"line_start":2551,"line_end":2551,"column_start":5,"column_end":89}},{"value":"/ differentiates the given iterator from other iterators that can be simultaneously created.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128581,"byte_end":128675,"line_start":2552,"line_end":2552,"column_start":5,"column_end":99}},{"value":"/ * It iterates over the keys that have the provided prefix. The order of iteration is defined","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128680,"byte_end":128776,"line_start":2553,"line_end":2553,"column_start":5,"column_end":101}},{"value":"/   by the lexicographic order of the bytes in the keys;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128781,"byte_end":128839,"line_start":2554,"line_end":2554,"column_start":5,"column_end":63}},{"value":"/ * If there are no keys, it creates an empty iterator, see below on empty iterators.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128844,"byte_end":128931,"line_start":2555,"line_end":2555,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128936,"byte_end":128939,"line_start":2556,"line_end":2556,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128944,"byte_end":128956,"line_start":2557,"line_end":2557,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128961,"byte_end":128964,"line_start":2558,"line_end":2558,"column_start":5,"column_end":8}},{"value":"/ * If `prefix_len + prefix_ptr` exceeds the memory container it returns","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":128969,"byte_end":129043,"line_start":2559,"line_end":2559,"column_start":5,"column_end":79}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129048,"byte_end":129078,"line_start":2560,"line_end":2560,"column_start":5,"column_end":35}},{"value":"/ * If the length of the prefix exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129083,"byte_end":129178,"line_start":2561,"line_end":2561,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129183,"byte_end":129186,"line_start":2562,"line_end":2562,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129191,"byte_end":129201,"line_start":2563,"line_end":2563,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129206,"byte_end":129209,"line_start":2564,"line_end":2564,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_create_prefix_base + storage_iter_create_key_byte * num_prefix_bytes","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129214,"byte_end":129307,"line_start":2565,"line_end":2565,"column_start":5,"column_end":98}},{"value":"/  cost of reading the prefix`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129312,"byte_end":129345,"line_start":2566,"line_end":2566,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130559,"byte_end":130577,"line_start":2590,"line_end":2590,"column_start":12,"column_end":30},"name":"storage_iter_range","qualname":"<VMLogic>::storage_iter_range","value":"pub fn storage_iter_range(&mut Self, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Iterates over all key-values such that keys are between `start` and `end`, where `start` is\n inclusive and `end` is exclusive. Unless lexicographically `start < end`, it creates an\n empty iterator. Note, this definition allows for `start` or `end` keys to not actually exist\n on the given trie.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129584,"byte_end":129598,"line_start":2573,"line_end":2573,"column_start":5,"column_end":19}},{"value":"/ Iterates over all key-values such that keys are between `start` and `end`, where `start` is","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129603,"byte_end":129698,"line_start":2574,"line_end":2574,"column_start":5,"column_end":100}},{"value":"/ inclusive and `end` is exclusive. Unless lexicographically `start < end`, it creates an","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129703,"byte_end":129794,"line_start":2575,"line_end":2575,"column_start":5,"column_end":96}},{"value":"/ empty iterator. Note, this definition allows for `start` or `end` keys to not actually exist","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129799,"byte_end":129895,"line_start":2576,"line_end":2576,"column_start":5,"column_end":101}},{"value":"/ on the given trie.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129900,"byte_end":129922,"line_start":2577,"line_end":2577,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129927,"byte_end":129930,"line_start":2578,"line_end":2578,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129935,"byte_end":129947,"line_start":2579,"line_end":2579,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129952,"byte_end":129955,"line_start":2580,"line_end":2580,"column_start":5,"column_end":8}},{"value":"/ * If `start_len + start_ptr` or `end_len + end_ptr` exceeds the memory container or points to","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":129960,"byte_end":130057,"line_start":2581,"line_end":2581,"column_start":5,"column_end":102}},{"value":"/   an unused register it returns `MemoryAccessViolation`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130062,"byte_end":130122,"line_start":2582,"line_end":2582,"column_start":5,"column_end":65}},{"value":"/ * If the length of the `start` exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130127,"byte_end":130223,"line_start":2583,"line_end":2583,"column_start":5,"column_end":101}},{"value":"/ * If the length of the `end` exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130228,"byte_end":130322,"line_start":2584,"line_end":2584,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130327,"byte_end":130330,"line_start":2585,"line_end":2585,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130335,"byte_end":130345,"line_start":2586,"line_end":2586,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130350,"byte_end":130353,"line_start":2587,"line_end":2587,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_create_range_base + storage_iter_create_from_byte * num_from_bytes","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130358,"byte_end":130449,"line_start":2588,"line_end":2588,"column_start":5,"column_end":96}},{"value":"/  + storage_iter_create_to_byte * num_to_bytes + reading from prefix + reading to prefix`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130454,"byte_end":130547,"line_start":2589,"line_end":2589,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132609,"byte_end":132626,"line_start":2630,"line_end":2630,"column_start":12,"column_end":29},"name":"storage_iter_next","qualname":"<VMLogic>::storage_iter_next","value":"pub fn storage_iter_next(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Advances iterator and saves the next key and value in the register.\n * If iterator is not empty (after calling next it points to a key-value), copies the key\n   into `key_register_id` and value into `value_register_id` and returns `1`;\n * If iterator is empty returns `0`;\n This allows us to iterate over the keys that have zero bytes stored in values.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130859,"byte_end":130873,"line_start":2602,"line_end":2602,"column_start":5,"column_end":19}},{"value":"/ Advances iterator and saves the next key and value in the register.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130878,"byte_end":130949,"line_start":2603,"line_end":2603,"column_start":5,"column_end":76}},{"value":"/ * If iterator is not empty (after calling next it points to a key-value), copies the key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":130954,"byte_end":131046,"line_start":2604,"line_end":2604,"column_start":5,"column_end":97}},{"value":"/   into `key_register_id` and value into `value_register_id` and returns `1`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131051,"byte_end":131131,"line_start":2605,"line_end":2605,"column_start":5,"column_end":85}},{"value":"/ * If iterator is empty returns `0`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131136,"byte_end":131175,"line_start":2606,"line_end":2606,"column_start":5,"column_end":44}},{"value":"/ This allows us to iterate over the keys that have zero bytes stored in values.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131180,"byte_end":131262,"line_start":2607,"line_end":2607,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131267,"byte_end":131270,"line_start":2608,"line_end":2608,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131275,"byte_end":131287,"line_start":2609,"line_end":2609,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131292,"byte_end":131295,"line_start":2610,"line_end":2610,"column_start":5,"column_end":8}},{"value":"/ * If `key_register_id == value_register_id` returns `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131300,"byte_end":131380,"line_start":2611,"line_end":2611,"column_start":5,"column_end":85}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131385,"byte_end":131464,"line_start":2612,"line_end":2612,"column_start":5,"column_end":84}},{"value":"/ * If `iterator_id` does not correspond to an existing iterator returns `InvalidIteratorId`;","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131469,"byte_end":131564,"line_start":2613,"line_end":2613,"column_start":5,"column_end":100}},{"value":"/ * If between the creation of the iterator and calling `storage_iter_next` the range over","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131569,"byte_end":131661,"line_start":2614,"line_end":2614,"column_start":5,"column_end":97}},{"value":"/   which it iterates was modified returns `IteratorWasInvalidated`. Specifically, if","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131666,"byte_end":131753,"line_start":2615,"line_end":2615,"column_start":5,"column_end":92}},{"value":"/   `storage_write` or `storage_remove` was invoked on the key key such that:","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131758,"byte_end":131837,"line_start":2616,"line_end":2616,"column_start":5,"column_end":84}},{"value":"/   * in case of `storage_iter_prefix`. `key` has the given prefix and:","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131842,"byte_end":131915,"line_start":2617,"line_end":2617,"column_start":5,"column_end":78}},{"value":"/     * Iterator was not called next yet.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131920,"byte_end":131963,"line_start":2618,"line_end":2618,"column_start":5,"column_end":48}},{"value":"/     * `next` was already called on the iterator and it is currently pointing at the `key`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":131968,"byte_end":132061,"line_start":2619,"line_end":2619,"column_start":5,"column_end":98}},{"value":"/       `curr` such that `curr <= key`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132066,"byte_end":132107,"line_start":2620,"line_end":2620,"column_start":5,"column_end":46}},{"value":"/   * in case of `storage_iter_range`. `start<=key<end` and:","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132112,"byte_end":132174,"line_start":2621,"line_end":2621,"column_start":5,"column_end":67}},{"value":"/     * Iterator was not called `next` yet.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132179,"byte_end":132224,"line_start":2622,"line_end":2622,"column_start":5,"column_end":50}},{"value":"/     * `next` was already called on the iterator and it is currently pointing at the key","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132229,"byte_end":132320,"line_start":2623,"line_end":2623,"column_start":5,"column_end":96}},{"value":"/       `curr` such that `curr<=key<end`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132325,"byte_end":132368,"line_start":2624,"line_end":2624,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132373,"byte_end":132376,"line_start":2625,"line_end":2625,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132381,"byte_end":132391,"line_start":2626,"line_end":2626,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132396,"byte_end":132399,"line_start":2627,"line_end":2627,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_next_base + storage_iter_next_key_byte * num_key_bytes + storage_iter_next_value_byte * num_value_bytes","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132404,"byte_end":132532,"line_start":2628,"line_end":2628,"column_start":5,"column_end":133}},{"value":"/  + writing key to register + writing value to register`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132537,"byte_end":132597,"line_start":2629,"line_end":2629,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":133209,"byte_end":133243,"line_start":2646,"line_end":2646,"column_start":12,"column_end":46},"name":"compute_outcome_and_distribute_gas","qualname":"<VMLogic>::compute_outcome_and_distribute_gas","value":"pub fn compute_outcome_and_distribute_gas(Self) -> VMOutcome","parent":null,"children":[],"decl_id":null,"docs":" Computes the outcome of the execution.","sig":null,"attributes":[{"value":"/ Computes the outcome of the execution.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132902,"byte_end":132944,"line_start":2641,"line_end":2641,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132949,"byte_end":132952,"line_start":2642,"line_end":2642,"column_start":5,"column_end":8}},{"value":"/ If `FunctionCallWeight` protocol feature (127) is enabled, unused gas will be","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":132957,"byte_end":133038,"line_start":2643,"line_end":2643,"column_start":5,"column_end":86}},{"value":"/ distributed to functions that specify a gas weight. If there are no functions with","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":133043,"byte_end":133129,"line_start":2644,"line_end":2644,"column_start":5,"column_end":91}},{"value":"/ a gas weight, the outcome will contain unused gas as usual.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":133134,"byte_end":133197,"line_start":2645,"line_end":2645,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":134326,"byte_end":134350,"line_start":2676,"line_end":2676,"column_start":12,"column_end":36},"name":"add_contract_loading_fee","qualname":"<VMLogic>::add_contract_loading_fee","value":"pub fn add_contract_loading_fee(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":134583,"byte_end":134602,"line_start":2682,"line_end":2682,"column_start":12,"column_end":31},"name":"gas_counter_pointer","qualname":"<VMLogic>::gas_counter_pointer","value":"pub fn gas_counter_pointer(&mut Self) -> *mut FastGasCounter","parent":null,"children":[],"decl_id":null,"docs":" Gets pointer to the fast gas counter.\n","sig":null,"attributes":[{"value":"/ Gets pointer to the fast gas counter.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":134530,"byte_end":134571,"line_start":2681,"line_end":2681,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":134755,"byte_end":134772,"line_start":2687,"line_end":2687,"column_start":12,"column_end":29},"name":"process_gas_limit","qualname":"<VMLogic>::process_gas_limit","value":"pub fn process_gas_limit(&mut Self) -> HostError","parent":null,"children":[],"decl_id":null,"docs":" Properly handles gas limit exceeded error.\n","sig":null,"attributes":[{"value":"/ Properly handles gas limit exceeded error.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":134697,"byte_end":134743,"line_start":2686,"line_end":2686,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135031,"byte_end":135040,"line_start":2695,"line_end":2695,"column_start":12,"column_end":21},"name":"VMOutcome","qualname":"::logic::VMOutcome","value":"VMOutcome { balance, storage_usage, return_data, burnt_gas, used_gas, logs, profile, action_receipts }","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135051,"byte_end":135058,"line_start":2696,"line_end":2696,"column_start":9,"column_end":16},"name":"balance","qualname":"::logic::VMOutcome::balance","value":"u128","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135077,"byte_end":135090,"line_start":2697,"line_end":2697,"column_start":9,"column_end":22},"name":"storage_usage","qualname":"::logic::VMOutcome::storage_usage","value":"u64","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135114,"byte_end":135125,"line_start":2698,"line_end":2698,"column_start":9,"column_end":20},"name":"return_data","qualname":"::logic::VMOutcome::return_data","value":"types::ReturnData","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135147,"byte_end":135156,"line_start":2699,"line_end":2699,"column_start":9,"column_end":18},"name":"burnt_gas","qualname":"::logic::VMOutcome::burnt_gas","value":"u64","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135171,"byte_end":135179,"line_start":2700,"line_end":2700,"column_start":9,"column_end":17},"name":"used_gas","qualname":"::logic::VMOutcome::used_gas","value":"u64","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135194,"byte_end":135198,"line_start":2701,"line_end":2701,"column_start":9,"column_end":13},"name":"logs","qualname":"::logic::VMOutcome::logs","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135272,"byte_end":135279,"line_start":2703,"line_end":2703,"column_start":9,"column_end":16},"name":"profile","qualname":"::logic::VMOutcome::profile","value":"near_primitives_core::profile::ProfileData","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":" Data collected from making a contract call\n","sig":null,"attributes":[{"value":"/ Data collected from making a contract call","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135217,"byte_end":135263,"line_start":2702,"line_end":2702,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135302,"byte_end":135317,"line_start":2704,"line_end":2704,"column_start":9,"column_end":24},"name":"action_receipts","qualname":"::logic::VMOutcome::action_receipts","value":"std::vec::Vec<(near_primitives_core::types::AccountId, receipt_manager::ReceiptMetadata)>","parent":{"krate":0,"index":1143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":425},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mocks","qualname":"::mocks","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mod.rs","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":492}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":426},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock_external","qualname":"::mocks::mock_external","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":1158},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":1166},{"krate":0,"index":1170},{"krate":0,"index":1176},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1252},{"krate":0,"index":1258},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1323},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1393},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1492},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1553},{"krate":0,"index":1615},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1636},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1707},{"krate":0,"index":1729},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1837},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1910},{"krate":0,"index":1951},{"krate":0,"index":1953}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136348,"byte_end":136362,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"MockedExternal","qualname":"::mocks::mock_external::MockedExternal","value":"MockedExternal { fake_trie, validators }","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161}],"decl_id":null,"docs":" Emulates the trie and the mock handling code.\n","sig":null,"attributes":[{"value":"/ Emulates the trie and the mock handling code.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136287,"byte_end":136336,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136373,"byte_end":136382,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"name":"fake_trie","qualname":"::mocks::mock_external::MockedExternal::fake_trie","value":"std::collections::HashMap<std::vec::Vec<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136419,"byte_end":136429,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"validators","qualname":"::mocks::mock_external::MockedExternal::validators","value":"std::collections::HashMap<near_primitives_core::types::AccountId, u128>","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":464},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136495,"byte_end":136509,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"MockedValuePtr","qualname":"::mocks::mock_external::MockedValuePtr","value":"MockedValuePtr {  }","parent":null,"children":[{"krate":0,"index":465}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136568,"byte_end":136571,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<MockedValuePtr>::new","value":"pub fn new<T>(T) -> Self where T: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136936,"byte_end":136939,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<MockedExternal>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":138596,"byte_end":138603,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"Receipt","qualname":"::mocks::mock_external::Receipt","value":"Receipt {  }","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":138764,"byte_end":138777,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"CreateAccount","qualname":"::mocks::mock_external::Action::CreateAccount","value":"Action::CreateAccount","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":138783,"byte_end":138797,"line_start":106,"line_end":106,"column_start":5,"column_end":19},"name":"DeployContract","qualname":"::mocks::mock_external::Action::DeployContract","value":"Action::DeployContract(DeployContractAction)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":138825,"byte_end":138837,"line_start":107,"line_end":107,"column_start":5,"column_end":17},"name":"FunctionCall","qualname":"::mocks::mock_external::Action::FunctionCall","value":"Action::FunctionCall(FunctionCallAction)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":138863,"byte_end":138871,"line_start":108,"line_end":108,"column_start":5,"column_end":13},"name":"Transfer","qualname":"::mocks::mock_external::Action::Transfer","value":"Action::Transfer(TransferAction)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":138893,"byte_end":138898,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Stake","qualname":"::mocks::mock_external::Action::Stake","value":"Action::Stake(StakeAction)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":138917,"byte_end":138937,"line_start":110,"line_end":110,"column_start":5,"column_end":25},"name":"AddKeyWithFullAccess","qualname":"::mocks::mock_external::Action::AddKeyWithFullAccess","value":"Action::AddKeyWithFullAccess(AddKeyWithFullAccessAction)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":138971,"byte_end":138993,"line_start":111,"line_end":111,"column_start":5,"column_end":27},"name":"AddKeyWithFunctionCall","qualname":"::mocks::mock_external::Action::AddKeyWithFunctionCall","value":"Action::AddKeyWithFunctionCall(AddKeyWithFunctionCallAction)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":139029,"byte_end":139038,"line_start":112,"line_end":112,"column_start":5,"column_end":14},"name":"DeleteKey","qualname":"::mocks::mock_external::Action::DeleteKey","value":"Action::DeleteKey(DeleteKeyAction)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":139061,"byte_end":139074,"line_start":113,"line_end":113,"column_start":5,"column_end":18},"name":"DeleteAccount","qualname":"::mocks::mock_external::Action::DeleteAccount","value":"Action::DeleteAccount(DeleteAccountAction)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":138751,"byte_end":138757,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Action","qualname":"::mocks::mock_external::Action","value":"pub enum Action {\n    CreateAccount,\n    DeployContract(DeployContractAction),\n    FunctionCall(FunctionCallAction),\n    Transfer(TransferAction),\n    Stake(StakeAction),\n    AddKeyWithFullAccess(AddKeyWithFullAccessAction),\n    AddKeyWithFunctionCall(AddKeyWithFunctionCallAction),\n    DeleteKey(DeleteKeyAction),\n    DeleteAccount(DeleteAccountAction),\n}","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1249}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":139159,"byte_end":139179,"line_start":117,"line_end":117,"column_start":12,"column_end":32},"name":"DeployContractAction","qualname":"::mocks::mock_external::DeployContractAction","value":"DeployContractAction { code }","parent":null,"children":[{"krate":0,"index":1316}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":139190,"byte_end":139194,"line_start":118,"line_end":118,"column_start":9,"column_end":13},"name":"code","qualname":"::mocks::mock_external::DeployContractAction::code","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":139267,"byte_end":139285,"line_start":122,"line_end":122,"column_start":12,"column_end":30},"name":"FunctionCallAction","qualname":"::mocks::mock_external::FunctionCallAction","value":"FunctionCallAction {  }","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1369},{"krate":0,"index":1370}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":139874,"byte_end":139888,"line_start":136,"line_end":136,"column_start":12,"column_end":26},"name":"TransferAction","qualname":"::mocks::mock_external::TransferAction","value":"TransferAction {  }","parent":null,"children":[{"krate":0,"index":1485}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":139975,"byte_end":139986,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"StakeAction","qualname":"::mocks::mock_external::StakeAction","value":"StakeAction {  }","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1619}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":140156,"byte_end":140182,"line_start":148,"line_end":148,"column_start":12,"column_end":38},"name":"AddKeyWithFullAccessAction","qualname":"::mocks::mock_external::AddKeyWithFullAccessAction","value":"AddKeyWithFullAccessAction {  }","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1621}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":140348,"byte_end":140376,"line_start":155,"line_end":155,"column_start":12,"column_end":40},"name":"AddKeyWithFunctionCallAction","qualname":"::mocks::mock_external::AddKeyWithFunctionCallAction","value":"AddKeyWithFunctionCallAction {  }","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1821}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":140693,"byte_end":140708,"line_start":166,"line_end":166,"column_start":12,"column_end":27},"name":"DeleteKeyAction","qualname":"::mocks::mock_external::DeleteKeyAction","value":"DeleteKeyAction {  }","parent":null,"children":[{"krate":0,"index":1901}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":140858,"byte_end":140877,"line_start":172,"line_end":172,"column_start":12,"column_end":31},"name":"DeleteAccountAction","qualname":"::mocks::mock_external::DeleteAccountAction","value":"DeleteAccountAction {  }","parent":null,"children":[{"krate":0,"index":1903}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":492},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_memory.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock_memory","qualname":"::mocks::mock_memory","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_memory.rs","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":496}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_memory.rs","byte_start":140968,"byte_end":140980,"line_start":4,"line_end":4,"column_start":12,"column_end":24},"name":"MockedMemory","qualname":"::mocks::mock_memory::MockedMemory","value":"MockedMemory {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142460,"byte_end":142475,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"ReceiptMetadata","qualname":"::receipt_manager::ReceiptMetadata","value":"ReceiptMetadata { output_data_receivers, input_data_ids, actions }","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142537,"byte_end":142558,"line_start":23,"line_end":23,"column_start":9,"column_end":30},"name":"output_data_receivers","qualname":"::receipt_manager::ReceiptMetadata::output_data_receivers","value":"std::vec::Vec<near_primitives::receipt::DataReceiver>","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" If present, where to route the output data\n","sig":null,"attributes":[{"value":"/ If present, where to route the output data","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142482,"byte_end":142528,"line_start":22,"line_end":22,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1960},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142959,"byte_end":142973,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"name":"input_data_ids","qualname":"::receipt_manager::ReceiptMetadata::input_data_ids","value":"std::vec::Vec<near_primitives_core::hash::CryptoHash>","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" A list of the input data dependencies for this Receipt to process.\n If all `input_data_ids` for this receipt are delivered to the account\n that means we have all the `ReceivedData` input which will be than converted to a\n `PromiseResult::Successful(value)` or `PromiseResult::Failed`\n depending on `ReceivedData` is `Some(_)` or `None`\n","sig":null,"attributes":[{"value":"/ A list of the input data dependencies for this Receipt to process.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142583,"byte_end":142653,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ If all `input_data_ids` for this receipt are delivered to the account","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142658,"byte_end":142731,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ that means we have all the `ReceivedData` input which will be than converted to a","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142736,"byte_end":142821,"line_start":26,"line_end":26,"column_start":5,"column_end":90}},{"value":"/ `PromiseResult::Successful(value)` or `PromiseResult::Failed`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142826,"byte_end":142891,"line_start":27,"line_end":27,"column_start":5,"column_end":70}},{"value":"/ depending on `ReceivedData` is `Some(_)` or `None`","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142896,"byte_end":142950,"line_start":28,"line_end":28,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":143072,"byte_end":143079,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"actions","qualname":"::receipt_manager::ReceiptMetadata::actions","value":"std::vec::Vec<near_primitives::transaction::Action>","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" A list of actions to process when all input_data_ids are filled\n","sig":null,"attributes":[{"value":"/ A list of actions to process when all input_data_ids are filled","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":142996,"byte_end":143063,"line_start":30,"line_end":30,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":613},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_with","qualname":"::serde_with","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":636},{"krate":0,"index":655},{"krate":0,"index":677},{"krate":0,"index":715},{"krate":0,"index":737}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":614},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":157852,"byte_end":157867,"line_start":2,"line_end":2,"column_start":9,"column_end":24},"name":"bytes_as_base64","qualname":"::serde_with::bytes_as_base64","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":633}],"decl_id":null,"docs":" Serialize `Vec<u8>` as base64 encoding.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as base64 encoding.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":157800,"byte_end":157843,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":631},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":157968,"byte_end":157977,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_base64::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":633},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":158150,"byte_end":158161,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_base64::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":636},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":158443,"byte_end":158455,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"bytes_as_str","qualname":"::serde_with::bytes_as_str","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":652}],"decl_id":null,"docs":" Serialize `Vec<u8>` as `String`.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as `String`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":158398,"byte_end":158434,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":158531,"byte_end":158540,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_str::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":652},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":158746,"byte_end":158757,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_str::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":655},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":158998,"byte_end":159013,"line_start":43,"line_end":43,"column_start":9,"column_end":24},"name":"bytes_as_base58","qualname":"::serde_with::bytes_as_base58","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":674}],"decl_id":null,"docs":" Serialize `Vec<u8>` as base58 encoding.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as base58 encoding.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":158946,"byte_end":158989,"line_start":42,"line_end":42,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":672},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":159114,"byte_end":159123,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_base58::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":674},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":159308,"byte_end":159319,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_base58::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":677},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":159620,"byte_end":159636,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"vec_bytes_as_str","qualname":"::serde_with::vec_bytes_as_str","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":712}],"decl_id":null,"docs":" Serialize `Vec<Vec<u8>>` as `Vec<String>`.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<Vec<u8>>` as `Vec<String>`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":159565,"byte_end":159611,"line_start":63,"line_end":63,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":702},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":159796,"byte_end":159805,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::vec_bytes_as_str::serialize","value":"pub fn serialize<S>(&Vec<Vec<u8>>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":712},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":160758,"byte_end":160769,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::vec_bytes_as_str::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<Vec<u8>>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":715},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":160949,"byte_end":160964,"line_start":111,"line_end":111,"column_start":9,"column_end":24},"name":"u128_dec_format","qualname":"::serde_with::u128_dec_format","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":734}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":732},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":161080,"byte_end":161089,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::u128_dec_format::serialize","value":"pub fn serialize<S>(&u128, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":734},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":161258,"byte_end":161269,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::u128_dec_format::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u128, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":737},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":161508,"byte_end":161534,"line_start":132,"line_end":132,"column_start":9,"column_end":35},"name":"u128_dec_format_compatible","qualname":"::serde_with::u128_dec_format_compatible","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":2000},{"krate":0,"index":1993},{"krate":0,"index":751}],"decl_id":null,"docs":" This in an extension to `u128_dec_format` that serves a compatibility layer role to\n deserialize u128 from a \"small\" JSON number (u64).","sig":null,"attributes":[{"value":"/ This in an extension to `u128_dec_format` that serves a compatibility layer role to","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":161541,"byte_end":161628,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/ deserialize u128 from a \"small\" JSON number (u64).","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":161633,"byte_end":161687,"line_start":134,"line_end":134,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":161692,"byte_end":161695,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ It is unfortunate that we cannot enable \"arbitrary_precision\" feature in","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":161700,"byte_end":161776,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ serde_json due to a bug: <https://github.com/serde-rs/json/issues/505>.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":161781,"byte_end":161856,"line_start":137,"line_end":137,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":751},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":162083,"byte_end":162094,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::u128_dec_format_compatible::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u128, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":754},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":2007},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2033},{"krate":0,"index":2084},{"krate":0,"index":767},{"krate":0,"index":2089},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2114}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":763},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162502,"byte_end":162511,"line_start":5,"line_end":5,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::types::PublicKey","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":764},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162532,"byte_end":162544,"line_start":6,"line_end":6,"column_start":10,"column_end":22},"name":"PromiseIndex","qualname":"::types::PromiseIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":765},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162561,"byte_end":162573,"line_start":7,"line_end":7,"column_start":10,"column_end":22},"name":"ReceiptIndex","qualname":"::types::ReceiptIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":766},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162590,"byte_end":162603,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"IteratorIndex","qualname":"::types::IteratorIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162796,"byte_end":162801,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Value","qualname":"::types::ReturnData::Value","value":"ReturnData::Value(Vec<u8>)","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Method returned some value or data.\n","sig":null,"attributes":[{"value":"/ Method returned some value or data.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162697,"byte_end":162736,"line_start":12,"line_end":12,"column_start":5,"column_end":44}},{"value":"serde(with = \"crate::serde_with::bytes_as_str\")","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162741,"byte_end":162791,"line_start":13,"line_end":13,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162954,"byte_end":162966,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"name":"ReceiptIndex","qualname":"::types::ReturnData::ReceiptIndex","value":"ReturnData::ReceiptIndex(ReceiptIndex)","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" The return value of the method should be taken from the return value of another method\n identified through receipt index.\n","sig":null,"attributes":[{"value":"/ The return value of the method should be taken from the return value of another method","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162817,"byte_end":162907,"line_start":16,"line_end":16,"column_start":5,"column_end":95}},{"value":"/ identified through receipt index.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162912,"byte_end":162949,"line_start":17,"line_end":17,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163039,"byte_end":163043,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"None","qualname":"::types::ReturnData::None","value":"ReturnData::None","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":" Method hasn't returned any data or promise.\n","sig":null,"attributes":[{"value":"/ Method hasn't returned any data or promise.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162987,"byte_end":163034,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":162680,"byte_end":162690,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"ReturnData","qualname":"::types::ReturnData","value":"pub enum ReturnData { Value(Vec<u8>), ReceiptIndex(ReceiptIndex), None, }","parent":null,"children":[{"krate":0,"index":2086},{"krate":0,"index":2008},{"krate":0,"index":2011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163128,"byte_end":163136,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"as_value","qualname":"<ReturnData>::as_value","value":"pub fn as_value(Self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Function to extract value from ReturnData.\n","sig":null,"attributes":[{"value":"/ Function to extract value from ReturnData.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163070,"byte_end":163116,"line_start":25,"line_end":25,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163611,"byte_end":163619,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::types::PromiseResult::NotReady","value":"PromiseResult::NotReady","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":" Current version of the protocol never returns `PromiseResult::NotReady`.\n","sig":null,"attributes":[{"value":"/ Current version of the protocol never returns `PromiseResult::NotReady`.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163530,"byte_end":163606,"line_start":38,"line_end":38,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163680,"byte_end":163690,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"Successful","qualname":"::types::PromiseResult::Successful","value":"PromiseResult::Successful(Vec<u8>)","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_str\")","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163625,"byte_end":163675,"line_start":40,"line_end":40,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163705,"byte_end":163711,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Failed","qualname":"::types::PromiseResult::Failed","value":"PromiseResult::Failed","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163510,"byte_end":163523,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"name":"PromiseResult","qualname":"::types::PromiseResult","value":"pub enum PromiseResult { NotReady, Successful(Vec<u8>), Failed, }","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2165},{"krate":0,"index":2092}],"decl_id":null,"docs":" When there is a callback attached to one or more contract calls the execution results of these\n calls are available to the contract invoked through the callback.\n","sig":null,"attributes":[{"value":"/ When there is a callback attached to one or more contract calls the execution results of these","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163280,"byte_end":163378,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ calls are available to the contract invoked through the callback.","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163379,"byte_end":163448,"line_start":35,"line_end":35,"column_start":1,"column_end":70}}]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3941,"byte_end":3950,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":12608,"byte_end":12618,"line_start":65,"line_end":65,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":12733,"byte_end":12743,"line_start":71,"line_end":71,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":28237,"byte_end":28244,"line_start":103,"line_end":103,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":1142},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":370},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135382,"byte_end":135391,"line_start":2707,"line_end":2707,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136540,"byte_end":136554,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136718,"byte_end":136732,"line_start":29,"line_end":29,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136908,"byte_end":136922,"line_start":39,"line_end":39,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":137066,"byte_end":137080,"line_start":48,"line_end":48,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_memory.rs","byte_start":141005,"byte_end":141017,"line_start":6,"line_end":6,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":144197,"byte_end":144211,"line_start":67,"line_end":67,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":160198,"byte_end":160213,"line_start":84,"line_end":84,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163053,"byte_end":163063,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":205,"byte_end":216,"line_start":9,"line_end":9,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":237,"byte_end":242,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":425}},{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mod.rs","byte_start":135971,"byte_end":135984,"line_start":1,"line_end":1,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":426}},{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mod.rs","byte_start":135994,"byte_end":136005,"line_start":2,"line_end":2,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":492}},{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":284,"byte_end":294,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":613}},{"kind":"Mod","span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/lib.rs","byte_start":328,"byte_end":333,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":754}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/context.rs","byte_start":3941,"byte_end":3950,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":12608,"byte_end":12618,"line_start":65,"line_end":65,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/gas_counter.rs","byte_start":12733,"byte_end":12743,"line_start":71,"line_end":71,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":28237,"byte_end":28244,"line_start":103,"line_end":103,"column_start":10,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/logic.rs","byte_start":135382,"byte_end":135391,"line_start":2707,"line_end":2707,"column_start":26,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136540,"byte_end":136554,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136718,"byte_end":136732,"line_start":29,"line_end":29,"column_start":19,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":464},"to":{"krate":0,"index":65}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":136908,"byte_end":136922,"line_start":39,"line_end":39,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_external.rs","byte_start":137066,"byte_end":137080,"line_start":48,"line_end":48,"column_start":19,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1158},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/mocks/mock_memory.rs","byte_start":141005,"byte_end":141017,"line_start":6,"line_end":6,"column_start":21,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1955},"to":{"krate":0,"index":58}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/receipt_manager.rs","byte_start":144197,"byte_end":144211,"line_start":67,"line_end":67,"column_start":6,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/serde_with.rs","byte_start":160198,"byte_end":160213,"line_start":84,"line_end":84,"column_start":32,"column_end":47},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":704},"to":{"krate":27,"index":1686}},{"span":{"file_name":"/Users/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.13.0/src/types.rs","byte_start":163053,"byte_end":163063,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2007},"to":{"krate":4294967295,"index":4294967295}}]}